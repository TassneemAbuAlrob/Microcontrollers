

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 04 15:36:32 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84   000000                     
    85                           ; Version 2.20
    86                           ; Generated 12/02/2020 GMT
    87                           ; 
    88                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4620 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119   000000                     
   120                           	psect	idataBANK0
   121   00576E                     __pidataBANK0:
   122                           	callstack 0
   123                           
   124                           ;initializer for stoa@F1175
   125   00576E  28                 	db	40
   126   00576F  6E                 	db	110
   127   005770  75                 	db	117
   128   005771  6C                 	db	108
   129   005772  6C                 	db	108
   130   005773  29                 	db	41
   131   005774  00                 	db	0
   132                           
   133                           ;initializer for _LCD_INIT_STRING
   134   005775  08                 	db	8
   135   005776  0C                 	db	12
   136   005777  01                 	db	1
   137   005778  06                 	db	6
   138   000000                     _PORTAbits	set	3968
   139   000000                     _PORTBbits	set	3969
   140   000000                     _PORTD	set	3971
   141   000000                     _ADCON1	set	4033
   142   000000                     _PORTEbits	set	3972
   143   000000                     _ADRESL	set	4035
   144   000000                     _ADRESH	set	4036
   145   000000                     _ADCON2	set	4032
   146   000000                     _ADCON0	set	4034
   147   000000                     _PORTCbits	set	3970
   148   000000                     _TMR0L	set	4054
   149   000000                     _TMR0H	set	4055
   150                           
   151                           	psect	nvCOMRAM
   152   00006A                     __pnvCOMRAM:
   153                           	callstack 0
   154   00006A                     _state:
   155                           	callstack 0
   156   00006A                     	ds	2
   157   000000                     _T0CONbits	set	4053
   158   000000                     _INTCON3bits	set	4080
   159   000000                     _INTCON2bits	set	4081
   160   000000                     _ADCON0bits	set	4034
   161   000000                     _INTCON3	set	4080
   162   000000                     _INTCON2	set	4081
   163   000000                     _INTCONbits	set	4082
   164   000000                     _RCONbits	set	4048
   165   000000                     _TRISA	set	3986
   166   000000                     _PIE1	set	3997
   167   000000                     _TRISE	set	3990
   168   000000                     _TRISD	set	3989
   169   000000                     _TRISC	set	3988
   170   000000                     _TRISB	set	3987
   171   000000                     _T0CON	set	4053
   172                           
   173                           	psect	smallconst
   174   001000                     __psmallconst:
   175                           	callstack 0
   176   001000  00                 	db	0
   177   001001                     STR_1:
   178   001001  53                 	db	83	;'S'
   179   001002  65                 	db	101	;'e'
   180   001003  74                 	db	116	;'t'
   181   001004  20                 	db	32
   182   001005  63                 	db	99	;'c'
   183   001006  6C                 	db	108	;'l'
   184   001007  6F                 	db	111	;'o'
   185   001008  63                 	db	99	;'c'
   186   001009  6B                 	db	107	;'k'
   187   00100A  2C                 	db	44
   188   00100B  20                 	db	32
   189   00100C  20                 	db	32
   190   00100D  20                 	db	32
   191   00100E  70                 	db	112	;'p'
   192   00100F  72                 	db	114	;'r'
   193   001010  65                 	db	101	;'e'
   194   001011  73                 	db	115	;'s'
   195   001012  73                 	db	115	;'s'
   196   001013  20                 	db	32
   197   001014  52                 	db	82	;'R'
   198   001015  41                 	db	65	;'A'
   199   001016  20                 	db	32
   200   001017  35                 	db	53	;'5'
   201   001018  00                 	db	0
   202   001019                     STR_2:
   203   001019  54                 	db	84	;'T'
   204   00101A  69                 	db	105	;'i'
   205   00101B  6D                 	db	109	;'m'
   206   00101C  65                 	db	101	;'e'
   207   00101D  3A                 	db	58	;':'
   208   00101E  20                 	db	32
   209   00101F  25                 	db	37
   210   001020  30                 	db	48	;'0'
   211   001021  32                 	db	50	;'2'
   212   001022  64                 	db	100	;'d'
   213   001023  3A                 	db	58	;':'
   214   001024  25                 	db	37
   215   001025  30                 	db	48	;'0'
   216   001026  32                 	db	50	;'2'
   217   001027  64                 	db	100	;'d'
   218   001028  3A                 	db	58	;':'
   219   001029  25                 	db	37
   220   00102A  30                 	db	48	;'0'
   221   00102B  32                 	db	50	;'2'
   222   00102C  64                 	db	100	;'d'
   223   00102D  00                 	db	0
   224   00102E                     STR_17:
   225   00102E  25                 	db	37
   226   00102F  30                 	db	48	;'0'
   227   001030  32                 	db	50	;'2'
   228   001031  64                 	db	100	;'d'
   229   001032  3A                 	db	58	;':'
   230   001033  25                 	db	37
   231   001034  30                 	db	48	;'0'
   232   001035  32                 	db	50	;'2'
   233   001036  64                 	db	100	;'d'
   234   001037  3A                 	db	58	;':'
   235   001038  20                 	db	32
   236   001039  20                 	db	32
   237   00103A  25                 	db	37
   238   00103B  30                 	db	48	;'0'
   239   00103C  32                 	db	50	;'2'
   240   00103D  64                 	db	100	;'d'
   241   00103E  00                 	db	0
   242   00103F                     STR_7:
   243   00103F  53                 	db	83	;'S'
   244   001040  50                 	db	80	;'P'
   245   001041  3A                 	db	58	;':'
   246   001042  25                 	db	37
   247   001043  34                 	db	52	;'4'
   248   001044  2E                 	db	46
   249   001045  31                 	db	49	;'1'
   250   001046  66                 	db	102	;'f'
   251   001047  43                 	db	67	;'C'
   252   001048  20                 	db	32
   253   001049  00                 	db	0
   254   00104A                     STR_3:
   255   00104A  43                 	db	67	;'C'
   256   00104B  54                 	db	84	;'T'
   257   00104C  3A                 	db	58	;':'
   258   00104D  25                 	db	37
   259   00104E  34                 	db	52	;'4'
   260   00104F  2E                 	db	46
   261   001050  31                 	db	49	;'1'
   262   001051  66                 	db	102	;'f'
   263   001052  43                 	db	67	;'C'
   264   001053  20                 	db	32
   265   001054  00                 	db	0
   266   001055                     STR_16:
   267   001055  48                 	db	72	;'H'
   268   001056  52                 	db	82	;'R'
   269   001057  20                 	db	32
   270   001058  20                 	db	32
   271   001059  20                 	db	32
   272   00105A  00                 	db	0
   273   00105B                     STR_12:
   274   00105B  53                 	db	83	;'S'
   275   00105C  65                 	db	101	;'e'
   276   00105D  63                 	db	99	;'c'
   277   00105E  20                 	db	32
   278   00105F  20                 	db	32
   279   001060  00                 	db	0
   280   001061                     STR_14:
   281   001061  4D                 	db	77	;'M'
   282   001062  69                 	db	105	;'i'
   283   001063  6E                 	db	110	;'n'
   284   001064  20                 	db	32
   285   001065  20                 	db	32
   286   001066  00                 	db	0
   287   001067                     STR_13:
   288   001067  31                 	db	49	;'1'
   289   001068  30                 	db	48	;'0'
   290   001069  53                 	db	83	;'S'
   291   00106A  65                 	db	101	;'e'
   292   00106B  63                 	db	99	;'c'
   293   00106C  00                 	db	0
   294   00106D                     STR_15:
   295   00106D  31                 	db	49	;'1'
   296   00106E  30                 	db	48	;'0'
   297   00106F  4D                 	db	77	;'M'
   298   001070  69                 	db	105	;'i'
   299   001071  6E                 	db	110	;'n'
   300   001072  00                 	db	0
   301   001073                     STR_11:
   302   001073  4D                 	db	77	;'M'
   303   001074  44                 	db	68	;'D'
   304   001075  3A                 	db	58	;':'
   305   001076  25                 	db	37
   306   001077  73                 	db	115	;'s'
   307   001078  00                 	db	0
   308   001079                     STR_4:
   309   001079  43                 	db	67	;'C'
   310   00107A  4B                 	db	75	;'K'
   311   00107B  3A                 	db	58	;':'
   312   00107C  25                 	db	37
   313   00107D  73                 	db	115	;'s'
   314   00107E  00                 	db	0
   315   00107F                     STR_8:
   316   00107F  48                 	db	72	;'H'
   317   001080  54                 	db	84	;'T'
   318   001081  3A                 	db	58	;':'
   319   001082  25                 	db	37
   320   001083  73                 	db	115	;'s'
   321   001084  00                 	db	0
   322   001085                     STR_24:
   323   001085  69                 	db	105	;'i'
   324   001086  6E                 	db	110	;'n'
   325   001087  66                 	db	102	;'f'
   326   001088  00                 	db	0
   327   001089                     STR_27:
   328   001089  6E                 	db	110	;'n'
   329   00108A  61                 	db	97	;'a'
   330   00108B  6E                 	db	110	;'n'
   331   00108C  00                 	db	0
   332   00108D                     STR_30:
   333   00108D  6C                 	db	108	;'l'
   334   00108E  6C                 	db	108	;'l'
   335   00108F  73                 	db	115	;'s'
   336   001090  00                 	db	0
   337   001091                     STR_6:
   338   001091  4F                 	db	79	;'O'
   339   001092  46                 	db	70	;'F'
   340   001093  46                 	db	70	;'F'
   341   001094  00                 	db	0
   342   001095                     STR_5:
   343   001095  20                 	db	32
   344   001096  4F                 	db	79	;'O'
   345   001097  4E                 	db	78	;'N'
   346   001098  00                 	db	0
   347   001099  00                 	db	0	; dummy byte at the end
   348   000000                     
   349                           ; #config settings
   350                           
   351                           	psect	cinit
   352   005270                     __pcinit:
   353                           	callstack 0
   354   005270                     start_initialization:
   355                           	callstack 0
   356   005270                     __initialization:
   357                           	callstack 0
   358                           
   359                           ; Initialize objects allocated to BANK0 (11 bytes)
   360                           ; load TBLPTR registers with __pidataBANK0
   361   005270  0E6E               	movlw	low __pidataBANK0
   362   005272  6EF6               	movwf	tblptrl,c
   363   005274  0E57               	movlw	high __pidataBANK0
   364   005276  6EF7               	movwf	tblptrh,c
   365   005278  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   366   00527A  6EF8               	movwf	tblptru,c
   367   00527C  EE00  F0EA         	lfsr	0,__pdataBANK0
   368   005280  EE10 F00B          	lfsr	1,11
   369   005284                     copy_data0:
   370   005284  0009               	tblrd		*+
   371   005286  CFF5 FFEE          	movff	tablat,postinc0
   372   00528A  50E5               	movf	postdec1,w,c
   373   00528C  50E1               	movf	fsr1l,w,c
   374   00528E  E1FA               	bnz	copy_data0
   375                           
   376                           ; Clear objects allocated to BANK1 (94 bytes)
   377   005290  EE01  F000         	lfsr	0,__pbssBANK1
   378   005294  0E5E               	movlw	94
   379   005296                     clear_0:
   380   005296  6AEE               	clrf	postinc0,c
   381   005298  06E8               	decf	wreg,f,c
   382   00529A  E1FD               	bnz	clear_0
   383                           
   384                           ; Clear objects allocated to BANK0 (10 bytes)
   385   00529C  EE00  F0F5         	lfsr	0,__pbssBANK0
   386   0052A0  0E0A               	movlw	10
   387   0052A2                     clear_1:
   388   0052A2  6AEE               	clrf	postinc0,c
   389   0052A4  06E8               	decf	wreg,f,c
   390   0052A6  E1FD               	bnz	clear_1
   391                           
   392                           ; Clear objects allocated to COMRAM (19 bytes)
   393   0052A8  EE00  F057         	lfsr	0,__pbssCOMRAM
   394   0052AC  0E13               	movlw	19
   395   0052AE                     clear_2:
   396   0052AE  6AEE               	clrf	postinc0,c
   397   0052B0  06E8               	decf	wreg,f,c
   398   0052B2  E1FD               	bnz	clear_2
   399   0052B4                     end_of_initialization:
   400                           	callstack 0
   401   0052B4                     __end_of__initialization:
   402                           	callstack 0
   403   0052B4  906C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   404   0052B6  926C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   405   0052B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   406   0052BA  6EF8               	movwf	tblptru,c
   407   0052BC  0100               	movlb	0
   408   0052BE  EF8B  F010         	goto	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMRAM
   411   000057                     __pbssCOMRAM:
   412                           	callstack 0
   413   000057                     _width:
   414                           	callstack 0
   415   000057                     	ds	2
   416   000059                     _prec:
   417                           	callstack 0
   418   000059                     	ds	2
   419   00005B                     _min:
   420                           	callstack 0
   421   00005B                     	ds	2
   422   00005D                     _snd:
   423                           	callstack 0
   424   00005D                     	ds	2
   425   00005F                     _total_time:
   426                           	callstack 0
   427   00005F                     	ds	2
   428   000061                     _oven:
   429                           	callstack 0
   430   000061                     	ds	2
   431   000063                     _Mode:
   432                           	callstack 0
   433   000063                     	ds	2
   434   000065                     _hours:
   435                           	callstack 0
   436   000065                     	ds	2
   437   000067                     _minutes:
   438                           	callstack 0
   439   000067                     	ds	2
   440   000069                     _flags:
   441                           	callstack 0
   442   000069                     	ds	1
   443                           
   444                           	psect	bssBANK0
   445   0000F5                     __pbssBANK0:
   446                           	callstack 0
   447   0000F5                     floorf@F526:
   448                           	callstack 0
   449   0000F5                     	ds	4
   450   0000F9                     ___fpclassifyf@F465:
   451                           	callstack 0
   452   0000F9                     	ds	4
   453   0000FD                     _flagToggle:
   454                           	callstack 0
   455   0000FD                     	ds	2
   456                           
   457                           	psect	dataBANK0
   458   0000EA                     __pdataBANK0:
   459                           	callstack 0
   460   0000EA                     stoa@F1175:
   461                           	callstack 0
   462   0000EA                     	ds	7
   463   0000F1                     _LCD_INIT_STRING:
   464                           	callstack 0
   465   0000F1                     	ds	4
   466                           
   467                           	psect	bssBANK1
   468   000100                     __pbssBANK1:
   469                           	callstack 0
   470   000100                     _sp:
   471                           	callstack 0
   472   000100                     	ds	4
   473   000104                     _t:
   474                           	callstack 0
   475   000104                     	ds	4
   476   000108                     _hr:
   477                           	callstack 0
   478   000108                     	ds	2
   479   00010A                     _bzr:
   480                           	callstack 0
   481   00010A                     	ds	2
   482   00010C                     _seconds:
   483                           	callstack 0
   484   00010C                     	ds	2
   485   00010E                     _dbuf:
   486                           	callstack 0
   487   00010E                     	ds	80
   488                           
   489                           	psect	cstackBANK1
   490   00015E                     __pcstackBANK1:
   491                           	callstack 0
   492   00015E                     main@Buffer:
   493                           	callstack 0
   494                           
   495                           ; 32 bytes @ 0x0
   496   00015E                     	ds	32
   497   00017E                     _main$838:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x20
   501   00017E                     	ds	2
   502   000180                     _main$844:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x22
   506   000180                     	ds	2
   507   000182                     _main$855:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x24
   511   000182                     	ds	2
   512   000184                     _main$856:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x26
   516   000184                     	ds	2
   517   000186                     _main$857:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x28
   521   000186                     	ds	2
   522   000188                     _main$858:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x2A
   526   000188                     	ds	2
   527   00018A                     _main$871:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x2C
   531   00018A                     	ds	2
   532   00018C                     _main$872:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x2E
   536   00018C                     	ds	2
   537   00018E                     _main$873:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x30
   541   00018E                     	ds	2
   542   000190                     _main$874:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x32
   546   000190                     	ds	2
   547   000192                     main@p1:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x34
   551   000192                     	ds	4
   552   000196                     main@voltage:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x38
   556   000196                     	ds	4
   557                           
   558                           	psect	cstackBANK0
   559   000080                     __pcstackBANK0:
   560                           	callstack 0
   561   000080                     efgtoa@fp:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x0
   565   000080                     	ds	2
   566   000082                     efgtoa@f:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x2
   570   000082                     	ds	4
   571   000086                     efgtoa@c:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x6
   575   000086                     	ds	1
   576   000087                     efgtoa@ne:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x7
   580   000087                     	ds	2
   581   000089                     efgtoa@p:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x9
   585   000089                     	ds	2
   586   00008B                     efgtoa@t:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xB
   590   00008B                     	ds	2
   591   00008D                     _efgtoa$1477:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0xD
   595   00008D                     	ds	2
   596   00008F                     efgtoa@pp:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0xF
   600   00008F                     	ds	1
   601   000090                     efgtoa@mode:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x10
   605   000090                     	ds	1
   606   000091                     efgtoa@nmode:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x11
   610   000091                     	ds	1
   611   000092                     efgtoa@d:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x12
   615   000092                     	ds	2
   616   000094                     efgtoa@m:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x14
   620   000094                     	ds	2
   621   000096                     efgtoa@e:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x16
   625   000096                     	ds	2
   626   000098                     efgtoa@ou:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x18
   630   000098                     	ds	4
   631   00009C                     efgtoa@w:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x1C
   635   00009C                     	ds	2
   636   00009E                     efgtoa@h:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x1E
   640   00009E                     	ds	4
   641   0000A2                     efgtoa@l:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0x22
   645   0000A2                     	ds	4
   646   0000A6                     efgtoa@i:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x26
   650   0000A6                     	ds	2
   651   0000A8                     efgtoa@sign:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x28
   655   0000A8                     	ds	1
   656   0000A9                     efgtoa@g:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x29
   660   0000A9                     	ds	4
   661   0000AD                     efgtoa@n:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x2D
   665   0000AD                     	ds	2
   666   0000AF                     efgtoa@u:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x2F
   670   0000AF                     	ds	4
   671   0000B3                     vfpfcnvrt@fp:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x33
   675   0000B3                     	ds	2
   676   0000B5                     vfpfcnvrt@fmt:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x35
   680   0000B5                     	ds	2
   681   0000B7                     vfpfcnvrt@ap:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x37
   685   0000B7                     	ds	2
   686   0000B9                     ??_vfpfcnvrt:
   687                           
   688                           ; 1 bytes @ 0x39
   689   0000B9                     	ds	3
   690   0000BC                     vfpfcnvrt@done:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x3C
   694   0000BC                     	ds	2
   695   0000BE                     _vfpfcnvrt$1510:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x3E
   699   0000BE                     	ds	2
   700   0000C0                     vfpfcnvrt@convarg:
   701                           	callstack 0
   702                           
   703                           ; 8 bytes @ 0x40
   704   0000C0                     	ds	8
   705   0000C8                     vfpfcnvrt@c:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x48
   709   0000C8                     	ds	1
   710   0000C9                     vfpfcnvrt@cp:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x49
   714   0000C9                     	ds	2
   715   0000CB                     ?_vfprintf:
   716                           	callstack 0
   717   0000CB                     vfprintf@fp:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x4B
   721   0000CB                     	ds	2
   722   0000CD                     vfprintf@fmt:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x4D
   726   0000CD                     	ds	2
   727   0000CF                     vfprintf@ap:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x4F
   731   0000CF                     	ds	2
   732   0000D1                     vfprintf@cfmt:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x51
   736   0000D1                     	ds	2
   737   0000D3                     ?_sprintf:
   738                           	callstack 0
   739   0000D3                     sprintf@s:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x53
   743   0000D3                     	ds	2
   744   0000D5                     sprintf@fmt:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x55
   748   0000D5                     	ds	8
   749   0000DD                     sprintf@ap:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x5D
   753   0000DD                     	ds	2
   754   0000DF                     sprintf@f:
   755                           	callstack 0
   756                           
   757                           ; 11 bytes @ 0x5F
   758   0000DF                     	ds	11
   759                           
   760                           	psect	cstackCOMRAM
   761   000001                     __pcstackCOMRAM:
   762                           	callstack 0
   763   000001                     ?i2___wmul:
   764                           	callstack 0
   765   000001                     ?i2___awdiv:
   766                           	callstack 0
   767   000001                     i2___wmul@multiplier:
   768                           	callstack 0
   769   000001                     i2___awdiv@dividend:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x0
   773   000001                     	ds	2
   774   000003                     i2___wmul@multiplicand:
   775                           	callstack 0
   776   000003                     i2___awdiv@divisor:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x2
   780   000003                     	ds	2
   781   000005                     i2___awdiv@counter:
   782                           	callstack 0
   783   000005                     i2___wmul@product:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x4
   787   000005                     	ds	1
   788   000006                     i2___awdiv@sign:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x5
   792   000006                     	ds	1
   793   000007                     ?i2___lwdiv:
   794                           	callstack 0
   795   000007                     i2___awdiv@quotient:
   796                           	callstack 0
   797   000007                     i2___lwdiv@dividend:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x6
   801   000007                     	ds	2
   802   000009                     i2___lwdiv@divisor:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x8
   806   000009                     	ds	2
   807   00000B                     i2___lwdiv@quotient:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0xA
   811   00000B                     	ds	2
   812   00000D                     i2___lwdiv@counter:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0xC
   816   00000D                     	ds	1
   817   00000E                     ??_clockDecreminting:
   818                           
   819                           ; 1 bytes @ 0xD
   820   00000E                     	ds	4
   821   000012                     ??_highIsr:
   822                           
   823                           ; 1 bytes @ 0x11
   824   000012                     	ds	2
   825   000014                     ??_delay_cycles:
   826   000014                     ?___fpclassifyf:
   827                           	callstack 0
   828   000014                     ?_strlen:
   829                           	callstack 0
   830   000014                     ?_isdigit:
   831                           	callstack 0
   832   000014                     ?_strncmp:
   833                           	callstack 0
   834   000014                     ?_isspace:
   835                           	callstack 0
   836   000014                     ?_read_adc_raw_no_lib:
   837                           	callstack 0
   838   000014                     ?___wmul:
   839                           	callstack 0
   840   000014                     ?___awdiv:
   841                           	callstack 0
   842   000014                     ?___fladd:
   843                           	callstack 0
   844   000014                     ?___flmul:
   845                           	callstack 0
   846   000014                     ?_labs:
   847                           	callstack 0
   848   000014                     ?___flneg:
   849                           	callstack 0
   850   000014                     ?___fltol:
   851                           	callstack 0
   852   000014                     ?___aodiv:
   853                           	callstack 0
   854   000014                     ?___aomod:
   855                           	callstack 0
   856   000014                     delay_ms@n:
   857                           	callstack 0
   858   000014                     ___wmul@multiplier:
   859                           	callstack 0
   860   000014                     ___awdiv@dividend:
   861                           	callstack 0
   862   000014                     isdigit@c:
   863                           	callstack 0
   864   000014                     isspace@c:
   865                           	callstack 0
   866   000014                     memcpy@d1:
   867                           	callstack 0
   868   000014                     fputc@c:
   869                           	callstack 0
   870   000014                     strcpy@dest:
   871                           	callstack 0
   872   000014                     strlen@s:
   873                           	callstack 0
   874   000014                     strncmp@_l:
   875                           	callstack 0
   876   000014                     ___fleq@ff1:
   877                           	callstack 0
   878   000014                     ___flneg@f1:
   879                           	callstack 0
   880   000014                     ___fltol@f1:
   881                           	callstack 0
   882   000014                     ___fladd@b:
   883                           	callstack 0
   884   000014                     ___flmul@b:
   885                           	callstack 0
   886   000014                     ___fpclassifyf@x:
   887                           	callstack 0
   888   000014                     labs@a:
   889                           	callstack 0
   890   000014                     ___aodiv@dividend:
   891                           	callstack 0
   892   000014                     ___aomod@dividend:
   893                           	callstack 0
   894                           
   895                           ; 8 bytes @ 0x13
   896   000014                     	ds	2
   897   000016                     ??_isdigit:
   898   000016                     ??_isspace:
   899   000016                     ??_read_adc_raw_no_lib:
   900   000016                     delay_ms@i:
   901                           	callstack 0
   902   000016                     ___wmul@multiplicand:
   903                           	callstack 0
   904   000016                     ___awdiv@divisor:
   905                           	callstack 0
   906   000016                     memcpy@s1:
   907                           	callstack 0
   908   000016                     fputc@fp:
   909                           	callstack 0
   910   000016                     strcpy@src:
   911                           	callstack 0
   912   000016                     strlen@a:
   913                           	callstack 0
   914   000016                     strncmp@_r:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x15
   918   000016                     	ds	1
   919   000017                     delay_cycles@n:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x16
   923   000017                     	ds	1
   924   000018                     ??_fputc:
   925   000018                     ??___fpclassifyf:
   926   000018                     ??_labs:
   927   000018                     ??___fltol:
   928   000018                     ___awdiv@counter:
   929                           	callstack 0
   930   000018                     _isspace$1575:
   931                           	callstack 0
   932   000018                     delay_cycles@x:
   933                           	callstack 0
   934   000018                     read_adc_raw_no_lib@raw_value:
   935                           	callstack 0
   936   000018                     ___wmul@product:
   937                           	callstack 0
   938   000018                     memcpy@n:
   939                           	callstack 0
   940   000018                     strcpy@s:
   941                           	callstack 0
   942   000018                     strncmp@n:
   943                           	callstack 0
   944   000018                     ___fleq@ff2:
   945                           	callstack 0
   946   000018                     ___fladd@a:
   947                           	callstack 0
   948   000018                     ___flmul@a:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x17
   952   000018                     	ds	1
   953   000019                     ___awdiv@sign:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x18
   957   000019                     	ds	1
   958   00001A                     ??_strncmp:
   959   00001A                     ??_lcd_send_nibble:
   960   00001A                     ?_atoi:
   961                           	callstack 0
   962   00001A                     ?___lwdiv:
   963                           	callstack 0
   964   00001A                     ?___xxtofl:
   965                           	callstack 0
   966   00001A                     read_adc_raw_no_lib@channel:
   967                           	callstack 0
   968   00001A                     memcpy@tmp:
   969                           	callstack 0
   970   00001A                     ___awdiv@quotient:
   971                           	callstack 0
   972   00001A                     ___lwdiv@dividend:
   973                           	callstack 0
   974   00001A                     atoi@s:
   975                           	callstack 0
   976   00001A                     strcpy@d:
   977                           	callstack 0
   978   00001A                     ___xxtofl@val:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0x19
   982   00001A                     	ds	1
   983   00001B                     lcd_send_nibble@n:
   984                           	callstack 0
   985   00001B                     memcpy@d:
   986                           	callstack 0
   987   00001B                     strncmp@l:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x1A
   991   00001B                     	ds	1
   992   00001C                     ??___fladd:
   993   00001C                     ??___flmul:
   994   00001C                     ??_atoi:
   995   00001C                     ??___fleq:
   996   00001C                     lcd_send_byte@n:
   997                           	callstack 0
   998   00001C                     ___fltol@sign1:
   999                           	callstack 0
  1000   00001C                     ___lwdiv@divisor:
  1001                           	callstack 0
  1002   00001C                     ___fpclassifyf@e:
  1003                           	callstack 0
  1004   00001C                     ___aodiv@divisor:
  1005                           	callstack 0
  1006   00001C                     ___aomod@divisor:
  1007                           	callstack 0
  1008                           
  1009                           ; 8 bytes @ 0x1B
  1010   00001C                     	ds	1
  1011   00001D                     lcd_send_byte@cm_data:
  1012                           	callstack 0
  1013   00001D                     ___fltol@exp1:
  1014                           	callstack 0
  1015   00001D                     stoa@fp:
  1016                           	callstack 0
  1017   00001D                     memcpy@s:
  1018                           	callstack 0
  1019   00001D                     fputs@s:
  1020                           	callstack 0
  1021   00001D                     strncmp@r:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x1C
  1025   00001D                     	ds	1
  1026   00001E                     ??___xxtofl:
  1027   00001E                     lcd_init@i:
  1028                           	callstack 0
  1029   00001E                     lcd_gotoxy@y:
  1030                           	callstack 0
  1031   00001E                     ___lwdiv@quotient:
  1032                           	callstack 0
  1033   00001E                     ___fpclassifyf@u:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x1D
  1037   00001E                     	ds	1
  1038   00001F                     ??_lcd_gotoxy:
  1039   00001F                     stoa@s:
  1040                           	callstack 0
  1041   00001F                     atoi@neg:
  1042                           	callstack 0
  1043   00001F                     fputs@fp:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x1E
  1047   00001F                     	ds	1
  1048   000020                     ___lwdiv@counter:
  1049                           	callstack 0
  1050   000020                     ___fladd@signs:
  1051                           	callstack 0
  1052   000020                     ___flmul@sign:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x1F
  1056   000020                     	ds	1
  1057   000021                     ??_incrementClock:
  1058   000021                     ??_decrementClock:
  1059   000021                     ??_stoa:
  1060   000021                     lcd_gotoxy@x:
  1061                           	callstack 0
  1062   000021                     ___fladd@aexp:
  1063                           	callstack 0
  1064   000021                     ___flmul@aexp:
  1065                           	callstack 0
  1066   000021                     fputs@c:
  1067                           	callstack 0
  1068   000021                     atoi@n:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x20
  1072   000021                     	ds	1
  1073   000022                     lcd_gotoxy@address:
  1074                           	callstack 0
  1075   000022                     ___fladd@bexp:
  1076                           	callstack 0
  1077   000022                     ___xxtofl@sign:
  1078                           	callstack 0
  1079   000022                     fputs@i:
  1080                           	callstack 0
  1081   000022                     ___flmul@grs:
  1082                           	callstack 0
  1083   000022                     stoa@nuls:
  1084                           	callstack 0
  1085                           
  1086                           ; 7 bytes @ 0x21
  1087   000022                     	ds	1
  1088   000023                     ??_lcd_putc:
  1089   000023                     ___fladd@grs:
  1090                           	callstack 0
  1091   000023                     ___xxtofl@exp:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x22
  1095   000023                     	ds	1
  1096   000024                     ___aodiv@counter:
  1097                           	callstack 0
  1098   000024                     ___aomod@counter:
  1099                           	callstack 0
  1100   000024                     pad@fp:
  1101                           	callstack 0
  1102   000024                     ___xxtofl@arg:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x23
  1106   000024                     	ds	1
  1107   000025                     lcd_putc@c:
  1108                           	callstack 0
  1109   000025                     ___aodiv@sign:
  1110                           	callstack 0
  1111   000025                     ___aomod@sign:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x24
  1115   000025                     	ds	1
  1116   000026                     ?_abs:
  1117                           	callstack 0
  1118   000026                     ___flmul@bexp:
  1119                           	callstack 0
  1120   000026                     lcd_puts@s:
  1121                           	callstack 0
  1122   000026                     pad@buf:
  1123                           	callstack 0
  1124   000026                     abs@a:
  1125                           	callstack 0
  1126   000026                     ___aodiv@quotient:
  1127                           	callstack 0
  1128                           
  1129                           ; 8 bytes @ 0x25
  1130   000026                     	ds	1
  1131   000027                     ___flmul@prod:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x26
  1135   000027                     	ds	1
  1136   000028                     ??_abs:
  1137   000028                     ?___fldiv:
  1138                           	callstack 0
  1139   000028                     pad@p:
  1140                           	callstack 0
  1141   000028                     ___fldiv@b:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x27
  1145   000028                     	ds	1
  1146   000029                     stoa@i:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x28
  1150   000029                     	ds	1
  1151   00002A                     ??_pad:
  1152                           
  1153                           ; 1 bytes @ 0x29
  1154   00002A                     	ds	1
  1155   00002B                     ___flmul@temp:
  1156                           	callstack 0
  1157   00002B                     pad@i:
  1158                           	callstack 0
  1159   00002B                     stoa@w:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x2A
  1163   00002B                     	ds	1
  1164   00002C                     ___fldiv@a:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x2B
  1168   00002C                     	ds	1
  1169   00002D                     ?___flsub:
  1170                           	callstack 0
  1171   00002D                     pad@w:
  1172                           	callstack 0
  1173   00002D                     stoa@cp:
  1174                           	callstack 0
  1175   00002D                     ___flge@ff1:
  1176                           	callstack 0
  1177   00002D                     ___flsub@b:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x2C
  1181   00002D                     	ds	2
  1182   00002F                     dtoa@fp:
  1183                           	callstack 0
  1184   00002F                     stoa@p:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x2E
  1188   00002F                     	ds	1
  1189   000030                     ??___fldiv:
  1190                           
  1191                           ; 1 bytes @ 0x2F
  1192   000030                     	ds	1
  1193   000031                     stoa@l:
  1194                           	callstack 0
  1195   000031                     ___flge@ff2:
  1196                           	callstack 0
  1197   000031                     ___flsub@a:
  1198                           	callstack 0
  1199   000031                     dtoa@d:
  1200                           	callstack 0
  1201                           
  1202                           ; 8 bytes @ 0x30
  1203   000031                     	ds	3
  1204   000034                     ___fldiv@rem:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x33
  1208   000034                     	ds	1
  1209   000035                     ??___flge:
  1210                           
  1211                           ; 1 bytes @ 0x34
  1212   000035                     	ds	3
  1213   000038                     ___fldiv@sign:
  1214                           	callstack 0
  1215                           
  1216                           ; 1 bytes @ 0x37
  1217   000038                     	ds	1
  1218   000039                     ??_dtoa:
  1219   000039                     ___fldiv@new_exp:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x38
  1223   000039                     	ds	2
  1224   00003B                     ___fldiv@grs:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x3A
  1228   00003B                     	ds	4
  1229   00003F                     ___fldiv@bexp:
  1230                           	callstack 0
  1231                           
  1232                           ; 1 bytes @ 0x3E
  1233   00003F                     	ds	1
  1234   000040                     ___fldiv@aexp:
  1235                           	callstack 0
  1236                           
  1237                           ; 1 bytes @ 0x3F
  1238   000040                     	ds	1
  1239   000041                     ?_floorf:
  1240                           	callstack 0
  1241   000041                     ?_read_adc_voltage:
  1242                           	callstack 0
  1243   000041                     _dtoa$1446:
  1244                           	callstack 0
  1245   000041                     floorf@x:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x40
  1249   000041                     	ds	2
  1250   000043                     dtoa@p:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x42
  1254   000043                     	ds	2
  1255   000045                     ??_floorf:
  1256   000045                     dtoa@w:
  1257                           	callstack 0
  1258   000045                     read_adc_voltage@voltage:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x44
  1262   000045                     	ds	2
  1263   000047                     dtoa@n:
  1264                           	callstack 0
  1265                           
  1266                           ; 8 bytes @ 0x46
  1267   000047                     	ds	2
  1268   000049                     read_adc_voltage@channel:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x48
  1272   000049                     	ds	1
  1273   00004A                     read_adc_voltage@raw_value:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x49
  1277   00004A                     	ds	1
  1278   00004B                     floorf@m:
  1279                           	callstack 0
  1280                           
  1281                           ; 4 bytes @ 0x4A
  1282   00004B                     	ds	4
  1283   00004F                     dtoa@s:
  1284                           	callstack 0
  1285   00004F                     floorf@e:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x4E
  1289   00004F                     	ds	1
  1290   000050                     dtoa@i:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x4F
  1294   000050                     	ds	1
  1295   000051                     floorf@u:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0x50
  1299   000051                     	ds	4
  1300   000055                     ??_efgtoa:
  1301                           
  1302                           ; 1 bytes @ 0x54
  1303   000055                     	ds	2
  1304   000057                     
  1305                           ; 1 bytes @ 0x56
  1306 ;;
  1307 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1308 ;;
  1309 ;; *************** function _main *****************
  1310 ;; Defined at:
  1311 ;;		line 453 in file "newfile.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  Buffer         32    0[BANK1 ] unsigned char [32]
  1316 ;;  voltage         4   56[BANK1 ] float 
  1317 ;;  p1              4   52[BANK1 ] float 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Locals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;Total ram usage:       60 bytes
  1332 ;; Hardware stack levels required when called: 11
  1333 ;; This function calls:
  1334 ;;		___flmul
  1335 ;;		_buzzerF
  1336 ;;		_controlingTemp
  1337 ;;		_decrementClock
  1338 ;;		_delay_ms
  1339 ;;		_incrementClock
  1340 ;;		_init
  1341 ;;		_init_adc_no_lib
  1342 ;;		_lcd_gotoxy
  1343 ;;		_lcd_init
  1344 ;;		_lcd_putc
  1345 ;;		_lcd_puts
  1346 ;;		_read_adc_voltage
  1347 ;;		_sprintf
  1348 ;; This function is called by:
  1349 ;;		Startup code after reset
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text0
  1354   002116                     __ptext0:
  1355                           	callstack 0
  1356   002116                     _main:
  1357                           	callstack 20
  1358   002116                     
  1359                           ;newfile.c: 455:     float p1;;newfile.c: 456:     float voltage;;newfile.c: 457:     st
      +                          ate = 2;
  1360   002116  0E00               	movlw	0
  1361   002118  6E6B               	movwf	(_state+1)^0,c
  1362   00211A  0E02               	movlw	2
  1363   00211C  6E6A               	movwf	_state^0,c
  1364   00211E                     
  1365                           ;newfile.c: 461:     init();
  1366   00211E  EC85  F027         	call	_init	;wreg free
  1367   002122                     
  1368                           ;newfile.c: 466:     char Buffer[32];;newfile.c: 469:     lcd_init();
  1369   002122  ECA5  F028         	call	_lcd_init	;wreg free
  1370   002126                     
  1371                           ;newfile.c: 470:     init_adc_no_lib();
  1372   002126  ECAB  F02B         	call	_init_adc_no_lib	;wreg free
  1373   00212A                     
  1374                           ;newfile.c: 471:     lcd_putc('\f');
  1375   00212A  0E0C               	movlw	12
  1376   00212C  EC46  F027         	call	_lcd_putc
  1377   002130                     l255:
  1378   002130  0004               	clrwdt		;# 
  1379   002132                     
  1380                           ;newfile.c: 476:         if (PORTBbits.RB3 == 0) incrementClock();
  1381   002132  B681               	btfsc	129,3,c	;volatile
  1382   002134  EF9E  F010         	goto	u9031
  1383   002138  EFA0  F010         	goto	u9030
  1384   00213C                     u9031:
  1385   00213C  EFA4  F010         	goto	l256
  1386   002140                     u9030:
  1387   002140  ECE9  F01A         	call	_incrementClock	;wreg free
  1388   002144  EFFF  F010         	goto	l7398
  1389   002148                     l256:
  1390   002148  B881               	btfsc	129,4,c	;volatile
  1391   00214A  EFA9  F010         	goto	u9041
  1392   00214E  EFAB  F010         	goto	u9040
  1393   002152                     u9041:
  1394   002152  EFAF  F010         	goto	l258
  1395   002156                     u9040:
  1396   002156  EC3D  F020         	call	_decrementClock	;wreg free
  1397   00215A  EFFF  F010         	goto	l7398
  1398   00215E                     l258:
  1399   00215E  BA81               	btfsc	129,5,c	;volatile
  1400   002160  EFB4  F010         	goto	u9051
  1401   002164  EFB6  F010         	goto	u9050
  1402   002168                     u9051:
  1403   002168  EFC6  F010         	goto	l260
  1404   00216C                     u9050:
  1405   00216C                     
  1406                           ;newfile.c: 481:             PORTCbits.RC5 = 0;
  1407   00216C  9A82               	bcf	130,5,c	;volatile
  1408   00216E                     
  1409                           ;newfile.c: 482:             seconds = 0;
  1410   00216E  0E00               	movlw	0
  1411   002170  0101               	movlb	1	; () banked
  1412   002172  6F0D               	movwf	(_seconds+1)& (0+255),b
  1413   002174  0E00               	movlw	0
  1414   002176  6F0C               	movwf	_seconds& (0+255),b
  1415                           
  1416                           ;newfile.c: 483:             minutes = 0;
  1417   002178  0E00               	movlw	0
  1418   00217A  6E68               	movwf	(_minutes+1)^0,c
  1419   00217C  0E00               	movlw	0
  1420   00217E  6E67               	movwf	_minutes^0,c
  1421                           
  1422                           ;newfile.c: 484:             hours = 0;
  1423   002180  0E00               	movlw	0
  1424   002182  6E66               	movwf	(_hours+1)^0,c
  1425   002184  0E00               	movlw	0
  1426   002186  6E65               	movwf	_hours^0,c
  1427                           
  1428                           ;newfile.c: 487:         } else if (PORTAbits.RA5 == 0)
  1429   002188  EFFF  F010         	goto	l7398
  1430   00218C                     l260:
  1431   00218C  BA80               	btfsc	128,5,c	;volatile
  1432   00218E  EFCB  F010         	goto	u9061
  1433   002192  EFCD  F010         	goto	u9060
  1434   002196                     u9061:
  1435   002196  EFFF  F010         	goto	l259
  1436   00219A                     u9060:
  1437   00219A                     
  1438                           ;newfile.c: 488:         {;newfile.c: 489:             if(state==2)
  1439   00219A  0E02               	movlw	2
  1440   00219C  186A               	xorwf	_state^0,w,c
  1441   00219E  106B               	iorwf	(_state+1)^0,w,c
  1442   0021A0  A4D8               	btfss	status,2,c
  1443   0021A2  EFD5  F010         	goto	u9071
  1444   0021A6  EFD7  F010         	goto	u9070
  1445   0021AA                     u9071:
  1446   0021AA  EFDD  F010         	goto	l7388
  1447   0021AE                     u9070:
  1448   0021AE                     l7386:
  1449                           
  1450                           ;newfile.c: 490:             {;newfile.c: 491:                 state=0;
  1451   0021AE  0E00               	movlw	0
  1452   0021B0  6E6B               	movwf	(_state+1)^0,c
  1453   0021B2  0E00               	movlw	0
  1454   0021B4  6E6A               	movwf	_state^0,c
  1455                           
  1456                           ;newfile.c: 493:             }
  1457   0021B6  EFF7  F010         	goto	l7396
  1458   0021BA                     l7388:
  1459   0021BA  506A               	movf	_state^0,w,c
  1460   0021BC  106B               	iorwf	(_state+1)^0,w,c
  1461   0021BE  A4D8               	btfss	status,2,c
  1462   0021C0  EFE4  F010         	goto	u9081
  1463   0021C4  EFE6  F010         	goto	u9080
  1464   0021C8                     u9081:
  1465   0021C8  EFEC  F010         	goto	l7392
  1466   0021CC                     u9080:
  1467   0021CC                     
  1468                           ;newfile.c: 496:                 state = 1;
  1469   0021CC  0E00               	movlw	0
  1470   0021CE  6E6B               	movwf	(_state+1)^0,c
  1471   0021D0  0E01               	movlw	1
  1472   0021D2  6E6A               	movwf	_state^0,c
  1473   0021D4  EFF7  F010         	goto	l7396
  1474   0021D8                     l7392:
  1475   0021D8  046A               	decf	_state^0,w,c
  1476   0021DA  106B               	iorwf	(_state+1)^0,w,c
  1477   0021DC  A4D8               	btfss	status,2,c
  1478   0021DE  EFF3  F010         	goto	u9091
  1479   0021E2  EFF5  F010         	goto	u9090
  1480   0021E6                     u9091:
  1481   0021E6  EFF7  F010         	goto	l7396
  1482   0021EA                     u9090:
  1483   0021EA  EFD7  F010         	goto	l7386
  1484   0021EE                     l7396:
  1485                           
  1486                           ;newfile.c: 500:             delay_ms(200);
  1487   0021EE  0E00               	movlw	0
  1488   0021F0  6E15               	movwf	(delay_ms@n+1)^0,c
  1489   0021F2  0EC8               	movlw	200
  1490   0021F4  6E14               	movwf	delay_ms@n^0,c
  1491   0021F6  EC2D  F02B         	call	_delay_ms	;wreg free
  1492   0021FA  EFFF  F010         	goto	l7398
  1493   0021FE                     l259:
  1494   0021FE                     l7398:
  1495                           
  1496                           ;newfile.c: 503:         p1 = read_adc_voltage(0);
  1497   0021FE  0E00               	movlw	0
  1498   002200  EC05  F027         	call	_read_adc_voltage
  1499   002204  C041  F192         	movff	?_read_adc_voltage,main@p1
  1500   002208  C042  F193         	movff	?_read_adc_voltage+1,main@p1+1
  1501   00220C  C043  F194         	movff	?_read_adc_voltage+2,main@p1+2
  1502   002210  C044  F195         	movff	?_read_adc_voltage+3,main@p1+3
  1503   002214                     
  1504                           ;newfile.c: 504:         sp = 40 * p1;
  1505   002214  C192  F014         	movff	main@p1,___flmul@b
  1506   002218  C193  F015         	movff	main@p1+1,___flmul@b+1
  1507   00221C  C194  F016         	movff	main@p1+2,___flmul@b+2
  1508   002220  C195  F017         	movff	main@p1+3,___flmul@b+3
  1509   002224  0E00               	movlw	0
  1510   002226  6E18               	movwf	___flmul@a^0,c
  1511   002228  0E00               	movlw	0
  1512   00222A  6E19               	movwf	(___flmul@a+1)^0,c
  1513   00222C  0E20               	movlw	32
  1514   00222E  6E1A               	movwf	(___flmul@a+2)^0,c
  1515   002230  0E42               	movlw	66
  1516   002232  6E1B               	movwf	(___flmul@a+3)^0,c
  1517   002234  ECAD  F015         	call	___flmul	;wreg free
  1518   002238  C014  F100         	movff	?___flmul,_sp
  1519   00223C  C015  F101         	movff	?___flmul+1,_sp+1
  1520   002240  C016  F102         	movff	?___flmul+2,_sp+2
  1521   002244  C017  F103         	movff	?___flmul+3,_sp+3
  1522   002248                     
  1523                           ;newfile.c: 506:         voltage = read_adc_voltage(2);
  1524   002248  0E02               	movlw	2
  1525   00224A  EC05  F027         	call	_read_adc_voltage
  1526   00224E  C041  F196         	movff	?_read_adc_voltage,main@voltage
  1527   002252  C042  F197         	movff	?_read_adc_voltage+1,main@voltage+1
  1528   002256  C043  F198         	movff	?_read_adc_voltage+2,main@voltage+2
  1529   00225A  C044  F199         	movff	?_read_adc_voltage+3,main@voltage+3
  1530   00225E                     
  1531                           ;newfile.c: 507:         t = 200 * voltage;
  1532   00225E  C196  F014         	movff	main@voltage,___flmul@b
  1533   002262  C197  F015         	movff	main@voltage+1,___flmul@b+1
  1534   002266  C198  F016         	movff	main@voltage+2,___flmul@b+2
  1535   00226A  C199  F017         	movff	main@voltage+3,___flmul@b+3
  1536   00226E  0E00               	movlw	0
  1537   002270  6E18               	movwf	___flmul@a^0,c
  1538   002272  0E00               	movlw	0
  1539   002274  6E19               	movwf	(___flmul@a+1)^0,c
  1540   002276  0E48               	movlw	72
  1541   002278  6E1A               	movwf	(___flmul@a+2)^0,c
  1542   00227A  0E43               	movlw	67
  1543   00227C  6E1B               	movwf	(___flmul@a+3)^0,c
  1544   00227E  ECAD  F015         	call	___flmul	;wreg free
  1545   002282  C014  F104         	movff	?___flmul,_t
  1546   002286  C015  F105         	movff	?___flmul+1,_t+1
  1547   00228A  C016  F106         	movff	?___flmul+2,_t+2
  1548   00228E  C017  F107         	movff	?___flmul+3,_t+3
  1549   002292                     
  1550                           ;newfile.c: 510:         controlingTemp();
  1551   002292  ECEF  F024         	call	_controlingTemp	;wreg free
  1552   002296                     
  1553                           ;newfile.c: 512:         if(state==2)
  1554   002296  0E02               	movlw	2
  1555   002298  186A               	xorwf	_state^0,w,c
  1556   00229A  106B               	iorwf	(_state+1)^0,w,c
  1557   00229C  A4D8               	btfss	status,2,c
  1558   00229E  EF53  F011         	goto	u9101
  1559   0022A2  EF55  F011         	goto	u9100
  1560   0022A6                     u9101:
  1561   0022A6  EF6B  F011         	goto	l7416
  1562   0022AA                     u9100:
  1563   0022AA                     
  1564                           ;newfile.c: 513:         {;newfile.c: 515:             lcd_gotoxy(5, 1);
  1565   0022AA  0E01               	movlw	1
  1566   0022AC  6E1E               	movwf	lcd_gotoxy@y^0,c
  1567   0022AE  0E05               	movlw	5
  1568   0022B0  EC33  F028         	call	_lcd_gotoxy
  1569   0022B4                     
  1570                           ;newfile.c: 516:              sprintf(Buffer, "Set clock,   press RA 5");
  1571   0022B4  0E5E               	movlw	low main@Buffer
  1572   0022B6  0100               	movlb	0	; () banked
  1573   0022B8  6FD3               	movwf	sprintf@s& (0+255),b
  1574   0022BA  0E01               	movlw	high main@Buffer
  1575   0022BC  6FD4               	movwf	(sprintf@s+1)& (0+255),b
  1576   0022BE  0E01               	movlw	low STR_1
  1577   0022C0  6FD5               	movwf	sprintf@fmt& (0+255),b
  1578   0022C2  0E10               	movlw	high STR_1
  1579   0022C4  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
  1580   0022C6  EC61  F029         	call	_sprintf	;wreg free
  1581   0022CA                     
  1582                           ;newfile.c: 517:              lcd_puts(Buffer);
  1583   0022CA  0E5E               	movlw	low main@Buffer
  1584   0022CC  6E26               	movwf	lcd_puts@s^0,c
  1585   0022CE  0E01               	movlw	high main@Buffer
  1586   0022D0  6E27               	movwf	(lcd_puts@s+1)^0,c
  1587   0022D2  EC46  F02B         	call	_lcd_puts	;wreg free
  1588   0022D6                     l7416:
  1589                           
  1590                           ;newfile.c: 520:         if (state == 0) {
  1591   0022D6  506A               	movf	_state^0,w,c
  1592   0022D8  106B               	iorwf	(_state+1)^0,w,c
  1593   0022DA  A4D8               	btfss	status,2,c
  1594   0022DC  EF72  F011         	goto	u9111
  1595   0022E0  EF74  F011         	goto	u9110
  1596   0022E4                     u9111:
  1597   0022E4  EFAB  F012         	goto	l7488
  1598   0022E8                     u9110:
  1599   0022E8                     
  1600                           ;newfile.c: 521:             lcd_gotoxy(1, 1);
  1601   0022E8  0E01               	movlw	1
  1602   0022EA  6E1E               	movwf	lcd_gotoxy@y^0,c
  1603   0022EC  0E01               	movlw	1
  1604   0022EE  EC33  F028         	call	_lcd_gotoxy
  1605   0022F2                     
  1606                           ;newfile.c: 522:             sprintf(Buffer, "Time: %02d:%02d:%02d", hours, minutes, sec
      +                          onds);
  1607   0022F2  0E5E               	movlw	low main@Buffer
  1608   0022F4  0100               	movlb	0	; () banked
  1609   0022F6  6FD3               	movwf	sprintf@s& (0+255),b
  1610   0022F8  0E01               	movlw	high main@Buffer
  1611   0022FA  6FD4               	movwf	(sprintf@s+1)& (0+255),b
  1612   0022FC  0E19               	movlw	low STR_2
  1613   0022FE  6FD5               	movwf	sprintf@fmt& (0+255),b
  1614   002300  0E10               	movlw	high STR_2
  1615   002302  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
  1616   002304  C065  F0D7         	movff	_hours,?_sprintf+4
  1617   002308  C066  F0D8         	movff	_hours+1,?_sprintf+5
  1618   00230C  C067  F0D9         	movff	_minutes,?_sprintf+6
  1619   002310  C068  F0DA         	movff	_minutes+1,?_sprintf+7
  1620   002314  C10C  F0DB         	movff	_seconds,?_sprintf+8
  1621   002318  C10D  F0DC         	movff	_seconds+1,?_sprintf+9
  1622   00231C  EC61  F029         	call	_sprintf	;wreg free
  1623   002320                     
  1624                           ;newfile.c: 523:             lcd_puts(Buffer);
  1625   002320  0E5E               	movlw	low main@Buffer
  1626   002322  6E26               	movwf	lcd_puts@s^0,c
  1627   002324  0E01               	movlw	high main@Buffer
  1628   002326  6E27               	movwf	(lcd_puts@s+1)^0,c
  1629   002328  EC46  F02B         	call	_lcd_puts	;wreg free
  1630   00232C                     
  1631                           ;newfile.c: 526:             lcd_gotoxy(1, 2);
  1632   00232C  0E02               	movlw	2
  1633   00232E  6E1E               	movwf	lcd_gotoxy@y^0,c
  1634   002330  0E01               	movlw	1
  1635   002332  EC33  F028         	call	_lcd_gotoxy
  1636   002336                     
  1637                           ;newfile.c: 527:             sprintf(Buffer, "CT:%4.1fC ", t);
  1638   002336  0E5E               	movlw	low main@Buffer
  1639   002338  0100               	movlb	0	; () banked
  1640   00233A  6FD3               	movwf	sprintf@s& (0+255),b
  1641   00233C  0E01               	movlw	high main@Buffer
  1642   00233E  6FD4               	movwf	(sprintf@s+1)& (0+255),b
  1643   002340  0E4A               	movlw	low STR_3
  1644   002342  6FD5               	movwf	sprintf@fmt& (0+255),b
  1645   002344  0E10               	movlw	high STR_3
  1646   002346  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
  1647   002348  C104  F0D7         	movff	_t,?_sprintf+4
  1648   00234C  C105  F0D8         	movff	_t+1,?_sprintf+5
  1649   002350  C106  F0D9         	movff	_t+2,?_sprintf+6
  1650   002354  C107  F0DA         	movff	_t+3,?_sprintf+7
  1651   002358  EC61  F029         	call	_sprintf	;wreg free
  1652                           
  1653                           ;newfile.c: 528:             lcd_puts(Buffer);
  1654   00235C  0E5E               	movlw	low main@Buffer
  1655   00235E  6E26               	movwf	lcd_puts@s^0,c
  1656   002360  0E01               	movlw	high main@Buffer
  1657   002362  6E27               	movwf	(lcd_puts@s+1)^0,c
  1658   002364  EC46  F02B         	call	_lcd_puts	;wreg free
  1659   002368                     
  1660                           ;newfile.c: 530:             lcd_gotoxy(11, 2);
  1661   002368  0E02               	movlw	2
  1662   00236A  6E1E               	movwf	lcd_gotoxy@y^0,c
  1663   00236C  0E0B               	movlw	11
  1664   00236E  EC33  F028         	call	_lcd_gotoxy
  1665   002372                     
  1666                           ;newfile.c: 531:             sprintf(Buffer, "CK:%s", oven == 1 ? " ON" : "OFF");
  1667   002372  0461               	decf	_oven^0,w,c
  1668   002374  1062               	iorwf	(_oven+1)^0,w,c
  1669   002376  B4D8               	btfsc	status,2,c
  1670   002378  EFC0  F011         	goto	u9121
  1671   00237C  EFC2  F011         	goto	u9120
  1672   002380                     u9121:
  1673   002380  EFC9  F011         	goto	l7434
  1674   002384                     u9120:
  1675   002384  0E91               	movlw	low STR_6
  1676   002386  0101               	movlb	1	; () banked
  1677   002388  6F7E               	movwf	_main$838& (0+255),b
  1678   00238A  0E10               	movlw	high STR_6
  1679   00238C  6F7F               	movwf	(_main$838+1)& (0+255),b
  1680   00238E  EFCE  F011         	goto	l7436
  1681   002392                     l7434:
  1682   002392  0E95               	movlw	low STR_5
  1683   002394  0101               	movlb	1	; () banked
  1684   002396  6F7E               	movwf	_main$838& (0+255),b
  1685   002398  0E10               	movlw	high STR_5
  1686   00239A  6F7F               	movwf	(_main$838+1)& (0+255),b
  1687   00239C                     l7436:
  1688                           
  1689                           ; BSR set to: 1
  1690   00239C  0E5E               	movlw	low main@Buffer
  1691   00239E  0100               	movlb	0	; () banked
  1692   0023A0  6FD3               	movwf	sprintf@s& (0+255),b
  1693   0023A2  0E01               	movlw	high main@Buffer
  1694   0023A4  6FD4               	movwf	(sprintf@s+1)& (0+255),b
  1695   0023A6  0E79               	movlw	low STR_4
  1696   0023A8  6FD5               	movwf	sprintf@fmt& (0+255),b
  1697   0023AA  0E10               	movlw	high STR_4
  1698   0023AC  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
  1699   0023AE  C17E  F0D7         	movff	_main$838,?_sprintf+4
  1700   0023B2  C17F  F0D8         	movff	_main$838+1,?_sprintf+5
  1701   0023B6  EC61  F029         	call	_sprintf	;wreg free
  1702   0023BA                     
  1703                           ;newfile.c: 532:             lcd_puts(Buffer);
  1704   0023BA  0E5E               	movlw	low main@Buffer
  1705   0023BC  6E26               	movwf	lcd_puts@s^0,c
  1706   0023BE  0E01               	movlw	high main@Buffer
  1707   0023C0  6E27               	movwf	(lcd_puts@s+1)^0,c
  1708   0023C2  EC46  F02B         	call	_lcd_puts	;wreg free
  1709   0023C6                     
  1710                           ;newfile.c: 534:             lcd_gotoxy(1, 3);
  1711   0023C6  0E03               	movlw	3
  1712   0023C8  6E1E               	movwf	lcd_gotoxy@y^0,c
  1713   0023CA  0E01               	movlw	1
  1714   0023CC  EC33  F028         	call	_lcd_gotoxy
  1715   0023D0                     
  1716                           ;newfile.c: 535:             sprintf(Buffer, "SP:%4.1fC ", sp);
  1717   0023D0  0E5E               	movlw	low main@Buffer
  1718   0023D2  0100               	movlb	0	; () banked
  1719   0023D4  6FD3               	movwf	sprintf@s& (0+255),b
  1720   0023D6  0E01               	movlw	high main@Buffer
  1721   0023D8  6FD4               	movwf	(sprintf@s+1)& (0+255),b
  1722   0023DA  0E3F               	movlw	low STR_7
  1723   0023DC  6FD5               	movwf	sprintf@fmt& (0+255),b
  1724   0023DE  0E10               	movlw	high STR_7
  1725   0023E0  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
  1726   0023E2  C100  F0D7         	movff	_sp,?_sprintf+4
  1727   0023E6  C101  F0D8         	movff	_sp+1,?_sprintf+5
  1728   0023EA  C102  F0D9         	movff	_sp+2,?_sprintf+6
  1729   0023EE  C103  F0DA         	movff	_sp+3,?_sprintf+7
  1730   0023F2  EC61  F029         	call	_sprintf	;wreg free
  1731   0023F6                     
  1732                           ;newfile.c: 536:             lcd_puts(Buffer);
  1733   0023F6  0E5E               	movlw	low main@Buffer
  1734   0023F8  6E26               	movwf	lcd_puts@s^0,c
  1735   0023FA  0E01               	movlw	high main@Buffer
  1736   0023FC  6E27               	movwf	(lcd_puts@s+1)^0,c
  1737   0023FE  EC46  F02B         	call	_lcd_puts	;wreg free
  1738   002402                     
  1739                           ;newfile.c: 538:             lcd_gotoxy(11, 3);
  1740   002402  0E03               	movlw	3
  1741   002404  6E1E               	movwf	lcd_gotoxy@y^0,c
  1742   002406  0E0B               	movlw	11
  1743   002408  EC33  F028         	call	_lcd_gotoxy
  1744   00240C                     
  1745                           ;newfile.c: 539:             sprintf(Buffer, "HT:%s", PORTCbits.RC5 == 1 ? " ON" : "OFF"
      +                          );
  1746   00240C  BA82               	btfsc	130,5,c	;volatile
  1747   00240E  EF0B  F012         	goto	u9131
  1748   002412  EF0D  F012         	goto	u9130
  1749   002416                     u9131:
  1750   002416  EF14  F012         	goto	l7452
  1751   00241A                     u9130:
  1752   00241A  0E91               	movlw	low STR_6
  1753   00241C  0101               	movlb	1	; () banked
  1754   00241E  6F80               	movwf	_main$844& (0+255),b
  1755   002420  0E10               	movlw	high STR_6
  1756   002422  6F81               	movwf	(_main$844+1)& (0+255),b
  1757   002424  EF19  F012         	goto	l7454
  1758   002428                     l7452:
  1759   002428  0E95               	movlw	low STR_5
  1760   00242A  0101               	movlb	1	; () banked
  1761   00242C  6F80               	movwf	_main$844& (0+255),b
  1762   00242E  0E10               	movlw	high STR_5
  1763   002430  6F81               	movwf	(_main$844+1)& (0+255),b
  1764   002432                     l7454:
  1765                           
  1766                           ; BSR set to: 1
  1767   002432  0E5E               	movlw	low main@Buffer
  1768   002434  0100               	movlb	0	; () banked
  1769   002436  6FD3               	movwf	sprintf@s& (0+255),b
  1770   002438  0E01               	movlw	high main@Buffer
  1771   00243A  6FD4               	movwf	(sprintf@s+1)& (0+255),b
  1772   00243C  0E7F               	movlw	low STR_8
  1773   00243E  6FD5               	movwf	sprintf@fmt& (0+255),b
  1774   002440  0E10               	movlw	high STR_8
  1775   002442  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
  1776   002444  C180  F0D7         	movff	_main$844,?_sprintf+4
  1777   002448  C181  F0D8         	movff	_main$844+1,?_sprintf+5
  1778   00244C  EC61  F029         	call	_sprintf	;wreg free
  1779   002450                     
  1780                           ;newfile.c: 540:             lcd_puts(Buffer);
  1781   002450  0E5E               	movlw	low main@Buffer
  1782   002452  6E26               	movwf	lcd_puts@s^0,c
  1783   002454  0E01               	movlw	high main@Buffer
  1784   002456  6E27               	movwf	(lcd_puts@s+1)^0,c
  1785   002458  EC46  F02B         	call	_lcd_puts	;wreg free
  1786   00245C                     
  1787                           ;newfile.c: 542:             lcd_gotoxy(1, 4);
  1788   00245C  0E04               	movlw	4
  1789   00245E  6E1E               	movwf	lcd_gotoxy@y^0,c
  1790   002460  0E01               	movlw	1
  1791   002462  EC33  F028         	call	_lcd_gotoxy
  1792   002466                     
  1793                           ;newfile.c: 543:             sprintf(Buffer, "MD:%s", Mode == 0 ? "Sec  " : Mode == 1 ? 
      +                          "10Sec" : Mode == 2 ? "Min  " : Mode == 3 ? "10Min" : "HR   ");
  1794   002466  5063               	movf	_Mode^0,w,c
  1795   002468  1064               	iorwf	(_Mode+1)^0,w,c
  1796   00246A  B4D8               	btfsc	status,2,c
  1797   00246C  EF3A  F012         	goto	u9141
  1798   002470  EF3C  F012         	goto	u9140
  1799   002474                     u9141:
  1800   002474  EF81  F012         	goto	l7476
  1801   002478                     u9140:
  1802   002478  0463               	decf	_Mode^0,w,c
  1803   00247A  1064               	iorwf	(_Mode+1)^0,w,c
  1804   00247C  B4D8               	btfsc	status,2,c
  1805   00247E  EF43  F012         	goto	u9151
  1806   002482  EF45  F012         	goto	u9150
  1807   002486                     u9151:
  1808   002486  EF76  F012         	goto	l7474
  1809   00248A                     u9150:
  1810   00248A  0E02               	movlw	2
  1811   00248C  1863               	xorwf	_Mode^0,w,c
  1812   00248E  1064               	iorwf	(_Mode+1)^0,w,c
  1813   002490  B4D8               	btfsc	status,2,c
  1814   002492  EF4D  F012         	goto	u9161
  1815   002496  EF4F  F012         	goto	u9160
  1816   00249A                     u9161:
  1817   00249A  EF6B  F012         	goto	l7472
  1818   00249E                     u9160:
  1819   00249E  0E03               	movlw	3
  1820   0024A0  1863               	xorwf	_Mode^0,w,c
  1821   0024A2  1064               	iorwf	(_Mode+1)^0,w,c
  1822   0024A4  B4D8               	btfsc	status,2,c
  1823   0024A6  EF57  F012         	goto	u9171
  1824   0024AA  EF59  F012         	goto	u9170
  1825   0024AE                     u9171:
  1826   0024AE  EF60  F012         	goto	l7470
  1827   0024B2                     u9170:
  1828   0024B2  0E55               	movlw	low STR_16
  1829   0024B4  0101               	movlb	1	; () banked
  1830   0024B6  6F88               	movwf	_main$858& (0+255),b
  1831   0024B8  0E10               	movlw	high STR_16
  1832   0024BA  6F89               	movwf	(_main$858+1)& (0+255),b
  1833   0024BC  EF65  F012         	goto	l293
  1834   0024C0                     l7470:
  1835   0024C0  0E6D               	movlw	low STR_15
  1836   0024C2  0101               	movlb	1	; () banked
  1837   0024C4  6F88               	movwf	_main$858& (0+255),b
  1838   0024C6  0E10               	movlw	high STR_15
  1839   0024C8  6F89               	movwf	(_main$858+1)& (0+255),b
  1840   0024CA                     l293:
  1841                           
  1842                           ; BSR set to: 1
  1843   0024CA  C188  F186         	movff	_main$858,_main$857
  1844   0024CE  C189  F187         	movff	_main$858+1,_main$857+1
  1845   0024D2  EF70  F012         	goto	l289
  1846   0024D6                     l7472:
  1847   0024D6  0E61               	movlw	low STR_14
  1848   0024D8  0101               	movlb	1	; () banked
  1849   0024DA  6F86               	movwf	_main$857& (0+255),b
  1850   0024DC  0E10               	movlw	high STR_14
  1851   0024DE  6F87               	movwf	(_main$857+1)& (0+255),b
  1852   0024E0                     l289:
  1853                           
  1854                           ; BSR set to: 1
  1855   0024E0  C186  F184         	movff	_main$857,_main$856
  1856   0024E4  C187  F185         	movff	_main$857+1,_main$856+1
  1857   0024E8  EF7B  F012         	goto	l285
  1858   0024EC                     l7474:
  1859   0024EC  0E67               	movlw	low STR_13
  1860   0024EE  0101               	movlb	1	; () banked
  1861   0024F0  6F84               	movwf	_main$856& (0+255),b
  1862   0024F2  0E10               	movlw	high STR_13
  1863   0024F4  6F85               	movwf	(_main$856+1)& (0+255),b
  1864   0024F6                     l285:
  1865                           
  1866                           ; BSR set to: 1
  1867   0024F6  C184  F182         	movff	_main$856,_main$855
  1868   0024FA  C185  F183         	movff	_main$856+1,_main$855+1
  1869   0024FE  EF86  F012         	goto	l7478
  1870   002502                     l7476:
  1871   002502  0E5B               	movlw	low STR_12
  1872   002504  0101               	movlb	1	; () banked
  1873   002506  6F82               	movwf	_main$855& (0+255),b
  1874   002508  0E10               	movlw	high STR_12
  1875   00250A  6F83               	movwf	(_main$855+1)& (0+255),b
  1876   00250C                     l7478:
  1877                           
  1878                           ; BSR set to: 1
  1879   00250C  0E5E               	movlw	low main@Buffer
  1880   00250E  0100               	movlb	0	; () banked
  1881   002510  6FD3               	movwf	sprintf@s& (0+255),b
  1882   002512  0E01               	movlw	high main@Buffer
  1883   002514  6FD4               	movwf	(sprintf@s+1)& (0+255),b
  1884   002516  0E73               	movlw	low STR_11
  1885   002518  6FD5               	movwf	sprintf@fmt& (0+255),b
  1886   00251A  0E10               	movlw	high STR_11
  1887   00251C  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
  1888   00251E  C182  F0D7         	movff	_main$855,?_sprintf+4
  1889   002522  C183  F0D8         	movff	_main$855+1,?_sprintf+5
  1890   002526  EC61  F029         	call	_sprintf	;wreg free
  1891   00252A                     
  1892                           ;newfile.c: 544:             lcd_puts(Buffer);
  1893   00252A  0E5E               	movlw	low main@Buffer
  1894   00252C  6E26               	movwf	lcd_puts@s^0,c
  1895   00252E  0E01               	movlw	high main@Buffer
  1896   002530  6E27               	movwf	(lcd_puts@s+1)^0,c
  1897   002532  EC46  F02B         	call	_lcd_puts	;wreg free
  1898   002536                     
  1899                           ;newfile.c: 546:             if (bzr == 1) {
  1900   002536  0101               	movlb	1	; () banked
  1901   002538  050A               	decf	_bzr& (0+255),w,b
  1902   00253A  110B               	iorwf	(_bzr+1)& (0+255),w,b
  1903   00253C  A4D8               	btfss	status,2,c
  1904   00253E  EFA3  F012         	goto	u9181
  1905   002542  EFA5  F012         	goto	u9180
  1906   002546                     u9181:
  1907   002546  EFAB  F012         	goto	l7488
  1908   00254A                     u9180:
  1909   00254A                     
  1910                           ; BSR set to: 1
  1911                           ;newfile.c: 547:                 bzr = 0;
  1912   00254A  0E00               	movlw	0
  1913   00254C  6F0B               	movwf	(_bzr+1)& (0+255),b
  1914   00254E  0E00               	movlw	0
  1915   002550  6F0A               	movwf	_bzr& (0+255),b
  1916   002552                     
  1917                           ; BSR set to: 1
  1918                           ;newfile.c: 548:                 buzzerF();
  1919   002552  EC6C  F028         	call	_buzzerF	;wreg free
  1920   002556                     l7488:
  1921                           
  1922                           ;newfile.c: 552:         if (state == 1) {
  1923   002556  046A               	decf	_state^0,w,c
  1924   002558  106B               	iorwf	(_state+1)^0,w,c
  1925   00255A  A4D8               	btfss	status,2,c
  1926   00255C  EFB2  F012         	goto	u9191
  1927   002560  EFB4  F012         	goto	u9190
  1928   002564                     u9191:
  1929   002564  EF43  F013         	goto	l7520
  1930   002568                     u9190:
  1931   002568                     
  1932                           ;newfile.c: 553:             lcd_gotoxy(5, 1);
  1933   002568  0E01               	movlw	1
  1934   00256A  6E1E               	movwf	lcd_gotoxy@y^0,c
  1935   00256C  0E05               	movlw	5
  1936   00256E  EC33  F028         	call	_lcd_gotoxy
  1937   002572                     
  1938                           ;newfile.c: 554:             sprintf(Buffer, "%02d:%02d:  %02d", hr, min, snd);
  1939   002572  0E5E               	movlw	low main@Buffer
  1940   002574  0100               	movlb	0	; () banked
  1941   002576  6FD3               	movwf	sprintf@s& (0+255),b
  1942   002578  0E01               	movlw	high main@Buffer
  1943   00257A  6FD4               	movwf	(sprintf@s+1)& (0+255),b
  1944   00257C  0E2E               	movlw	low STR_17
  1945   00257E  6FD5               	movwf	sprintf@fmt& (0+255),b
  1946   002580  0E10               	movlw	high STR_17
  1947   002582  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
  1948   002584  C108  F0D7         	movff	_hr,?_sprintf+4
  1949   002588  C109  F0D8         	movff	_hr+1,?_sprintf+5
  1950   00258C  C05B  F0D9         	movff	_min,?_sprintf+6
  1951   002590  C05C  F0DA         	movff	_min+1,?_sprintf+7
  1952   002594  C05D  F0DB         	movff	_snd,?_sprintf+8
  1953   002598  C05E  F0DC         	movff	_snd+1,?_sprintf+9
  1954   00259C  EC61  F029         	call	_sprintf	;wreg free
  1955   0025A0                     
  1956                           ;newfile.c: 555:             lcd_puts(Buffer);
  1957   0025A0  0E5E               	movlw	low main@Buffer
  1958   0025A2  6E26               	movwf	lcd_puts@s^0,c
  1959   0025A4  0E01               	movlw	high main@Buffer
  1960   0025A6  6E27               	movwf	(lcd_puts@s+1)^0,c
  1961   0025A8  EC46  F02B         	call	_lcd_puts	;wreg free
  1962   0025AC                     
  1963                           ;newfile.c: 557:             lcd_gotoxy(1, 4);
  1964   0025AC  0E04               	movlw	4
  1965   0025AE  6E1E               	movwf	lcd_gotoxy@y^0,c
  1966   0025B0  0E01               	movlw	1
  1967   0025B2  EC33  F028         	call	_lcd_gotoxy
  1968   0025B6                     
  1969                           ;newfile.c: 558:             sprintf(Buffer, "MD:%s", Mode == 0 ? "Sec  " : Mode == 1 ? 
      +                          "10Sec" : Mode == 2 ? "Min  " : Mode == 3 ? "10Min" : "HR   ");
  1970   0025B6  5063               	movf	_Mode^0,w,c
  1971   0025B8  1064               	iorwf	(_Mode+1)^0,w,c
  1972   0025BA  B4D8               	btfsc	status,2,c
  1973   0025BC  EFE2  F012         	goto	u9201
  1974   0025C0  EFE4  F012         	goto	u9200
  1975   0025C4                     u9201:
  1976   0025C4  EF29  F013         	goto	l7514
  1977   0025C8                     u9200:
  1978   0025C8  0463               	decf	_Mode^0,w,c
  1979   0025CA  1064               	iorwf	(_Mode+1)^0,w,c
  1980   0025CC  B4D8               	btfsc	status,2,c
  1981   0025CE  EFEB  F012         	goto	u9211
  1982   0025D2  EFED  F012         	goto	u9210
  1983   0025D6                     u9211:
  1984   0025D6  EF1E  F013         	goto	l7512
  1985   0025DA                     u9210:
  1986   0025DA  0E02               	movlw	2
  1987   0025DC  1863               	xorwf	_Mode^0,w,c
  1988   0025DE  1064               	iorwf	(_Mode+1)^0,w,c
  1989   0025E0  B4D8               	btfsc	status,2,c
  1990   0025E2  EFF5  F012         	goto	u9221
  1991   0025E6  EFF7  F012         	goto	u9220
  1992   0025EA                     u9221:
  1993   0025EA  EF13  F013         	goto	l7510
  1994   0025EE                     u9220:
  1995   0025EE  0E03               	movlw	3
  1996   0025F0  1863               	xorwf	_Mode^0,w,c
  1997   0025F2  1064               	iorwf	(_Mode+1)^0,w,c
  1998   0025F4  B4D8               	btfsc	status,2,c
  1999   0025F6  EFFF  F012         	goto	u9231
  2000   0025FA  EF01  F013         	goto	u9230
  2001   0025FE                     u9231:
  2002   0025FE  EF08  F013         	goto	l7508
  2003   002602                     u9230:
  2004   002602  0E55               	movlw	low STR_16
  2005   002604  0101               	movlb	1	; () banked
  2006   002606  6F90               	movwf	_main$874& (0+255),b
  2007   002608  0E10               	movlw	high STR_16
  2008   00260A  6F91               	movwf	(_main$874+1)& (0+255),b
  2009   00260C  EF0D  F013         	goto	l311
  2010   002610                     l7508:
  2011   002610  0E6D               	movlw	low STR_15
  2012   002612  0101               	movlb	1	; () banked
  2013   002614  6F90               	movwf	_main$874& (0+255),b
  2014   002616  0E10               	movlw	high STR_15
  2015   002618  6F91               	movwf	(_main$874+1)& (0+255),b
  2016   00261A                     l311:
  2017                           
  2018                           ; BSR set to: 1
  2019   00261A  C190  F18E         	movff	_main$874,_main$873
  2020   00261E  C191  F18F         	movff	_main$874+1,_main$873+1
  2021   002622  EF18  F013         	goto	l307
  2022   002626                     l7510:
  2023   002626  0E61               	movlw	low STR_14
  2024   002628  0101               	movlb	1	; () banked
  2025   00262A  6F8E               	movwf	_main$873& (0+255),b
  2026   00262C  0E10               	movlw	high STR_14
  2027   00262E  6F8F               	movwf	(_main$873+1)& (0+255),b
  2028   002630                     l307:
  2029                           
  2030                           ; BSR set to: 1
  2031   002630  C18E  F18C         	movff	_main$873,_main$872
  2032   002634  C18F  F18D         	movff	_main$873+1,_main$872+1
  2033   002638  EF23  F013         	goto	l303
  2034   00263C                     l7512:
  2035   00263C  0E67               	movlw	low STR_13
  2036   00263E  0101               	movlb	1	; () banked
  2037   002640  6F8C               	movwf	_main$872& (0+255),b
  2038   002642  0E10               	movlw	high STR_13
  2039   002644  6F8D               	movwf	(_main$872+1)& (0+255),b
  2040   002646                     l303:
  2041                           
  2042                           ; BSR set to: 1
  2043   002646  C18C  F18A         	movff	_main$872,_main$871
  2044   00264A  C18D  F18B         	movff	_main$872+1,_main$871+1
  2045   00264E  EF2E  F013         	goto	l7516
  2046   002652                     l7514:
  2047   002652  0E5B               	movlw	low STR_12
  2048   002654  0101               	movlb	1	; () banked
  2049   002656  6F8A               	movwf	_main$871& (0+255),b
  2050   002658  0E10               	movlw	high STR_12
  2051   00265A  6F8B               	movwf	(_main$871+1)& (0+255),b
  2052   00265C                     l7516:
  2053                           
  2054                           ; BSR set to: 1
  2055   00265C  0E5E               	movlw	low main@Buffer
  2056   00265E  0100               	movlb	0	; () banked
  2057   002660  6FD3               	movwf	sprintf@s& (0+255),b
  2058   002662  0E01               	movlw	high main@Buffer
  2059   002664  6FD4               	movwf	(sprintf@s+1)& (0+255),b
  2060   002666  0E73               	movlw	low STR_11
  2061   002668  6FD5               	movwf	sprintf@fmt& (0+255),b
  2062   00266A  0E10               	movlw	high STR_11
  2063   00266C  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
  2064   00266E  C18A  F0D7         	movff	_main$871,?_sprintf+4
  2065   002672  C18B  F0D8         	movff	_main$871+1,?_sprintf+5
  2066   002676  EC61  F029         	call	_sprintf	;wreg free
  2067   00267A                     
  2068                           ;newfile.c: 559:             lcd_puts(Buffer);
  2069   00267A  0E5E               	movlw	low main@Buffer
  2070   00267C  6E26               	movwf	lcd_puts@s^0,c
  2071   00267E  0E01               	movlw	high main@Buffer
  2072   002680  6E27               	movwf	(lcd_puts@s+1)^0,c
  2073   002682  EC46  F02B         	call	_lcd_puts	;wreg free
  2074   002686                     l7520:
  2075                           
  2076                           ;newfile.c: 561:         delay_ms(200);
  2077   002686  0E00               	movlw	0
  2078   002688  6E15               	movwf	(delay_ms@n+1)^0,c
  2079   00268A  0EC8               	movlw	200
  2080   00268C  6E14               	movwf	delay_ms@n^0,c
  2081   00268E  EC2D  F02B         	call	_delay_ms	;wreg free
  2082   002692  EF98  F010         	goto	l255
  2083   002696  EF07  F000         	goto	start
  2084   00269A                     __end_of_main:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _sprintf *****************
  2088 ;; Defined at:
  2089 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  s               2   83[BANK0 ] PTR unsigned char 
  2092 ;;		 -> main@Buffer(32), 
  2093 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
  2094 ;;		 -> STR_18(6), STR_17(17), STR_11(6), STR_8(6), 
  2095 ;;		 -> STR_7(11), STR_4(6), STR_3(11), STR_2(21), 
  2096 ;;		 -> STR_1(24), 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  f              11   95[BANK0 ] struct _IO_FILE
  2099 ;;  ap              2   93[BANK0 ] PTR void [1]
  2100 ;;		 -> ?_sprintf(2), 
  2101 ;;  ret             2    0        int 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2   83[BANK0 ] int 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:       23 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 10
  2118 ;; This function calls:
  2119 ;;		_vfprintf
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text1
  2126   0052C2                     __ptext1:
  2127                           	callstack 0
  2128   0052C2                     _sprintf:
  2129                           	callstack 20
  2130   0052C2  0ED7               	movlw	low (?_sprintf+4)
  2131   0052C4  0100               	movlb	0	; () banked
  2132   0052C6  6FDD               	movwf	sprintf@ap& (0+255),b
  2133   0052C8  0E00               	movlw	high (?_sprintf+4)
  2134   0052CA  6FDE               	movwf	(sprintf@ap+1)& (0+255),b
  2135   0052CC  C0D3  F0DF         	movff	sprintf@s,sprintf@f
  2136   0052D0  C0D4  F0E0         	movff	sprintf@s+1,sprintf@f+1
  2137   0052D4                     
  2138                           ; BSR set to: 0
  2139   0052D4  0E00               	movlw	0
  2140   0052D6  6FE3               	movwf	(sprintf@f+4)& (0+255),b
  2141   0052D8  0E00               	movlw	0
  2142   0052DA  6FE2               	movwf	(sprintf@f+3)& (0+255),b
  2143   0052DC                     
  2144                           ; BSR set to: 0
  2145   0052DC  0E00               	movlw	0
  2146   0052DE  6FE9               	movwf	(sprintf@f+10)& (0+255),b
  2147   0052E0  0E00               	movlw	0
  2148   0052E2  6FE8               	movwf	(sprintf@f+9)& (0+255),b
  2149   0052E4                     
  2150                           ; BSR set to: 0
  2151   0052E4  0EDF               	movlw	low sprintf@f
  2152   0052E6  6FCB               	movwf	vfprintf@fp& (0+255),b
  2153   0052E8  0E00               	movlw	high sprintf@f
  2154   0052EA  6FCC               	movwf	(vfprintf@fp+1)& (0+255),b
  2155   0052EC  C0D5  F0CD         	movff	sprintf@fmt,vfprintf@fmt
  2156   0052F0  C0D6  F0CE         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2157   0052F4  0EDD               	movlw	low sprintf@ap
  2158   0052F6  6FCF               	movwf	vfprintf@ap& (0+255),b
  2159   0052F8  0E00               	movlw	high sprintf@ap
  2160   0052FA  6FD0               	movwf	(vfprintf@ap+1)& (0+255),b
  2161   0052FC  EC8A  F029         	call	_vfprintf	;wreg free
  2162   005300  0100               	movlb	0	; () banked
  2163   005302  51E2               	movf	(sprintf@f+3)& (0+255),w,b
  2164   005304  25D3               	addwf	sprintf@s& (0+255),w,b
  2165   005306  6ED9               	movwf	fsr2l,c
  2166   005308  51E3               	movf	(sprintf@f+4)& (0+255),w,b
  2167   00530A  21D4               	addwfc	(sprintf@s+1)& (0+255),w,b
  2168   00530C  6EDA               	movwf	fsr2h,c
  2169   00530E  0E00               	movlw	0
  2170   005310  6EDF               	movwf	indf2,c
  2171   005312                     
  2172                           ; BSR set to: 0
  2173   005312  0012               	return		;funcret
  2174   005314                     __end_of_sprintf:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _vfprintf *****************
  2178 ;; Defined at:
  2179 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  fp              2   75[BANK0 ] PTR struct _IO_FILE
  2182 ;;		 -> sprintf@f(11), 
  2183 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
  2184 ;;		 -> STR_18(6), STR_17(17), STR_11(6), STR_8(6), 
  2185 ;;		 -> STR_7(11), STR_4(6), STR_3(11), STR_2(21), 
  2186 ;;		 -> STR_1(24), 
  2187 ;;  ap              2   79[BANK0 ] PTR PTR void 
  2188 ;;		 -> sprintf@ap(2), 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  cfmt            2   81[BANK0 ] PTR unsigned char 
  2191 ;;		 -> STR_18(6), STR_17(17), STR_11(6), STR_8(6), 
  2192 ;;		 -> STR_7(11), STR_4(6), STR_3(11), STR_2(21), 
  2193 ;;		 -> STR_1(24), 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  2   75[BANK0 ] int 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2203 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;Total ram usage:        8 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 9
  2210 ;; This function calls:
  2211 ;;		_vfpfcnvrt
  2212 ;; This function is called by:
  2213 ;;		_sprintf
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text2
  2218   005314                     __ptext2:
  2219                           	callstack 0
  2220   005314                     _vfprintf:
  2221                           	callstack 20
  2222   005314                     
  2223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2224   005314  C0CD  F0D1         	movff	vfprintf@fmt,vfprintf@cfmt
  2225   005318  C0CE  F0D2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2228   00531C  EF9F  F029         	goto	l7228
  2229   005320                     l7226:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2232   005320  C0CB  F0B3         	movff	vfprintf@fp,vfpfcnvrt@fp
  2233   005324  C0CC  F0B4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2234   005328  0ED1               	movlw	low vfprintf@cfmt
  2235   00532A  0100               	movlb	0	; () banked
  2236   00532C  6FB5               	movwf	vfpfcnvrt@fmt& (0+255),b
  2237   00532E  0E00               	movlw	high vfprintf@cfmt
  2238   005330  6FB6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2239   005332  C0CF  F0B7         	movff	vfprintf@ap,vfpfcnvrt@ap
  2240   005336  C0D0  F0B8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2241   00533A  EC80  F00D         	call	_vfpfcnvrt	;wreg free
  2242   00533E                     l7228:
  2243                           
  2244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2245   00533E  C0D1  FFF6         	movff	vfprintf@cfmt,tblptrl
  2246   005342  C0D2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2247   005346                     	if	0	;tblptru may be non-zero
  2248   005346                     	endif
  2249   005346                     	if	0	;tblptru may be non-zero
  2250   005346                     	endif
  2251   005346  0008               	tblrd		*
  2252   005348  50F5               	movf	tablat,w,c
  2253   00534A  0900               	iorlw	0
  2254   00534C  A4D8               	btfss	status,2,c
  2255   00534E  EFAB  F029         	goto	u8781
  2256   005352  EFAD  F029         	goto	u8780
  2257   005356                     u8781:
  2258   005356  EF90  F029         	goto	l7226
  2259   00535A                     u8780:
  2260   00535A                     
  2261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2262   00535A  0E00               	movlw	0
  2263   00535C  0100               	movlb	0	; () banked
  2264   00535E  6FCC               	movwf	(?_vfprintf+1)& (0+255),b
  2265   005360  0E00               	movlw	0
  2266   005362  6FCB               	movwf	?_vfprintf& (0+255),b
  2267   005364                     
  2268                           ; BSR set to: 0
  2269   005364  0012               	return		;funcret
  2270   005366                     __end_of_vfprintf:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _vfpfcnvrt *****************
  2274 ;; Defined at:
  2275 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
  2278 ;;		 -> sprintf@f(11), 
  2279 ;;  fmt             2   53[BANK0 ] PTR PTR unsigned char 
  2280 ;;		 -> vfprintf@cfmt(2), 
  2281 ;;  ap              2   55[BANK0 ] PTR PTR void 
  2282 ;;		 -> sprintf@ap(2), 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  convarg         8   64[BANK0 ] struct .
  2285 ;;  cp              2   73[BANK0 ] PTR unsigned char 
  2286 ;;		 -> STR_18(6), STR_17(17), STR_11(6), STR_8(6), 
  2287 ;;		 -> STR_7(11), STR_4(6), STR_3(11), STR_2(21), 
  2288 ;;		 -> STR_1(24), 
  2289 ;;  done            2   60[BANK0 ] int 
  2290 ;;  i               2    0        int 
  2291 ;;  c               1   72[BANK0 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2301 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;Total ram usage:       24 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 8
  2308 ;; This function calls:
  2309 ;;		_atoi
  2310 ;;		_dtoa
  2311 ;;		_efgtoa
  2312 ;;		_fputc
  2313 ;;		_isdigit
  2314 ;;		_stoa
  2315 ;;		_strncmp
  2316 ;; This function is called by:
  2317 ;;		_vfprintf
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text3
  2322   001B00                     __ptext3:
  2323                           	callstack 0
  2324   001B00                     _vfpfcnvrt:
  2325                           	callstack 20
  2326   001B00                     
  2327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2328   001B00  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2329   001B04  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2330   001B08  CFDE FFF6          	movff	postinc2,tblptrl
  2331   001B0C  CFDD FFF7          	movff	postdec2,tblptrh
  2332   001B10                     	if	0	;tblptru may be non-zero
  2333   001B10                     	endif
  2334   001B10                     	if	0	;tblptru may be non-zero
  2335   001B10                     	endif
  2336   001B10  0008               	tblrd		*
  2337   001B12  50F5               	movf	tablat,w,c
  2338   001B14  0A25               	xorlw	37
  2339   001B16  A4D8               	btfss	status,2,c
  2340   001B18  EF90  F00D         	goto	u8641
  2341   001B1C  EF92  F00D         	goto	u8640
  2342   001B20                     u8641:
  2343   001B20  EF76  F010         	goto	l7194
  2344   001B24                     u8640:
  2345   001B24                     
  2346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2347   001B24  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2348   001B28  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2349   001B2C  2ADE               	incf	postinc2,f,c
  2350   001B2E  0E00               	movlw	0
  2351   001B30  22DD               	addwfc	postdec2,f,c
  2352   001B32                     
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2354   001B32  0E00               	movlw	0
  2355   001B34  6E58               	movwf	(_width+1)^0,c
  2356   001B36  0E00               	movlw	0
  2357   001B38  6E57               	movwf	_width^0,c
  2358   001B3A  C057  F069         	movff	_width,_flags
  2359   001B3E                     
  2360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2361   001B3E  6859               	setf	_prec^0,c
  2362   001B40  685A               	setf	(_prec+1)^0,c
  2363   001B42                     
  2364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  2365   001B42  0E00               	movlw	0
  2366   001B44  0100               	movlb	0	; () banked
  2367   001B46  6FBD               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2368   001B48  0E00               	movlw	0
  2369   001B4A  6FBC               	movwf	vfpfcnvrt@done& (0+255),b
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2372   001B4C  EFD2  F00D         	goto	l7092
  2373   001B50                     l7082:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  2377   001B50  8269               	bsf	_flags^0,1,c
  2378   001B52                     
  2379                           ; BSR set to: 0
  2380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  2381   001B52  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2382   001B56  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2383   001B5A  2ADE               	incf	postinc2,f,c
  2384   001B5C  0E00               	movlw	0
  2385   001B5E  22DD               	addwfc	postdec2,f,c
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  2388   001B60  EFD2  F00D         	goto	l7092
  2389   001B64                     l7086:
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  2393   001B64  0E00               	movlw	0
  2394   001B66  6FBD               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2395   001B68  0E01               	movlw	1
  2396   001B6A  6FBC               	movwf	vfpfcnvrt@done& (0+255),b
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  2399   001B6C  EFD2  F00D         	goto	l7092
  2400   001B70                     l7090:
  2401                           
  2402                           ; BSR set to: 0
  2403   001B70  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2404   001B74  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2405   001B78  CFDE FFF6          	movff	postinc2,tblptrl
  2406   001B7C  CFDD FFF7          	movff	postdec2,tblptrh
  2407   001B80                     	if	0	;tblptru may be non-zero
  2408   001B80                     	endif
  2409   001B80                     	if	0	;tblptru may be non-zero
  2410   001B80                     	endif
  2411   001B80  0008               	tblrd		*
  2412   001B82  50F5               	movf	tablat,w,c
  2413   001B84  6FB9               	movwf	??_vfpfcnvrt& (0+255),b
  2414   001B86  6BBA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2415                           
  2416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2417                           ; Switch size 1, requested type "simple"
  2418                           ; Number of cases is 1, Range of values is 0 to 0
  2419                           ; switch strategies available:
  2420                           ; Name         Instructions Cycles
  2421                           ; simple_byte            4     3 (average)
  2422                           ;	Chosen strategy is simple_byte
  2423   001B88  51BA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2424   001B8A  0A00               	xorlw	0	; case 0
  2425   001B8C  B4D8               	btfsc	status,2,c
  2426   001B8E  EFCB  F00D         	goto	l7702
  2427   001B92  EFB2  F00D         	goto	l7086
  2428   001B96                     l7702:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ; Switch size 1, requested type "simple"
  2432                           ; Number of cases is 1, Range of values is 48 to 48
  2433                           ; switch strategies available:
  2434                           ; Name         Instructions Cycles
  2435                           ; simple_byte            4     3 (average)
  2436                           ;	Chosen strategy is simple_byte
  2437   001B96  51B9               	movf	??_vfpfcnvrt& (0+255),w,b
  2438   001B98  0A30               	xorlw	48	; case 48
  2439   001B9A  B4D8               	btfsc	status,2,c
  2440   001B9C  EFA8  F00D         	goto	l7082
  2441   001BA0  EFB2  F00D         	goto	l7086
  2442   001BA4                     l7092:
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2446   001BA4  51BC               	movf	vfpfcnvrt@done& (0+255),w,b
  2447   001BA6  11BD               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2448   001BA8  B4D8               	btfsc	status,2,c
  2449   001BAA  EFD9  F00D         	goto	u8651
  2450   001BAE  EFDB  F00D         	goto	u8650
  2451   001BB2                     u8651:
  2452   001BB2  EFB8  F00D         	goto	l7090
  2453   001BB6                     u8650:
  2454   001BB6                     
  2455                           ; BSR set to: 0
  2456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  2457   001BB6  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2458   001BBA  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2459   001BBE  CFDE FFF6          	movff	postinc2,tblptrl
  2460   001BC2  CFDD FFF7          	movff	postdec2,tblptrh
  2461   001BC6                     	if	0	;tblptru may be non-zero
  2462   001BC6                     	endif
  2463   001BC6                     	if	0	;tblptru may be non-zero
  2464   001BC6                     	endif
  2465   001BC6  0008               	tblrd		*
  2466   001BC8  50F5               	movf	tablat,w,c
  2467   001BCA  0A2A               	xorlw	42
  2468   001BCC  A4D8               	btfss	status,2,c
  2469   001BCE  EFEB  F00D         	goto	u8661
  2470   001BD2  EFED  F00D         	goto	u8660
  2471   001BD6                     u8661:
  2472   001BD6  EF16  F00E         	goto	l7102
  2473   001BDA                     u8660:
  2474   001BDA                     
  2475                           ; BSR set to: 0
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  2477   001BDA  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2478   001BDE  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2479   001BE2  2ADE               	incf	postinc2,f,c
  2480   001BE4  0E00               	movlw	0
  2481   001BE6  22DD               	addwfc	postdec2,f,c
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2484   001BE8  C0B7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2485   001BEC  C0B8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2486   001BF0  CFDF F0B9          	movff	indf2,??_vfpfcnvrt
  2487   001BF4  0E02               	movlw	2
  2488   001BF6  26DE               	addwf	postinc2,f,c
  2489   001BF8  CFDF F0BA          	movff	indf2,??_vfpfcnvrt+1
  2490   001BFC  0E00               	movlw	0
  2491   001BFE  22DD               	addwfc	postdec2,f,c
  2492   001C00  C0B9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2493   001C04  C0BA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2494   001C08  CFDE F057          	movff	postinc2,_width
  2495   001C0C  CFDD F058          	movff	postdec2,_width+1
  2496   001C10                     
  2497                           ; BSR set to: 0
  2498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2499   001C10  BE58               	btfsc	(_width+1)^0,7,c
  2500   001C12  EF0F  F00E         	goto	u8670
  2501   001C16  EF0D  F00E         	goto	u8671
  2502   001C1A                     u8671:
  2503   001C1A  EF4A  F00E         	goto	l7110
  2504   001C1E                     u8670:
  2505   001C1E                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2508   001C1E  8069               	bsf	_flags^0,0,c
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2511   001C20  6C57               	negf	_width^0,c
  2512   001C22  1E58               	comf	(_width+1)^0,f,c
  2513   001C24  B0D8               	btfsc	status,0,c
  2514   001C26  2A58               	incf	(_width+1)^0,f,c
  2515   001C28  EF4A  F00E         	goto	l7110
  2516   001C2C                     l7102:
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2520   001C2C  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2521   001C30  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2522   001C34  CFDE F01A          	movff	postinc2,atoi@s
  2523   001C38  CFDD F01B          	movff	postdec2,atoi@s+1
  2524   001C3C  ECE3  F020         	call	_atoi	;wreg free
  2525   001C40  C01A  F057         	movff	?_atoi,_width
  2526   001C44  C01B  F058         	movff	?_atoi+1,_width+1
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2529   001C48  EF2D  F00E         	goto	l7108
  2530   001C4C                     l7104:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2534   001C4C  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2535   001C50  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2536   001C54  2ADE               	incf	postinc2,f,c
  2537   001C56  0E00               	movlw	0
  2538   001C58  22DD               	addwfc	postdec2,f,c
  2539   001C5A                     l7108:
  2540   001C5A  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2541   001C5E  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2542   001C62  CFDE FFF6          	movff	postinc2,tblptrl
  2543   001C66  CFDD FFF7          	movff	postdec2,tblptrh
  2544   001C6A                     	if	0	;tblptru may be non-zero
  2545   001C6A                     	endif
  2546   001C6A                     	if	0	;tblptru may be non-zero
  2547   001C6A                     	endif
  2548   001C6A  0008               	tblrd		*
  2549   001C6C  CFF5 F0B9          	movff	tablat,??_vfpfcnvrt
  2550   001C70  0ED0               	movlw	208
  2551   001C72  0100               	movlb	0	; () banked
  2552   001C74  25B9               	addwf	??_vfpfcnvrt& (0+255),w,b
  2553   001C76  6FBA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2554   001C78  6BBB               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  2555   001C7A  0EFF               	movlw	255
  2556   001C7C  23BB               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  2557   001C7E  51BB               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  2558   001C80  E109               	bnz	u8680
  2559   001C82  0E0A               	movlw	10
  2560   001C84  5DBA               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  2561   001C86  A0D8               	btfss	status,0,c
  2562   001C88  EF48  F00E         	goto	u8681
  2563   001C8C  EF4A  F00E         	goto	u8680
  2564   001C90                     u8681:
  2565   001C90  EF26  F00E         	goto	l7104
  2566   001C94                     u8680:
  2567   001C94                     l7110:
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  2571   001C94  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2572   001C98  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2573   001C9C  CFDE FFF6          	movff	postinc2,tblptrl
  2574   001CA0  CFDD FFF7          	movff	postdec2,tblptrh
  2575   001CA4                     	if	0	;tblptru may be non-zero
  2576   001CA4                     	endif
  2577   001CA4                     	if	0	;tblptru may be non-zero
  2578   001CA4                     	endif
  2579   001CA4  0008               	tblrd		*
  2580   001CA6  50F5               	movf	tablat,w,c
  2581   001CA8  0A2E               	xorlw	46
  2582   001CAA  A4D8               	btfss	status,2,c
  2583   001CAC  EF5A  F00E         	goto	u8691
  2584   001CB0  EF5C  F00E         	goto	u8690
  2585   001CB4                     u8691:
  2586   001CB4  EFCA  F00E         	goto	l7128
  2587   001CB8                     u8690:
  2588   001CB8                     
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  2591   001CB8  0E00               	movlw	0
  2592   001CBA  6E5A               	movwf	(_prec+1)^0,c
  2593   001CBC  0E00               	movlw	0
  2594   001CBE  6E59               	movwf	_prec^0,c
  2595   001CC0                     
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  2598   001CC0  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2599   001CC4  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2600   001CC8  2ADE               	incf	postinc2,f,c
  2601   001CCA  0E00               	movlw	0
  2602   001CCC  22DD               	addwfc	postdec2,f,c
  2603   001CCE                     
  2604                           ; BSR set to: 0
  2605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  2606   001CCE  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2607   001CD2  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2608   001CD6  CFDE FFF6          	movff	postinc2,tblptrl
  2609   001CDA  CFDD FFF7          	movff	postdec2,tblptrh
  2610   001CDE                     	if	0	;tblptru may be non-zero
  2611   001CDE                     	endif
  2612   001CDE                     	if	0	;tblptru may be non-zero
  2613   001CDE                     	endif
  2614   001CDE  0008               	tblrd		*
  2615   001CE0  50F5               	movf	tablat,w,c
  2616   001CE2  0A2A               	xorlw	42
  2617   001CE4  A4D8               	btfss	status,2,c
  2618   001CE6  EF77  F00E         	goto	u8701
  2619   001CEA  EF79  F00E         	goto	u8700
  2620   001CEE                     u8701:
  2621   001CEE  EF96  F00E         	goto	l7120
  2622   001CF2                     u8700:
  2623   001CF2                     
  2624                           ; BSR set to: 0
  2625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  2626   001CF2  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2627   001CF6  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2628   001CFA  2ADE               	incf	postinc2,f,c
  2629   001CFC  0E00               	movlw	0
  2630   001CFE  22DD               	addwfc	postdec2,f,c
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2633   001D00  C0B7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2634   001D04  C0B8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2635   001D08  CFDF F0B9          	movff	indf2,??_vfpfcnvrt
  2636   001D0C  0E02               	movlw	2
  2637   001D0E  26DE               	addwf	postinc2,f,c
  2638   001D10  CFDF F0BA          	movff	indf2,??_vfpfcnvrt+1
  2639   001D14  0E00               	movlw	0
  2640   001D16  22DD               	addwfc	postdec2,f,c
  2641   001D18  C0B9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2642   001D1C  C0BA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2643   001D20  CFDE F059          	movff	postinc2,_prec
  2644   001D24  CFDD F05A          	movff	postdec2,_prec+1
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  2647   001D28  EFCA  F00E         	goto	l7128
  2648   001D2C                     l7120:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  2652   001D2C  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2653   001D30  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2654   001D34  CFDE F01A          	movff	postinc2,atoi@s
  2655   001D38  CFDD F01B          	movff	postdec2,atoi@s+1
  2656   001D3C  ECE3  F020         	call	_atoi	;wreg free
  2657   001D40  C01A  F059         	movff	?_atoi,_prec
  2658   001D44  C01B  F05A         	movff	?_atoi+1,_prec+1
  2659                           
  2660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2661   001D48  EFAD  F00E         	goto	l7126
  2662   001D4C                     l7122:
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  2666   001D4C  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2667   001D50  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2668   001D54  2ADE               	incf	postinc2,f,c
  2669   001D56  0E00               	movlw	0
  2670   001D58  22DD               	addwfc	postdec2,f,c
  2671   001D5A                     l7126:
  2672   001D5A  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2673   001D5E  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2674   001D62  CFDE FFF6          	movff	postinc2,tblptrl
  2675   001D66  CFDD FFF7          	movff	postdec2,tblptrh
  2676   001D6A                     	if	0	;tblptru may be non-zero
  2677   001D6A                     	endif
  2678   001D6A                     	if	0	;tblptru may be non-zero
  2679   001D6A                     	endif
  2680   001D6A  0008               	tblrd		*
  2681   001D6C  CFF5 F0B9          	movff	tablat,??_vfpfcnvrt
  2682   001D70  0ED0               	movlw	208
  2683   001D72  0100               	movlb	0	; () banked
  2684   001D74  25B9               	addwf	??_vfpfcnvrt& (0+255),w,b
  2685   001D76  6FBA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2686   001D78  6BBB               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  2687   001D7A  0EFF               	movlw	255
  2688   001D7C  23BB               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  2689   001D7E  51BB               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  2690   001D80  E109               	bnz	u8710
  2691   001D82  0E0A               	movlw	10
  2692   001D84  5DBA               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  2693   001D86  A0D8               	btfss	status,0,c
  2694   001D88  EFC8  F00E         	goto	u8711
  2695   001D8C  EFCA  F00E         	goto	u8710
  2696   001D90                     u8711:
  2697   001D90  EFA6  F00E         	goto	l7122
  2698   001D94                     u8710:
  2699   001D94                     l7128:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2703   001D94  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2704   001D98  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2705   001D9C  CFDE F0C9          	movff	postinc2,vfpfcnvrt@cp
  2706   001DA0  CFDD F0CA          	movff	postdec2,vfpfcnvrt@cp+1
  2707   001DA4                     
  2708                           ; BSR set to: 0
  2709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2710   001DA4  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2711   001DA8  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2712   001DAC                     	if	0	;tblptru may be non-zero
  2713   001DAC                     	endif
  2714   001DAC                     	if	0	;tblptru may be non-zero
  2715   001DAC                     	endif
  2716   001DAC  0008               	tblrd		*
  2717   001DAE  50F5               	movf	tablat,w,c
  2718   001DB0  0A64               	xorlw	100
  2719   001DB2  B4D8               	btfsc	status,2,c
  2720   001DB4  EFDE  F00E         	goto	u8721
  2721   001DB8  EFE0  F00E         	goto	u8720
  2722   001DBC                     u8721:
  2723   001DBC  EFEE  F00E         	goto	l7134
  2724   001DC0                     u8720:
  2725   001DC0                     
  2726                           ; BSR set to: 0
  2727   001DC0  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2728   001DC4  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2729   001DC8                     	if	0	;tblptru may be non-zero
  2730   001DC8                     	endif
  2731   001DC8                     	if	0	;tblptru may be non-zero
  2732   001DC8                     	endif
  2733   001DC8  0008               	tblrd		*
  2734   001DCA  50F5               	movf	tablat,w,c
  2735   001DCC  0A69               	xorlw	105
  2736   001DCE  A4D8               	btfss	status,2,c
  2737   001DD0  EFEC  F00E         	goto	u8731
  2738   001DD4  EFEE  F00E         	goto	u8730
  2739   001DD8                     u8731:
  2740   001DD8  EF31  F00F         	goto	l7140
  2741   001DDC                     u8730:
  2742   001DDC                     l7134:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2746   001DDC  C0B7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2747   001DE0  C0B8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2748   001DE4  CFDF F0B9          	movff	indf2,??_vfpfcnvrt
  2749   001DE8  0E02               	movlw	2
  2750   001DEA  26DE               	addwf	postinc2,f,c
  2751   001DEC  CFDF F0BA          	movff	indf2,??_vfpfcnvrt+1
  2752   001DF0  0E00               	movlw	0
  2753   001DF2  22DD               	addwfc	postdec2,f,c
  2754   001DF4  C0B9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2755   001DF8  C0BA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2756   001DFC  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  2757   001E00  CFDD F0C1          	movff	postdec2,vfpfcnvrt@convarg+1
  2758   001E04  0E00               	movlw	0
  2759   001E06  BFC1               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2760   001E08  0EFF               	movlw	-1
  2761   001E0A  6FC2               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2762   001E0C  6FC3               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2763   001E0E  6FC4               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2764   001E10  6FC5               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2765   001E12  6FC6               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2766   001E14  6FC7               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2769   001E16  0E01               	movlw	1
  2770   001E18  25C9               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2771   001E1A  6FB9               	movwf	??_vfpfcnvrt& (0+255),b
  2772   001E1C  0E00               	movlw	0
  2773   001E1E  21CA               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2774   001E20  6FBA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2775   001E22  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2776   001E26  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2777   001E2A  C0B9  FFDE         	movff	??_vfpfcnvrt,postinc2
  2778   001E2E  C0BA  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2779   001E32                     
  2780                           ; BSR set to: 0
  2781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2782   001E32  C0B3  F02F         	movff	vfpfcnvrt@fp,dtoa@fp
  2783   001E36  C0B4  F030         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2784   001E3A  C0C0  F031         	movff	vfpfcnvrt@convarg,dtoa@d
  2785   001E3E  C0C1  F032         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2786   001E42  C0C2  F033         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2787   001E46  C0C3  F034         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2788   001E4A  C0C4  F035         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2789   001E4E  C0C5  F036         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2790   001E52  C0C6  F037         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2791   001E56  C0C7  F038         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2792   001E5A  EC8F  F019         	call	_dtoa	;wreg free
  2793   001E5E  EF8A  F010         	goto	l1174
  2794   001E62                     l7140:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  2798   001E62  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2799   001E66  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2800   001E6A  CFDE FFF6          	movff	postinc2,tblptrl
  2801   001E6E  CFDD FFF7          	movff	postdec2,tblptrh
  2802   001E72                     	if	0	;tblptru may be non-zero
  2803   001E72                     	endif
  2804   001E72                     	if	0	;tblptru may be non-zero
  2805   001E72                     	endif
  2806   001E72  0008               	tblrd		*
  2807   001E74  50F5               	movf	tablat,w,c
  2808   001E76  0A73               	xorlw	115
  2809   001E78  B4D8               	btfsc	status,2,c
  2810   001E7A  EF41  F00F         	goto	u8741
  2811   001E7E  EF43  F00F         	goto	u8740
  2812   001E82                     u8741:
  2813   001E82  EF5E  F00F         	goto	l7144
  2814   001E86                     u8740:
  2815   001E86                     
  2816                           ; BSR set to: 0
  2817   001E86  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2818   001E8A  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2819   001E8E  CFDE F014          	movff	postinc2,strncmp@_l
  2820   001E92  CFDD F015          	movff	postdec2,strncmp@_l+1
  2821   001E96  0E8D               	movlw	low STR_30
  2822   001E98  6E16               	movwf	strncmp@_r^0,c
  2823   001E9A  0E10               	movlw	high STR_30
  2824   001E9C  6E17               	movwf	(strncmp@_r+1)^0,c
  2825   001E9E  0E00               	movlw	0
  2826   001EA0  6E19               	movwf	(strncmp@n+1)^0,c
  2827   001EA2  0E03               	movlw	3
  2828   001EA4  6E18               	movwf	strncmp@n^0,c
  2829   001EA6  EC1B  F024         	call	_strncmp	;wreg free
  2830   001EAA  5014               	movf	?_strncmp^0,w,c
  2831   001EAC  1015               	iorwf	(?_strncmp+1)^0,w,c
  2832   001EAE  A4D8               	btfss	status,2,c
  2833   001EB0  EF5C  F00F         	goto	u8751
  2834   001EB4  EF5E  F00F         	goto	u8750
  2835   001EB8                     u8751:
  2836   001EB8  EFA0  F00F         	goto	l7156
  2837   001EBC                     u8750:
  2838   001EBC                     l7144:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  2841   001EBC  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2842   001EC0  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2843   001EC4  CFDE FFF6          	movff	postinc2,tblptrl
  2844   001EC8  CFDD FFF7          	movff	postdec2,tblptrh
  2845   001ECC                     	if	0	;tblptru may be non-zero
  2846   001ECC                     	endif
  2847   001ECC                     	if	0	;tblptru may be non-zero
  2848   001ECC                     	endif
  2849   001ECC  0008               	tblrd		*
  2850   001ECE  50F5               	movf	tablat,w,c
  2851   001ED0  0A73               	xorlw	115
  2852   001ED2  B4D8               	btfsc	status,2,c
  2853   001ED4  EF6E  F00F         	goto	u8761
  2854   001ED8  EF70  F00F         	goto	u8760
  2855   001EDC                     u8761:
  2856   001EDC  EF77  F00F         	goto	l7148
  2857   001EE0                     u8760:
  2858   001EE0  0E00               	movlw	0
  2859   001EE2  0100               	movlb	0	; () banked
  2860   001EE4  6FBF               	movwf	(_vfpfcnvrt$1510+1)& (0+255),b
  2861   001EE6  0E03               	movlw	3
  2862   001EE8  6FBE               	movwf	_vfpfcnvrt$1510& (0+255),b
  2863   001EEA  EF7C  F00F         	goto	l7150
  2864   001EEE                     l7148:
  2865   001EEE  0E00               	movlw	0
  2866   001EF0  0100               	movlb	0	; () banked
  2867   001EF2  6FBF               	movwf	(_vfpfcnvrt$1510+1)& (0+255),b
  2868   001EF4  0E01               	movlw	1
  2869   001EF6  6FBE               	movwf	_vfpfcnvrt$1510& (0+255),b
  2870   001EF8                     l7150:
  2871                           
  2872                           ; BSR set to: 0
  2873   001EF8  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2874   001EFC  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2875   001F00  51BE               	movf	_vfpfcnvrt$1510& (0+255),w,b
  2876   001F02  26DE               	addwf	postinc2,f,c
  2877   001F04  51BF               	movf	(_vfpfcnvrt$1510+1)& (0+255),w,b
  2878   001F06  22DD               	addwfc	postdec2,f,c
  2879   001F08                     
  2880                           ; BSR set to: 0
  2881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  2882   001F08  C0B3  F01D         	movff	vfpfcnvrt@fp,stoa@fp
  2883   001F0C  C0B4  F01E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2884   001F10  C0B7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2885   001F14  C0B8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2886   001F18  CFDF F0B9          	movff	indf2,??_vfpfcnvrt
  2887   001F1C  0E02               	movlw	2
  2888   001F1E  26DE               	addwf	postinc2,f,c
  2889   001F20  CFDF F0BA          	movff	indf2,??_vfpfcnvrt+1
  2890   001F24  0E00               	movlw	0
  2891   001F26  22DD               	addwfc	postdec2,f,c
  2892   001F28  C0B9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2893   001F2C  C0BA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2894   001F30  CFDE F01F          	movff	postinc2,stoa@s
  2895   001F34  CFDD F020          	movff	postdec2,stoa@s+1
  2896   001F38  ECFE  F01D         	call	_stoa	;wreg free
  2897   001F3C  EF8A  F010         	goto	l1174
  2898   001F40                     l7156:
  2899                           
  2900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2901   001F40  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2902   001F44  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2903   001F48  CFDE F0C9          	movff	postinc2,vfpfcnvrt@cp
  2904   001F4C  CFDD F0CA          	movff	postdec2,vfpfcnvrt@cp+1
  2905   001F50                     
  2906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2907   001F50  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2908   001F54  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2909   001F58                     	if	0	;tblptru may be non-zero
  2910   001F58                     	endif
  2911   001F58                     	if	0	;tblptru may be non-zero
  2912   001F58                     	endif
  2913   001F58  0008               	tblrd		*
  2914   001F5A  CFF5 F0C8          	movff	tablat,vfpfcnvrt@c
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2917   001F5E  EFBD  F00F         	goto	l7168
  2918   001F62                     l7160:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2922   001F62  4BC9               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2923   001F64  2BCA               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2926   001F66  EFD7  F00F         	goto	l7170
  2927   001F6A                     l7162:
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2931   001F6A  0E6C               	movlw	108
  2932   001F6C  6FC8               	movwf	vfpfcnvrt@c& (0+255),b
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2935   001F6E  EFD7  F00F         	goto	l7170
  2936   001F72                     l7164:
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2940   001F72  0E00               	movlw	0
  2941   001F74  6FC8               	movwf	vfpfcnvrt@c& (0+255),b
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2944   001F76  EFD7  F00F         	goto	l7170
  2945   001F7A                     l7168:
  2946   001F7A  0100               	movlb	0	; () banked
  2947   001F7C  51C8               	movf	vfpfcnvrt@c& (0+255),w,b
  2948   001F7E  6FB9               	movwf	??_vfpfcnvrt& (0+255),b
  2949   001F80  6BBA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2950                           
  2951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2952                           ; Switch size 1, requested type "simple"
  2953                           ; Number of cases is 1, Range of values is 0 to 0
  2954                           ; switch strategies available:
  2955                           ; Name         Instructions Cycles
  2956                           ; simple_byte            4     3 (average)
  2957                           ;	Chosen strategy is simple_byte
  2958   001F82  51BA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2959   001F84  0A00               	xorlw	0	; case 0
  2960   001F86  B4D8               	btfsc	status,2,c
  2961   001F88  EFC8  F00F         	goto	l7704
  2962   001F8C  EFB9  F00F         	goto	l7164
  2963   001F90                     l7704:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ; Switch size 1, requested type "simple"
  2967                           ; Number of cases is 3, Range of values is 76 to 108
  2968                           ; switch strategies available:
  2969                           ; Name         Instructions Cycles
  2970                           ; simple_byte           10     6 (average)
  2971                           ;	Chosen strategy is simple_byte
  2972   001F90  51B9               	movf	??_vfpfcnvrt& (0+255),w,b
  2973   001F92  0A4C               	xorlw	76	; case 76
  2974   001F94  B4D8               	btfsc	status,2,c
  2975   001F96  EFB1  F00F         	goto	l7160
  2976   001F9A  0A2A               	xorlw	42	; case 102
  2977   001F9C  B4D8               	btfsc	status,2,c
  2978   001F9E  EFB5  F00F         	goto	l7162
  2979   001FA2  0A0A               	xorlw	10	; case 108
  2980   001FA4  B4D8               	btfsc	status,2,c
  2981   001FA6  EFB1  F00F         	goto	l7160
  2982   001FAA  EFB9  F00F         	goto	l7164
  2983   001FAE                     l7170:
  2984                           
  2985                           ; BSR set to: 0
  2986   001FAE  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2987   001FB2  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2988   001FB6                     	if	0	;tblptru may be non-zero
  2989   001FB6                     	endif
  2990   001FB6                     	if	0	;tblptru may be non-zero
  2991   001FB6                     	endif
  2992   001FB6  0008               	tblrd		*
  2993   001FB8  50F5               	movf	tablat,w,c
  2994   001FBA  0A66               	xorlw	102
  2995   001FBC  A4D8               	btfss	status,2,c
  2996   001FBE  EFE3  F00F         	goto	u8771
  2997   001FC2  EFE5  F00F         	goto	u8770
  2998   001FC6                     u8771:
  2999   001FC6  EF6D  F010         	goto	l7190
  3000   001FCA                     u8770:
  3001   001FCA  EF1B  F010         	goto	l7178
  3002   001FCE                     l7172:
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3006   001FCE  C0B7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3007   001FD2  C0B8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3008   001FD6  CFDF F0B9          	movff	indf2,??_vfpfcnvrt
  3009   001FDA  0E04               	movlw	4
  3010   001FDC  26DE               	addwf	postinc2,f,c
  3011   001FDE  CFDF F0BA          	movff	indf2,??_vfpfcnvrt+1
  3012   001FE2  0E00               	movlw	0
  3013   001FE4  22DD               	addwfc	postdec2,f,c
  3014   001FE6  C0B9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3015   001FEA  C0BA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3016   001FEE  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  3017   001FF2  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  3018   001FF6  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  3019   001FFA  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3022   001FFE  EF30  F010         	goto	l7180
  3023   002002                     l7174:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3027   002002  C0B7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3028   002006  C0B8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3029   00200A  CFDF F0B9          	movff	indf2,??_vfpfcnvrt
  3030   00200E  0E04               	movlw	4
  3031   002010  26DE               	addwf	postinc2,f,c
  3032   002012  CFDF F0BA          	movff	indf2,??_vfpfcnvrt+1
  3033   002016  0E00               	movlw	0
  3034   002018  22DD               	addwfc	postdec2,f,c
  3035   00201A  C0B9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3036   00201E  C0BA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3037   002022  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  3038   002026  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  3039   00202A  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  3040   00202E  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3043   002032  EF30  F010         	goto	l7180
  3044   002036                     l7178:
  3045                           
  3046                           ; BSR set to: 0
  3047   002036  51C8               	movf	vfpfcnvrt@c& (0+255),w,b
  3048   002038  6FB9               	movwf	??_vfpfcnvrt& (0+255),b
  3049   00203A  6BBA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3050                           
  3051                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3052                           ; Switch size 1, requested type "simple"
  3053                           ; Number of cases is 1, Range of values is 0 to 0
  3054                           ; switch strategies available:
  3055                           ; Name         Instructions Cycles
  3056                           ; simple_byte            4     3 (average)
  3057                           ;	Chosen strategy is simple_byte
  3058   00203C  51BA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3059   00203E  0A00               	xorlw	0	; case 0
  3060   002040  B4D8               	btfsc	status,2,c
  3061   002042  EF25  F010         	goto	l7706
  3062   002046  EF30  F010         	goto	l7180
  3063   00204A                     l7706:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ; Switch size 1, requested type "simple"
  3067                           ; Number of cases is 2, Range of values is 76 to 108
  3068                           ; switch strategies available:
  3069                           ; Name         Instructions Cycles
  3070                           ; simple_byte            7     4 (average)
  3071                           ;	Chosen strategy is simple_byte
  3072   00204A  51B9               	movf	??_vfpfcnvrt& (0+255),w,b
  3073   00204C  0A4C               	xorlw	76	; case 76
  3074   00204E  B4D8               	btfsc	status,2,c
  3075   002050  EF01  F010         	goto	l7174
  3076   002054  0A20               	xorlw	32	; case 108
  3077   002056  B4D8               	btfsc	status,2,c
  3078   002058  EFE7  F00F         	goto	l7172
  3079   00205C  EF30  F010         	goto	l7180
  3080   002060                     l7180:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3084   002060  0E01               	movlw	1
  3085   002062  25C9               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3086   002064  6FB9               	movwf	??_vfpfcnvrt& (0+255),b
  3087   002066  0E00               	movlw	0
  3088   002068  21CA               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3089   00206A  6FBA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3090   00206C  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3091   002070  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3092   002074  C0B9  FFDE         	movff	??_vfpfcnvrt,postinc2
  3093   002078  C0BA  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3096   00207C  EF57  F010         	goto	l7188
  3097   002080                     l7182:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3101   002080  C0B3  F080         	movff	vfpfcnvrt@fp,efgtoa@fp
  3102   002084  C0B4  F081         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3103   002088  C0C0  F082         	movff	vfpfcnvrt@convarg,efgtoa@f
  3104   00208C  C0C1  F083         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3105   002090  C0C2  F084         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3106   002094  C0C3  F085         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3107   002098  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3108   00209C  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3109   0020A0                     	if	0	;tblptru may be non-zero
  3110   0020A0                     	endif
  3111   0020A0                     	if	0	;tblptru may be non-zero
  3112   0020A0                     	endif
  3113   0020A0  0008               	tblrd		*
  3114   0020A2  CFF5 F086          	movff	tablat,efgtoa@c
  3115   0020A6  EC4D  F008         	call	_efgtoa	;wreg free
  3116   0020AA  EF8A  F010         	goto	l1174
  3117   0020AE                     l7188:
  3118                           
  3119                           ; BSR set to: 0
  3120   0020AE  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3121   0020B2  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3122   0020B6                     	if	0	;tblptru may be non-zero
  3123   0020B6                     	endif
  3124   0020B6                     	if	0	;tblptru may be non-zero
  3125   0020B6                     	endif
  3126   0020B6  0008               	tblrd		*
  3127   0020B8  50F5               	movf	tablat,w,c
  3128   0020BA  6FB9               	movwf	??_vfpfcnvrt& (0+255),b
  3129   0020BC  6BBA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3130                           
  3131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3132                           ; Switch size 1, requested type "simple"
  3133                           ; Number of cases is 1, Range of values is 0 to 0
  3134                           ; switch strategies available:
  3135                           ; Name         Instructions Cycles
  3136                           ; simple_byte            4     3 (average)
  3137                           ;	Chosen strategy is simple_byte
  3138   0020BE  51BA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3139   0020C0  0A00               	xorlw	0	; case 0
  3140   0020C2  B4D8               	btfsc	status,2,c
  3141   0020C4  EF66  F010         	goto	l7708
  3142   0020C8  EF6D  F010         	goto	l7190
  3143   0020CC                     l7708:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ; Switch size 1, requested type "simple"
  3147                           ; Number of cases is 1, Range of values is 102 to 102
  3148                           ; switch strategies available:
  3149                           ; Name         Instructions Cycles
  3150                           ; simple_byte            4     3 (average)
  3151                           ;	Chosen strategy is simple_byte
  3152   0020CC  51B9               	movf	??_vfpfcnvrt& (0+255),w,b
  3153   0020CE  0A66               	xorlw	102	; case 102
  3154   0020D0  B4D8               	btfsc	status,2,c
  3155   0020D2  EF40  F010         	goto	l7182
  3156   0020D6  EF6D  F010         	goto	l7190
  3157   0020DA                     l7190:
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3160   0020DA  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3161   0020DE  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3162   0020E2  2ADE               	incf	postinc2,f,c
  3163   0020E4  0E00               	movlw	0
  3164   0020E6  22DD               	addwfc	postdec2,f,c
  3165   0020E8  EF8A  F010         	goto	l1174
  3166   0020EC                     l7194:
  3167                           
  3168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3169   0020EC  C0B5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3170   0020F0  C0B6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3171   0020F4  CFDE FFF6          	movff	postinc2,tblptrl
  3172   0020F8  CFDD FFF7          	movff	postdec2,tblptrh
  3173   0020FC                     	if	0	;tblptru may be non-zero
  3174   0020FC                     	endif
  3175   0020FC                     	if	0	;tblptru may be non-zero
  3176   0020FC                     	endif
  3177   0020FC  0008               	tblrd		*
  3178   0020FE  50F5               	movf	tablat,w,c
  3179   002100  6E14               	movwf	fputc@c^0,c
  3180   002102  6A15               	clrf	(fputc@c+1)^0,c
  3181   002104  C0B3  F016         	movff	vfpfcnvrt@fp,fputc@fp
  3182   002108  C0B4  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3183   00210C  EC8A  F024         	call	_fputc	;wreg free
  3184   002110  EF6D  F010         	goto	l7190
  3185   002114                     l1174:
  3186   002114  0012               	return		;funcret
  3187   002116                     __end_of_vfpfcnvrt:
  3188                           	callstack 0
  3189                           
  3190 ;; *************** function _strncmp *****************
  3191 ;; Defined at:
  3192 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  3195 ;;		 -> STR_18(6), STR_17(17), STR_11(6), STR_8(6), 
  3196 ;;		 -> STR_7(11), STR_4(6), STR_3(11), STR_2(21), 
  3197 ;;		 -> STR_1(24), 
  3198 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  3199 ;;		 -> STR_32(4), 
  3200 ;;  n               2   23[COMRAM] unsigned int 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  r               2   28[COMRAM] PTR const unsigned char 
  3203 ;;		 -> STR_32(4), 
  3204 ;;  l               2   26[COMRAM] PTR const unsigned char 
  3205 ;;		 -> STR_18(6), STR_17(17), STR_11(6), STR_8(6), 
  3206 ;;		 -> STR_7(11), STR_4(6), STR_3(11), STR_2(21), 
  3207 ;;		 -> STR_1(24), 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  2   19[COMRAM] int 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3217 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;Total ram usage:       11 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; Hardware stack levels required when called: 3
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_vfpfcnvrt
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text4
  3232   004836                     __ptext4:
  3233                           	callstack 0
  3234   004836                     _strncmp:
  3235                           	callstack 24
  3236   004836  C014  F01B         	movff	strncmp@_l,strncmp@l
  3237   00483A  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  3238   00483E  C016  F01D         	movff	strncmp@_r,strncmp@r
  3239   004842  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  3240   004846  0618               	decf	strncmp@n^0,f,c
  3241   004848  A0D8               	btfss	status,0,c
  3242   00484A  0619               	decf	(strncmp@n+1)^0,f,c
  3243   00484C  2818               	incf	strncmp@n^0,w,c
  3244   00484E  E106               	bnz	u8591
  3245   004850  2819               	incf	(strncmp@n+1)^0,w,c
  3246   004852  A4D8               	btfss	status,2,c
  3247   004854  EF2E  F024         	goto	u8591
  3248   004858  EF30  F024         	goto	u8590
  3249   00485C                     u8591:
  3250   00485C  EF3D  F024         	goto	l7060
  3251   004860                     u8590:
  3252   004860  0E00               	movlw	0
  3253   004862  6E15               	movwf	(?_strncmp+1)^0,c
  3254   004864  0E00               	movlw	0
  3255   004866  6E14               	movwf	?_strncmp^0,c
  3256   004868  EF89  F024         	goto	l1325
  3257   00486C                     l7058:
  3258   00486C  4A1B               	infsnz	strncmp@l^0,f,c
  3259   00486E  2A1C               	incf	(strncmp@l+1)^0,f,c
  3260   004870  4A1D               	infsnz	strncmp@r^0,f,c
  3261   004872  2A1E               	incf	(strncmp@r+1)^0,f,c
  3262   004874  0618               	decf	strncmp@n^0,f,c
  3263   004876  A0D8               	btfss	status,0,c
  3264   004878  0619               	decf	(strncmp@n+1)^0,f,c
  3265   00487A                     l7060:
  3266   00487A  C01B  FFF6         	movff	strncmp@l,tblptrl
  3267   00487E  C01C  FFF7         	movff	strncmp@l+1,tblptrh
  3268   004882                     	if	0	;tblptru may be non-zero
  3269   004882                     	endif
  3270   004882                     	if	0	;tblptru may be non-zero
  3271   004882                     	endif
  3272   004882  0008               	tblrd		*
  3273   004884  50F5               	movf	tablat,w,c
  3274   004886  0900               	iorlw	0
  3275   004888  B4D8               	btfsc	status,2,c
  3276   00488A  EF49  F024         	goto	u8601
  3277   00488E  EF4B  F024         	goto	u8600
  3278   004892                     u8601:
  3279   004892  EF77  F024         	goto	l7068
  3280   004896                     u8600:
  3281   004896  C01D  FFF6         	movff	strncmp@r,tblptrl
  3282   00489A  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  3283   00489E                     	if	0	;tblptru may be non-zero
  3284   00489E                     	endif
  3285   00489E                     	if	0	;tblptru may be non-zero
  3286   00489E                     	endif
  3287   00489E  0008               	tblrd		*
  3288   0048A0  50F5               	movf	tablat,w,c
  3289   0048A2  0900               	iorlw	0
  3290   0048A4  B4D8               	btfsc	status,2,c
  3291   0048A6  EF57  F024         	goto	u8611
  3292   0048AA  EF59  F024         	goto	u8610
  3293   0048AE                     u8611:
  3294   0048AE  EF77  F024         	goto	l7068
  3295   0048B2                     u8610:
  3296   0048B2  5018               	movf	strncmp@n^0,w,c
  3297   0048B4  1019               	iorwf	(strncmp@n+1)^0,w,c
  3298   0048B6  B4D8               	btfsc	status,2,c
  3299   0048B8  EF60  F024         	goto	u8621
  3300   0048BC  EF62  F024         	goto	u8620
  3301   0048C0                     u8621:
  3302   0048C0  EF77  F024         	goto	l7068
  3303   0048C4                     u8620:
  3304   0048C4  C01B  FFF6         	movff	strncmp@l,tblptrl
  3305   0048C8  C01C  FFF7         	movff	strncmp@l+1,tblptrh
  3306   0048CC                     	if	0	;tblptru may be non-zero
  3307   0048CC                     	endif
  3308   0048CC                     	if	0	;tblptru may be non-zero
  3309   0048CC                     	endif
  3310   0048CC  0008               	tblrd		*
  3311   0048CE  CFF5 F01A          	movff	tablat,??_strncmp
  3312   0048D2  C01D  FFF6         	movff	strncmp@r,tblptrl
  3313   0048D6  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  3314   0048DA                     	if	0	;tblptru may be non-zero
  3315   0048DA                     	endif
  3316   0048DA                     	if	0	;tblptru may be non-zero
  3317   0048DA                     	endif
  3318   0048DA  0008               	tblrd		*
  3319   0048DC  50F5               	movf	tablat,w,c
  3320   0048DE  181A               	xorwf	??_strncmp^0,w,c
  3321   0048E0  B4D8               	btfsc	status,2,c
  3322   0048E2  EF75  F024         	goto	u8631
  3323   0048E6  EF77  F024         	goto	u8630
  3324   0048EA                     u8631:
  3325   0048EA  EF36  F024         	goto	l7058
  3326   0048EE                     u8630:
  3327   0048EE                     l7068:
  3328   0048EE  C01B  FFF6         	movff	strncmp@l,tblptrl
  3329   0048F2  C01C  FFF7         	movff	strncmp@l+1,tblptrh
  3330   0048F6                     	if	0	;tblptru may be non-zero
  3331   0048F6                     	endif
  3332   0048F6                     	if	0	;tblptru may be non-zero
  3333   0048F6                     	endif
  3334   0048F6  0008               	tblrd		*
  3335   0048F8  CFF5 F01A          	movff	tablat,??_strncmp
  3336   0048FC  C01D  FFF6         	movff	strncmp@r,tblptrl
  3337   004900  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  3338   004904                     	if	0	;tblptru may be non-zero
  3339   004904                     	endif
  3340   004904                     	if	0	;tblptru may be non-zero
  3341   004904                     	endif
  3342   004904  0008               	tblrd		*
  3343   004906  50F5               	movf	tablat,w,c
  3344   004908  5C1A               	subwf	??_strncmp^0,w,c
  3345   00490A  6E14               	movwf	?_strncmp^0,c
  3346   00490C  6A15               	clrf	(?_strncmp+1)^0,c
  3347   00490E  A0D8               	btfss	status,0,c
  3348   004910  0615               	decf	(?_strncmp+1)^0,f,c
  3349   004912                     l1325:
  3350   004912  0012               	return		;funcret
  3351   004914                     __end_of_strncmp:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _stoa *****************
  3355 ;; Defined at:
  3356 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  3359 ;;		 -> sprintf@f(11), 
  3360 ;;  s               2   30[COMRAM] PTR unsigned char 
  3361 ;;		 -> ?_sprintf(2), STR_23(6), STR_22(6), STR_21(6), 
  3362 ;;		 -> STR_20(6), STR_19(6), STR_16(6), STR_15(6), 
  3363 ;;		 -> STR_14(6), STR_13(6), STR_12(6), STR_10(4), 
  3364 ;;		 -> STR_9(4), STR_6(4), STR_5(4), main@voltage(4), 
  3365 ;;		 -> main@p1(4), 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  nuls            7   33[COMRAM] unsigned char [7]
  3368 ;;  l               2   48[COMRAM] int 
  3369 ;;  p               2   46[COMRAM] int 
  3370 ;;  cp              2   44[COMRAM] PTR unsigned char 
  3371 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_23(6), STR_22(6), 
  3372 ;;		 -> STR_21(6), STR_20(6), STR_19(6), STR_16(6), 
  3373 ;;		 -> STR_15(6), STR_14(6), STR_13(6), STR_12(6), 
  3374 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  3375 ;;		 -> main@voltage(4), main@p1(4), 
  3376 ;;  w               2   42[COMRAM] int 
  3377 ;;  i               2   40[COMRAM] int 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;Total ram usage:       22 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 5
  3394 ;; This function calls:
  3395 ;;		_fputc
  3396 ;;		_strlen
  3397 ;; This function is called by:
  3398 ;;		_vfpfcnvrt
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text5
  3403   003BFC                     __ptext5:
  3404                           	callstack 0
  3405   003BFC                     _stoa:
  3406                           	callstack 22
  3407   003BFC                     
  3408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  3409   003BFC  EE20  F0EA         	lfsr	2,stoa@F1175
  3410   003C00  EE10  F022         	lfsr	1,stoa@nuls
  3411   003C04  0E06               	movlw	6
  3412   003C06                     u8451:
  3413   003C06  CFDB FFE3          	movff	plusw2,plusw1
  3414   003C0A  06E8               	decf	wreg,f,c
  3415   003C0C  E2FC               	bc	u8451
  3416   003C0E                     
  3417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  3418   003C0E  C01F  F02D         	movff	stoa@s,stoa@cp
  3419   003C12  C020  F02E         	movff	stoa@s+1,stoa@cp+1
  3420   003C16                     
  3421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  3422   003C16  502D               	movf	stoa@cp^0,w,c
  3423   003C18  102E               	iorwf	(stoa@cp+1)^0,w,c
  3424   003C1A  A4D8               	btfss	status,2,c
  3425   003C1C  EF12  F01E         	goto	u8461
  3426   003C20  EF14  F01E         	goto	u8460
  3427   003C24                     u8461:
  3428   003C24  EF18  F01E         	goto	l6986
  3429   003C28                     u8460:
  3430   003C28                     
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  3432   003C28  0E22               	movlw	low stoa@nuls
  3433   003C2A  6E2D               	movwf	stoa@cp^0,c
  3434   003C2C  0E00               	movlw	high stoa@nuls
  3435   003C2E  6E2E               	movwf	(stoa@cp+1)^0,c
  3436   003C30                     l6986:
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  3439   003C30  C02D  F014         	movff	stoa@cp,strlen@s
  3440   003C34  C02E  F015         	movff	stoa@cp+1,strlen@s+1
  3441   003C38  ECB3  F029         	call	_strlen	;wreg free
  3442   003C3C  C014  F031         	movff	?_strlen,stoa@l
  3443   003C40  C015  F032         	movff	?_strlen+1,stoa@l+1
  3444   003C44                     
  3445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  3446   003C44  C059  F02F         	movff	_prec,stoa@p
  3447   003C48  C05A  F030         	movff	_prec+1,stoa@p+1
  3448   003C4C                     
  3449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  3450   003C4C  BE30               	btfsc	(stoa@p+1)^0,7,c
  3451   003C4E  EF2B  F01E         	goto	u8471
  3452   003C52  EF2D  F01E         	goto	u8470
  3453   003C56                     u8471:
  3454   003C56  EF42  F01E         	goto	l1130
  3455   003C5A                     u8470:
  3456   003C5A  5031               	movf	stoa@l^0,w,c
  3457   003C5C  5C2F               	subwf	stoa@p^0,w,c
  3458   003C5E  5030               	movf	(stoa@p+1)^0,w,c
  3459   003C60  0A80               	xorlw	128
  3460   003C62  6E21               	movwf	??_stoa^0,c
  3461   003C64  5032               	movf	(stoa@l+1)^0,w,c
  3462   003C66  0A80               	xorlw	128
  3463   003C68  5821               	subwfb	??_stoa^0,w,c
  3464   003C6A  A0D8               	btfss	status,0,c
  3465   003C6C  EF3A  F01E         	goto	u8481
  3466   003C70  EF3C  F01E         	goto	u8480
  3467   003C74                     u8481:
  3468   003C74  EF3E  F01E         	goto	l1128
  3469   003C78                     u8480:
  3470   003C78  EF42  F01E         	goto	l1130
  3471   003C7C                     l1128:
  3472   003C7C  C02F  F031         	movff	stoa@p,stoa@l
  3473   003C80  C030  F032         	movff	stoa@p+1,stoa@l+1
  3474   003C84                     l1130:
  3475                           
  3476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  3477   003C84  C031  F02F         	movff	stoa@l,stoa@p
  3478   003C88  C032  F030         	movff	stoa@l+1,stoa@p+1
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  3481   003C8C  C057  F02B         	movff	_width,stoa@w
  3482   003C90  C058  F02C         	movff	_width+1,stoa@w+1
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 859:     if (!(fl
      +                          ags & (1 << 0))) {
  3485   003C94  B069               	btfsc	_flags^0,0,c
  3486   003C96  EF4F  F01E         	goto	u8491
  3487   003C9A  EF51  F01E         	goto	u8490
  3488   003C9E                     u8491:
  3489   003C9E  EF6E  F01E         	goto	l7002
  3490   003CA2                     u8490:
  3491   003CA2  EF5F  F01E         	goto	l7000
  3492   003CA6                     l6996:
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  3495   003CA6  0E00               	movlw	0
  3496   003CA8  6E15               	movwf	(fputc@c+1)^0,c
  3497   003CAA  0E20               	movlw	32
  3498   003CAC  6E14               	movwf	fputc@c^0,c
  3499   003CAE  C01D  F016         	movff	stoa@fp,fputc@fp
  3500   003CB2  C01E  F017         	movff	stoa@fp+1,fputc@fp+1
  3501   003CB6  EC8A  F024         	call	_fputc	;wreg free
  3502   003CBA                     
  3503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  3504   003CBA  4A31               	infsnz	stoa@l^0,f,c
  3505   003CBC  2A32               	incf	(stoa@l+1)^0,f,c
  3506   003CBE                     l7000:
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  3509   003CBE  502B               	movf	stoa@w^0,w,c
  3510   003CC0  5C31               	subwf	stoa@l^0,w,c
  3511   003CC2  5032               	movf	(stoa@l+1)^0,w,c
  3512   003CC4  0A80               	xorlw	128
  3513   003CC6  6E21               	movwf	??_stoa^0,c
  3514   003CC8  502C               	movf	(stoa@w+1)^0,w,c
  3515   003CCA  0A80               	xorlw	128
  3516   003CCC  5821               	subwfb	??_stoa^0,w,c
  3517   003CCE  A0D8               	btfss	status,0,c
  3518   003CD0  EF6C  F01E         	goto	u8501
  3519   003CD4  EF6E  F01E         	goto	u8500
  3520   003CD8                     u8501:
  3521   003CD8  EF53  F01E         	goto	l6996
  3522   003CDC                     u8500:
  3523   003CDC                     l7002:
  3524                           
  3525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  3526   003CDC  0E00               	movlw	0
  3527   003CDE  6E2A               	movwf	(stoa@i+1)^0,c
  3528   003CE0  0E00               	movlw	0
  3529   003CE2  6E29               	movwf	stoa@i^0,c
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  3532   003CE4  EF93  F01E         	goto	l7010
  3533   003CE8                     l7004:
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  3536   003CE8  C02D  FFF6         	movff	stoa@cp,tblptrl
  3537   003CEC  C02E  FFF7         	movff	stoa@cp+1,tblptrh
  3538   003CF0  0E00               	movlw	low (__smallconst shr (0+16))
  3539   003CF2  6EF8               	movwf	tblptru,c
  3540   003CF4  0E0F               	movlw	(high __ramtop+-1)
  3541   003CF6  64F7               	cpfsgt	tblptrh,c
  3542   003CF8  D003               	bra	u8517
  3543   003CFA  0008               	tblrd		*
  3544   003CFC  50F5               	movf	tablat,w,c
  3545   003CFE  D005               	bra	u8510
  3546   003D00                     u8517:
  3547   003D00  CFF6 FFE1          	movff	tblptrl,fsr1l
  3548   003D04  CFF7 FFE2          	movff	tblptrh,fsr1h
  3549   003D08  50E7               	movf	indf1,w,c
  3550   003D0A                     u8510:
  3551   003D0A  6E21               	movwf	??_stoa^0,c
  3552   003D0C  5021               	movf	??_stoa^0,w,c
  3553   003D0E  6E14               	movwf	fputc@c^0,c
  3554   003D10  6A15               	clrf	(fputc@c+1)^0,c
  3555   003D12  C01D  F016         	movff	stoa@fp,fputc@fp
  3556   003D16  C01E  F017         	movff	stoa@fp+1,fputc@fp+1
  3557   003D1A  EC8A  F024         	call	_fputc	;wreg free
  3558   003D1E                     
  3559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  3560   003D1E  4A2D               	infsnz	stoa@cp^0,f,c
  3561   003D20  2A2E               	incf	(stoa@cp+1)^0,f,c
  3562   003D22                     
  3563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  3564   003D22  4A29               	infsnz	stoa@i^0,f,c
  3565   003D24  2A2A               	incf	(stoa@i+1)^0,f,c
  3566   003D26                     l7010:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  3569   003D26  502F               	movf	stoa@p^0,w,c
  3570   003D28  5C29               	subwf	stoa@i^0,w,c
  3571   003D2A  502A               	movf	(stoa@i+1)^0,w,c
  3572   003D2C  0A80               	xorlw	128
  3573   003D2E  6E21               	movwf	??_stoa^0,c
  3574   003D30  5030               	movf	(stoa@p+1)^0,w,c
  3575   003D32  0A80               	xorlw	128
  3576   003D34  5821               	subwfb	??_stoa^0,w,c
  3577   003D36  A0D8               	btfss	status,0,c
  3578   003D38  EFA0  F01E         	goto	u8521
  3579   003D3C  EFA2  F01E         	goto	u8520
  3580   003D40                     u8521:
  3581   003D40  EF74  F01E         	goto	l7004
  3582   003D44                     u8520:
  3583   003D44                     
  3584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 879:     if (flag
      +                          s & (1 << 0)) {
  3585   003D44  A069               	btfss	_flags^0,0,c
  3586   003D46  EFA7  F01E         	goto	u8531
  3587   003D4A  EFA9  F01E         	goto	u8530
  3588   003D4E                     u8531:
  3589   003D4E  EFC6  F01E         	goto	l1144
  3590   003D52                     u8530:
  3591   003D52  EFB7  F01E         	goto	l7018
  3592   003D56                     l7014:
  3593                           
  3594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 881:             
      +                          fputc(' ', fp);
  3595   003D56  0E00               	movlw	0
  3596   003D58  6E15               	movwf	(fputc@c+1)^0,c
  3597   003D5A  0E20               	movlw	32
  3598   003D5C  6E14               	movwf	fputc@c^0,c
  3599   003D5E  C01D  F016         	movff	stoa@fp,fputc@fp
  3600   003D62  C01E  F017         	movff	stoa@fp+1,fputc@fp+1
  3601   003D66  EC8A  F024         	call	_fputc	;wreg free
  3602   003D6A                     
  3603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 882:             
      +                          ++l;
  3604   003D6A  4A31               	infsnz	stoa@l^0,f,c
  3605   003D6C  2A32               	incf	(stoa@l+1)^0,f,c
  3606   003D6E                     l7018:
  3607                           
  3608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 880:         whil
      +                          e (l < w) {
  3609   003D6E  502B               	movf	stoa@w^0,w,c
  3610   003D70  5C31               	subwf	stoa@l^0,w,c
  3611   003D72  5032               	movf	(stoa@l+1)^0,w,c
  3612   003D74  0A80               	xorlw	128
  3613   003D76  6E21               	movwf	??_stoa^0,c
  3614   003D78  502C               	movf	(stoa@w+1)^0,w,c
  3615   003D7A  0A80               	xorlw	128
  3616   003D7C  5821               	subwfb	??_stoa^0,w,c
  3617   003D7E  A0D8               	btfss	status,0,c
  3618   003D80  EFC4  F01E         	goto	u8541
  3619   003D84  EFC6  F01E         	goto	u8540
  3620   003D88                     u8541:
  3621   003D88  EFAB  F01E         	goto	l7014
  3622   003D8C                     u8540:
  3623   003D8C                     l1144:
  3624   003D8C  0012               	return		;funcret
  3625   003D8E                     __end_of_stoa:
  3626                           	callstack 0
  3627                           
  3628 ;; *************** function _strlen *****************
  3629 ;; Defined at:
  3630 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  s               2   19[COMRAM] PTR const unsigned char 
  3633 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_23(6), STR_22(6), 
  3634 ;;		 -> STR_21(6), STR_20(6), STR_19(6), STR_16(6), 
  3635 ;;		 -> STR_15(6), STR_14(6), STR_13(6), STR_12(6), 
  3636 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  3637 ;;		 -> main@voltage(4), main@p1(4), 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  a               2   21[COMRAM] PTR const unsigned char 
  3640 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_23(6), STR_22(6), 
  3641 ;;		 -> STR_21(6), STR_20(6), STR_19(6), STR_16(6), 
  3642 ;;		 -> STR_15(6), STR_14(6), STR_13(6), STR_12(6), 
  3643 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  3644 ;;		 -> main@voltage(4), main@p1(4), 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  2   19[COMRAM] unsigned int 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;Total ram usage:        4 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 3
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_stoa
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text6
  3669   005366                     __ptext6:
  3670                           	callstack 0
  3671   005366                     _strlen:
  3672                           	callstack 23
  3673   005366  C014  F016         	movff	strlen@s,strlen@a
  3674   00536A  C015  F017         	movff	strlen@s+1,strlen@a+1
  3675   00536E  EFBB  F029         	goto	l6662
  3676   005372                     l6660:
  3677   005372  4A14               	infsnz	strlen@s^0,f,c
  3678   005374  2A15               	incf	(strlen@s+1)^0,f,c
  3679   005376                     l6662:
  3680   005376  C014  FFF6         	movff	strlen@s,tblptrl
  3681   00537A  C015  FFF7         	movff	strlen@s+1,tblptrh
  3682   00537E  0E00               	movlw	low (__smallconst shr (0+16))
  3683   005380  6EF8               	movwf	tblptru,c
  3684   005382  0E0F               	movlw	(high __ramtop+-1)
  3685   005384  64F7               	cpfsgt	tblptrh,c
  3686   005386  D003               	bra	u7917
  3687   005388  0008               	tblrd		*
  3688   00538A  50F5               	movf	tablat,w,c
  3689   00538C  D005               	bra	u7910
  3690   00538E                     u7917:
  3691   00538E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3692   005392  CFF7 FFE2          	movff	tblptrh,fsr1h
  3693   005396  50E7               	movf	indf1,w,c
  3694   005398                     u7910:
  3695   005398  0900               	iorlw	0
  3696   00539A  A4D8               	btfss	status,2,c
  3697   00539C  EFD2  F029         	goto	u7921
  3698   0053A0  EFD4  F029         	goto	u7920
  3699   0053A4                     u7921:
  3700   0053A4  EFB9  F029         	goto	l6660
  3701   0053A8                     u7920:
  3702   0053A8  5016               	movf	strlen@a^0,w,c
  3703   0053AA  5C14               	subwf	strlen@s^0,w,c
  3704   0053AC  6E14               	movwf	?_strlen^0,c
  3705   0053AE  5017               	movf	(strlen@a+1)^0,w,c
  3706   0053B0  5815               	subwfb	(strlen@s+1)^0,w,c
  3707   0053B2  6E15               	movwf	(?_strlen+1)^0,c
  3708   0053B4  0012               	return		;funcret
  3709   0053B6                     __end_of_strlen:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function _efgtoa *****************
  3713 ;; Defined at:
  3714 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3717 ;;		 -> sprintf@f(11), 
  3718 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3719 ;;  c               1    6[BANK0 ] unsigned char 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  u               4   47[BANK0 ] struct flui
  3722 ;;  g               4   41[BANK0 ] struct flui
  3723 ;;  l               4   34[BANK0 ] struct flui
  3724 ;;  h               4   30[BANK0 ] struct flui
  3725 ;;  ou              4   24[BANK0 ] struct flui
  3726 ;;  n               2   45[BANK0 ] int 
  3727 ;;  i               2   38[BANK0 ] int 
  3728 ;;  w               2   28[BANK0 ] int 
  3729 ;;  e               2   22[BANK0 ] int 
  3730 ;;  m               2   20[BANK0 ] int 
  3731 ;;  d               2   18[BANK0 ] int 
  3732 ;;  t               2   11[BANK0 ] int 
  3733 ;;  p               2    9[BANK0 ] int 
  3734 ;;  ne              2    7[BANK0 ] int 
  3735 ;;  sign            1   40[BANK0 ] unsigned char 
  3736 ;;  nmode           1   17[BANK0 ] unsigned char 
  3737 ;;  mode            1   16[BANK0 ] unsigned char 
  3738 ;;  pp              1   15[BANK0 ] unsigned char 
  3739 ;;  esign           1    0        unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3749 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Totals:         2      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;Total ram usage:       53 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 7
  3756 ;; This function calls:
  3757 ;;		___fladd
  3758 ;;		___fldiv
  3759 ;;		___fleq
  3760 ;;		___flge
  3761 ;;		___flmul
  3762 ;;		___flneg
  3763 ;;		___flsub
  3764 ;;		___fltol
  3765 ;;		___fpclassifyf
  3766 ;;		_floorf
  3767 ;;		_labs
  3768 ;;		_memcpy
  3769 ;;		_pad
  3770 ;;		_strcpy
  3771 ;; This function is called by:
  3772 ;;		_vfpfcnvrt
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text7
  3777   00109A                     __ptext7:
  3778                           	callstack 0
  3779   00109A                     _efgtoa:
  3780                           	callstack 20
  3781   00109A                     
  3782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3783   00109A  0E00               	movlw	0
  3784   00109C  0100               	movlb	0	; () banked
  3785   00109E  6FA8               	movwf	efgtoa@sign& (0+255),b
  3786   0010A0                     
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3789   0010A0  C082  F0A9         	movff	efgtoa@f,efgtoa@g
  3790   0010A4  C083  F0AA         	movff	efgtoa@f+1,efgtoa@g+1
  3791   0010A8  C084  F0AB         	movff	efgtoa@f+2,efgtoa@g+2
  3792   0010AC  C085  F0AC         	movff	efgtoa@f+3,efgtoa@g+3
  3793   0010B0                     
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3796   0010B0  BFAC               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3797   0010B2  EF5F  F008         	goto	u8100
  3798   0010B6  EF5D  F008         	goto	u8101
  3799   0010BA                     u8101:
  3800   0010BA  EF73  F008         	goto	l6754
  3801   0010BE                     u8100:
  3802   0010BE                     
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3805   0010BE  0E01               	movlw	1
  3806   0010C0  6FA8               	movwf	efgtoa@sign& (0+255),b
  3807   0010C2                     
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3810   0010C2  C0A9  F014         	movff	efgtoa@g,___flneg@f1
  3811   0010C6  C0AA  F015         	movff	efgtoa@g+1,___flneg@f1+1
  3812   0010CA  C0AB  F016         	movff	efgtoa@g+2,___flneg@f1+2
  3813   0010CE  C0AC  F017         	movff	efgtoa@g+3,___flneg@f1+3
  3814   0010D2  EC11  F02B         	call	___flneg	;wreg free
  3815   0010D6  C014  F0A9         	movff	?___flneg,efgtoa@g
  3816   0010DA  C015  F0AA         	movff	?___flneg+1,efgtoa@g+1
  3817   0010DE  C016  F0AB         	movff	?___flneg+2,efgtoa@g+2
  3818   0010E2  C017  F0AC         	movff	?___flneg+3,efgtoa@g+3
  3819   0010E6                     l6754:
  3820                           
  3821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3822   0010E6  0E00               	movlw	0
  3823   0010E8  0100               	movlb	0	; () banked
  3824   0010EA  6FAE               	movwf	(efgtoa@n+1)& (0+255),b
  3825   0010EC  0E00               	movlw	0
  3826   0010EE  6FAD               	movwf	efgtoa@n& (0+255),b
  3827   0010F0                     
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3830   0010F0  C057  F09C         	movff	_width,efgtoa@w
  3831   0010F4  C058  F09D         	movff	_width+1,efgtoa@w+1
  3832   0010F8                     
  3833                           ; BSR set to: 0
  3834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3835   0010F8  51A8               	movf	efgtoa@sign& (0+255),w,b
  3836   0010FA  B4D8               	btfsc	status,2,c
  3837   0010FC  EF82  F008         	goto	u8111
  3838   001100  EF84  F008         	goto	u8110
  3839   001104                     u8111:
  3840   001104  EF98  F008         	goto	l6768
  3841   001108                     u8110:
  3842   001108                     
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3845   001108  51A8               	movf	efgtoa@sign& (0+255),w,b
  3846   00110A  A4D8               	btfss	status,2,c
  3847   00110C  EF8A  F008         	goto	u8121
  3848   001110  EF8C  F008         	goto	u8120
  3849   001114                     u8121:
  3850   001114  EF92  F008         	goto	l6764
  3851   001118                     u8120:
  3852   001118                     
  3853                           ; BSR set to: 0
  3854   001118  0E00               	movlw	0
  3855   00111A  6F8E               	movwf	(_efgtoa$1477+1)& (0+255),b
  3856   00111C  0E2B               	movlw	43
  3857   00111E  6F8D               	movwf	_efgtoa$1477& (0+255),b
  3858   001120  EF96  F008         	goto	l6766
  3859   001124                     l6764:
  3860                           
  3861                           ; BSR set to: 0
  3862   001124  0E00               	movlw	0
  3863   001126  6F8E               	movwf	(_efgtoa$1477+1)& (0+255),b
  3864   001128  0E2D               	movlw	45
  3865   00112A  6F8D               	movwf	_efgtoa$1477& (0+255),b
  3866   00112C                     l6766:
  3867                           
  3868                           ; BSR set to: 0
  3869   00112C  C08D  F0A8         	movff	_efgtoa$1477,efgtoa@sign
  3870   001130                     l6768:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3874   001130  C0A9  F014         	movff	efgtoa@g,___fpclassifyf@x
  3875   001134  C0AA  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3876   001138  C0AB  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3877   00113C  C0AC  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3878   001140  EC2A  F023         	call	___fpclassifyf	;wreg free
  3879   001144  0414               	decf	?___fpclassifyf^0,w,c
  3880   001146  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  3881   001148  A4D8               	btfss	status,2,c
  3882   00114A  EFA9  F008         	goto	u8131
  3883   00114E  EFAB  F008         	goto	u8130
  3884   001152                     u8131:
  3885   001152  EFDE  F008         	goto	l6786
  3886   001156                     u8130:
  3887   001156                     
  3888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3889   001156  0100               	movlb	0	; () banked
  3890   001158  51A8               	movf	efgtoa@sign& (0+255),w,b
  3891   00115A  B4D8               	btfsc	status,2,c
  3892   00115C  EFB2  F008         	goto	u8141
  3893   001160  EFB4  F008         	goto	u8140
  3894   001164                     u8141:
  3895   001164  EFBD  F008         	goto	l6778
  3896   001168                     u8140:
  3897   001168                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3900   001168  C0A8  F10E         	movff	efgtoa@sign,_dbuf
  3901   00116C                     
  3902                           ; BSR set to: 0
  3903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3904   00116C  079C               	decf	efgtoa@w& (0+255),f,b
  3905   00116E  A0D8               	btfss	status,0,c
  3906   001170  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  3907   001172                     
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3910   001172  0E00               	movlw	0
  3911   001174  6FAE               	movwf	(efgtoa@n+1)& (0+255),b
  3912   001176  0E01               	movlw	1
  3913   001178  6FAD               	movwf	efgtoa@n& (0+255),b
  3914   00117A                     l6778:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3918   00117A  0E0E               	movlw	low _dbuf
  3919   00117C  25AD               	addwf	efgtoa@n& (0+255),w,b
  3920   00117E  6E14               	movwf	strcpy@dest^0,c
  3921   001180  0E01               	movlw	high _dbuf
  3922   001182  21AE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3923   001184  6E15               	movwf	(strcpy@dest+1)^0,c
  3924   001186  0E85               	movlw	low STR_24
  3925   001188  6E16               	movwf	strcpy@src^0,c
  3926   00118A  0E10               	movlw	high STR_24
  3927   00118C  6E17               	movwf	(strcpy@src+1)^0,c
  3928   00118E  ECB4  F02A         	call	_strcpy	;wreg free
  3929   001192                     l6780:
  3930                           
  3931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3932   001192  0100               	movlb	0	; () banked
  3933   001194  0EFD               	movlw	253
  3934   001196  279C               	addwf	efgtoa@w& (0+255),f,b
  3935   001198  0EFF               	movlw	255
  3936   00119A  239D               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3937   00119C                     
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3940   00119C  C080  F024         	movff	efgtoa@fp,pad@fp
  3941   0011A0  C081  F025         	movff	efgtoa@fp+1,pad@fp+1
  3942   0011A4  0E0E               	movlw	low _dbuf
  3943   0011A6  6E26               	movwf	pad@buf^0,c
  3944   0011A8  0E01               	movlw	high _dbuf
  3945   0011AA  6E27               	movwf	(pad@buf+1)^0,c
  3946   0011AC  C09C  F028         	movff	efgtoa@w,pad@p
  3947   0011B0  C09D  F029         	movff	efgtoa@w+1,pad@p+1
  3948   0011B4  EC6C  F026         	call	_pad	;wreg free
  3949   0011B8  EF7F  F00D         	goto	l1074
  3950   0011BC                     l6786:
  3951                           
  3952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3953   0011BC  C0A9  F014         	movff	efgtoa@g,___fpclassifyf@x
  3954   0011C0  C0AA  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3955   0011C4  C0AB  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3956   0011C8  C0AC  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3957   0011CC  EC2A  F023         	call	___fpclassifyf	;wreg free
  3958   0011D0  5014               	movf	?___fpclassifyf^0,w,c
  3959   0011D2  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  3960   0011D4  A4D8               	btfss	status,2,c
  3961   0011D6  EFEF  F008         	goto	u8151
  3962   0011DA  EFF1  F008         	goto	u8150
  3963   0011DE                     u8151:
  3964   0011DE  EF11  F009         	goto	l6804
  3965   0011E2                     u8150:
  3966   0011E2                     
  3967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3968   0011E2  0100               	movlb	0	; () banked
  3969   0011E4  51A8               	movf	efgtoa@sign& (0+255),w,b
  3970   0011E6  B4D8               	btfsc	status,2,c
  3971   0011E8  EFF8  F008         	goto	u8161
  3972   0011EC  EFFA  F008         	goto	u8160
  3973   0011F0                     u8161:
  3974   0011F0  EF03  F009         	goto	l6796
  3975   0011F4                     u8160:
  3976   0011F4                     
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3979   0011F4  C0A8  F10E         	movff	efgtoa@sign,_dbuf
  3980   0011F8                     
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3983   0011F8  079C               	decf	efgtoa@w& (0+255),f,b
  3984   0011FA  A0D8               	btfss	status,0,c
  3985   0011FC  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  3986   0011FE                     
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3989   0011FE  0E00               	movlw	0
  3990   001200  6FAE               	movwf	(efgtoa@n+1)& (0+255),b
  3991   001202  0E01               	movlw	1
  3992   001204  6FAD               	movwf	efgtoa@n& (0+255),b
  3993   001206                     l6796:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3997   001206  0E0E               	movlw	low _dbuf
  3998   001208  25AD               	addwf	efgtoa@n& (0+255),w,b
  3999   00120A  6E14               	movwf	strcpy@dest^0,c
  4000   00120C  0E01               	movlw	high _dbuf
  4001   00120E  21AE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4002   001210  6E15               	movwf	(strcpy@dest+1)^0,c
  4003   001212  0E89               	movlw	low STR_27
  4004   001214  6E16               	movwf	strcpy@src^0,c
  4005   001216  0E10               	movlw	high STR_27
  4006   001218  6E17               	movwf	(strcpy@src+1)^0,c
  4007   00121A  ECB4  F02A         	call	_strcpy	;wreg free
  4008   00121E  EFC9  F008         	goto	l6780
  4009   001222                     l6804:
  4010                           
  4011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  4012   001222  0E00               	movlw	0
  4013   001224  0100               	movlb	0	; () banked
  4014   001226  6FAF               	movwf	efgtoa@u& (0+255),b
  4015   001228  0E00               	movlw	0
  4016   00122A  6FB0               	movwf	(efgtoa@u+1)& (0+255),b
  4017   00122C  0E80               	movlw	128
  4018   00122E  6FB1               	movwf	(efgtoa@u+2)& (0+255),b
  4019   001230  0E3F               	movlw	63
  4020   001232  6FB2               	movwf	(efgtoa@u+3)& (0+255),b
  4021                           
  4022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  4023   001234  0E00               	movlw	0
  4024   001236  6F97               	movwf	(efgtoa@e+1)& (0+255),b
  4025   001238  0E00               	movlw	0
  4026   00123A  6F96               	movwf	efgtoa@e& (0+255),b
  4027   00123C                     
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  4030   00123C  C0A9  F014         	movff	efgtoa@g,___fleq@ff1
  4031   001240  C0AA  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4032   001244  C0AB  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4033   001248  C0AC  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4034   00124C  0E00               	movlw	0
  4035   00124E  6E18               	movwf	___fleq@ff2^0,c
  4036   001250  0E00               	movlw	0
  4037   001252  6E19               	movwf	(___fleq@ff2+1)^0,c
  4038   001254  0E00               	movlw	0
  4039   001256  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4040   001258  0E00               	movlw	0
  4041   00125A  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4042   00125C  EC17  F026         	call	___fleq	;wreg free
  4043   001260  B0D8               	btfsc	status,0,c
  4044   001262  EF35  F009         	goto	u8171
  4045   001266  EF37  F009         	goto	u8170
  4046   00126A                     u8171:
  4047   00126A  EF16  F00A         	goto	l1077
  4048   00126E                     u8170:
  4049   00126E  EF44  F009         	goto	l6812
  4050   001272                     l1079:
  4051                           
  4052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  4053   001272  C098  F0AF         	movff	efgtoa@ou,efgtoa@u
  4054   001276  C099  F0B0         	movff	efgtoa@ou+1,efgtoa@u+1
  4055   00127A  C09A  F0B1         	movff	efgtoa@ou+2,efgtoa@u+2
  4056   00127E  C09B  F0B2         	movff	efgtoa@ou+3,efgtoa@u+3
  4057   001282                     
  4058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  4059   001282  0100               	movlb	0	; () banked
  4060   001284  4B96               	infsnz	efgtoa@e& (0+255),f,b
  4061   001286  2B97               	incf	(efgtoa@e+1)& (0+255),f,b
  4062   001288                     l6812:
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4065   001288  C0AF  F014         	movff	efgtoa@u,___flmul@b
  4066   00128C  C0B0  F015         	movff	efgtoa@u+1,___flmul@b+1
  4067   001290  C0B1  F016         	movff	efgtoa@u+2,___flmul@b+2
  4068   001294  C0B2  F017         	movff	efgtoa@u+3,___flmul@b+3
  4069   001298  0E00               	movlw	0
  4070   00129A  6E18               	movwf	___flmul@a^0,c
  4071   00129C  0E00               	movlw	0
  4072   00129E  6E19               	movwf	(___flmul@a+1)^0,c
  4073   0012A0  0E20               	movlw	32
  4074   0012A2  6E1A               	movwf	(___flmul@a+2)^0,c
  4075   0012A4  0E41               	movlw	65
  4076   0012A6  6E1B               	movwf	(___flmul@a+3)^0,c
  4077   0012A8  ECAD  F015         	call	___flmul	;wreg free
  4078   0012AC  C014  F098         	movff	?___flmul,efgtoa@ou
  4079   0012B0  C015  F099         	movff	?___flmul+1,efgtoa@ou+1
  4080   0012B4  C016  F09A         	movff	?___flmul+2,efgtoa@ou+2
  4081   0012B8  C017  F09B         	movff	?___flmul+3,efgtoa@ou+3
  4082   0012BC  0100               	movlb	0	; () banked
  4083   0012BE  5198               	movf	efgtoa@ou& (0+255),w,b
  4084   0012C0  5DA9               	subwf	efgtoa@g& (0+255),w,b
  4085   0012C2  6E14               	movwf	labs@a^0,c
  4086   0012C4  5199               	movf	(efgtoa@ou+1)& (0+255),w,b
  4087   0012C6  59AA               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4088   0012C8  6E15               	movwf	(labs@a+1)^0,c
  4089   0012CA  519A               	movf	(efgtoa@ou+2)& (0+255),w,b
  4090   0012CC  59AB               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4091   0012CE  6E16               	movwf	(labs@a+2)^0,c
  4092   0012D0  519B               	movf	(efgtoa@ou+3)& (0+255),w,b
  4093   0012D2  59AC               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4094   0012D4  6E17               	movwf	(labs@a+3)^0,c
  4095   0012D6  ECDB  F028         	call	_labs	;wreg free
  4096   0012DA  BE17               	btfsc	(?_labs+3)^0,7,c
  4097   0012DC  EF7B  F009         	goto	u8181
  4098   0012E0  5017               	movf	(?_labs+3)^0,w,c
  4099   0012E2  1016               	iorwf	(?_labs+2)^0,w,c
  4100   0012E4  1015               	iorwf	(?_labs+1)^0,w,c
  4101   0012E6  E109               	bnz	u8180
  4102   0012E8  0E02               	movlw	2
  4103   0012EA  5C14               	subwf	?_labs^0,w,c
  4104   0012EC  A0D8               	btfss	status,0,c
  4105   0012EE  EF7B  F009         	goto	u8181
  4106   0012F2  EF7D  F009         	goto	u8180
  4107   0012F6                     u8181:
  4108   0012F6  EF39  F009         	goto	l1079
  4109   0012FA                     u8180:
  4110   0012FA  C098  F02D         	movff	efgtoa@ou,___flge@ff1
  4111   0012FE  C099  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  4112   001302  C09A  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  4113   001306  C09B  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  4114   00130A  C0A9  F031         	movff	efgtoa@g,___flge@ff2
  4115   00130E  C0AA  F032         	movff	efgtoa@g+1,___flge@ff2+1
  4116   001312  C0AB  F033         	movff	efgtoa@g+2,___flge@ff2+2
  4117   001316  C0AC  F034         	movff	efgtoa@g+3,___flge@ff2+3
  4118   00131A  ECA8  F022         	call	___flge	;wreg free
  4119   00131E  A0D8               	btfss	status,0,c
  4120   001320  EF94  F009         	goto	u8191
  4121   001324  EF96  F009         	goto	u8190
  4122   001328                     u8191:
  4123   001328  EF39  F009         	goto	l1079
  4124   00132C                     u8190:
  4125   00132C                     
  4126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4127   00132C  0100               	movlb	0	; () banked
  4128   00132E  51AF               	movf	efgtoa@u& (0+255),w,b
  4129   001330  5DA9               	subwf	efgtoa@g& (0+255),w,b
  4130   001332  6E14               	movwf	labs@a^0,c
  4131   001334  51B0               	movf	(efgtoa@u+1)& (0+255),w,b
  4132   001336  59AA               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4133   001338  6E15               	movwf	(labs@a+1)^0,c
  4134   00133A  51B1               	movf	(efgtoa@u+2)& (0+255),w,b
  4135   00133C  59AB               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4136   00133E  6E16               	movwf	(labs@a+2)^0,c
  4137   001340  51B2               	movf	(efgtoa@u+3)& (0+255),w,b
  4138   001342  59AC               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4139   001344  6E17               	movwf	(labs@a+3)^0,c
  4140   001346  ECDB  F028         	call	_labs	;wreg free
  4141   00134A  BE17               	btfsc	(?_labs+3)^0,7,c
  4142   00134C  EFB5  F009         	goto	u8200
  4143   001350  5017               	movf	(?_labs+3)^0,w,c
  4144   001352  1016               	iorwf	(?_labs+2)^0,w,c
  4145   001354  1015               	iorwf	(?_labs+1)^0,w,c
  4146   001356  E107               	bnz	u8201
  4147   001358  0E02               	movlw	2
  4148   00135A  5C14               	subwf	?_labs^0,w,c
  4149   00135C  B0D8               	btfsc	status,0,c
  4150   00135E  EFB3  F009         	goto	u8201
  4151   001362  EFB5  F009         	goto	u8200
  4152   001366                     u8201:
  4153   001366  EFFD  F009         	goto	l6830
  4154   00136A                     u8200:
  4155   00136A                     l6820:
  4156                           
  4157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  4158   00136A  C0AF  F0A9         	movff	efgtoa@u,efgtoa@g
  4159   00136E  C0B0  F0AA         	movff	efgtoa@u+1,efgtoa@g+1
  4160   001372  C0B1  F0AB         	movff	efgtoa@u+2,efgtoa@g+2
  4161   001376  C0B2  F0AC         	movff	efgtoa@u+3,efgtoa@g+3
  4162                           
  4163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  4164   00137A  EF16  F00A         	goto	l1077
  4165   00137E                     l6822:
  4166                           
  4167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  4168   00137E  C0AF  F028         	movff	efgtoa@u,___fldiv@b
  4169   001382  C0B0  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4170   001386  C0B1  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4171   00138A  C0B2  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4172   00138E  0E00               	movlw	0
  4173   001390  6E2C               	movwf	___fldiv@a^0,c
  4174   001392  0E00               	movlw	0
  4175   001394  6E2D               	movwf	(___fldiv@a+1)^0,c
  4176   001396  0E20               	movlw	32
  4177   001398  6E2E               	movwf	(___fldiv@a+2)^0,c
  4178   00139A  0E41               	movlw	65
  4179   00139C  6E2F               	movwf	(___fldiv@a+3)^0,c
  4180   00139E  ECC2  F017         	call	___fldiv	;wreg free
  4181   0013A2  C028  F0AF         	movff	?___fldiv,efgtoa@u
  4182   0013A6  C029  F0B0         	movff	?___fldiv+1,efgtoa@u+1
  4183   0013AA  C02A  F0B1         	movff	?___fldiv+2,efgtoa@u+2
  4184   0013AE  C02B  F0B2         	movff	?___fldiv+3,efgtoa@u+3
  4185   0013B2                     
  4186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  4187   0013B2  0100               	movlb	0	; () banked
  4188   0013B4  0796               	decf	efgtoa@e& (0+255),f,b
  4189   0013B6  A0D8               	btfss	status,0,c
  4190   0013B8  0797               	decf	(efgtoa@e+1)& (0+255),f,b
  4191   0013BA                     
  4192                           ; BSR set to: 0
  4193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4194   0013BA  51AF               	movf	efgtoa@u& (0+255),w,b
  4195   0013BC  5DA9               	subwf	efgtoa@g& (0+255),w,b
  4196   0013BE  6E14               	movwf	labs@a^0,c
  4197   0013C0  51B0               	movf	(efgtoa@u+1)& (0+255),w,b
  4198   0013C2  59AA               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4199   0013C4  6E15               	movwf	(labs@a+1)^0,c
  4200   0013C6  51B1               	movf	(efgtoa@u+2)& (0+255),w,b
  4201   0013C8  59AB               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4202   0013CA  6E16               	movwf	(labs@a+2)^0,c
  4203   0013CC  51B2               	movf	(efgtoa@u+3)& (0+255),w,b
  4204   0013CE  59AC               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4205   0013D0  6E17               	movwf	(labs@a+3)^0,c
  4206   0013D2  ECDB  F028         	call	_labs	;wreg free
  4207   0013D6  BE17               	btfsc	(?_labs+3)^0,7,c
  4208   0013D8  EFFB  F009         	goto	u8210
  4209   0013DC  5017               	movf	(?_labs+3)^0,w,c
  4210   0013DE  1016               	iorwf	(?_labs+2)^0,w,c
  4211   0013E0  1015               	iorwf	(?_labs+1)^0,w,c
  4212   0013E2  E107               	bnz	u8211
  4213   0013E4  0E02               	movlw	2
  4214   0013E6  5C14               	subwf	?_labs^0,w,c
  4215   0013E8  B0D8               	btfsc	status,0,c
  4216   0013EA  EFF9  F009         	goto	u8211
  4217   0013EE  EFFB  F009         	goto	u8210
  4218   0013F2                     u8211:
  4219   0013F2  EFFD  F009         	goto	l6830
  4220   0013F6                     u8210:
  4221   0013F6  EFB5  F009         	goto	l6820
  4222   0013FA                     l6830:
  4223                           
  4224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  4225   0013FA  C0A9  F02D         	movff	efgtoa@g,___flge@ff1
  4226   0013FE  C0AA  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  4227   001402  C0AB  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  4228   001406  C0AC  F030         	movff	efgtoa@g+3,___flge@ff1+3
  4229   00140A  C0AF  F031         	movff	efgtoa@u,___flge@ff2
  4230   00140E  C0B0  F032         	movff	efgtoa@u+1,___flge@ff2+1
  4231   001412  C0B1  F033         	movff	efgtoa@u+2,___flge@ff2+2
  4232   001416  C0B2  F034         	movff	efgtoa@u+3,___flge@ff2+3
  4233   00141A  ECA8  F022         	call	___flge	;wreg free
  4234   00141E  A0D8               	btfss	status,0,c
  4235   001420  EF14  F00A         	goto	u8221
  4236   001424  EF16  F00A         	goto	u8220
  4237   001428                     u8221:
  4238   001428  EFBF  F009         	goto	l6822
  4239   00142C                     u8220:
  4240   00142C                     l1077:
  4241                           
  4242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  4243   00142C  C086  F090         	movff	efgtoa@c,efgtoa@mode
  4244                           
  4245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  4246   001430  C090  F091         	movff	efgtoa@mode,efgtoa@nmode
  4247   001434                     
  4248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  4249   001434  BE5A               	btfsc	(_prec+1)^0,7,c
  4250   001436  EF1F  F00A         	goto	u8231
  4251   00143A  EF21  F00A         	goto	u8230
  4252   00143E                     u8231:
  4253   00143E  EF27  F00A         	goto	l6836
  4254   001442                     u8230:
  4255   001442  C059  F089         	movff	_prec,efgtoa@p
  4256   001446  C05A  F08A         	movff	_prec+1,efgtoa@p+1
  4257   00144A  EF2C  F00A         	goto	l6838
  4258   00144E                     l6836:
  4259   00144E  0E00               	movlw	0
  4260   001450  0100               	movlb	0	; () banked
  4261   001452  6F8A               	movwf	(efgtoa@p+1)& (0+255),b
  4262   001454  0E06               	movlw	6
  4263   001456  6F89               	movwf	efgtoa@p& (0+255),b
  4264   001458                     l6838:
  4265                           
  4266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  4267   001458  C089  F094         	movff	efgtoa@p,efgtoa@m
  4268   00145C  C08A  F095         	movff	efgtoa@p+1,efgtoa@m+1
  4269   001460                     
  4270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4271   001460  0100               	movlb	0	; () banked
  4272   001462  4B94               	infsnz	efgtoa@m& (0+255),f,b
  4273   001464  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  4274   001466                     
  4275                           ; BSR set to: 0
  4276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4277   001466  0E66               	movlw	102
  4278   001468  1991               	xorwf	efgtoa@nmode& (0+255),w,b
  4279   00146A  A4D8               	btfss	status,2,c
  4280   00146C  EF3A  F00A         	goto	u8241
  4281   001470  EF3C  F00A         	goto	u8240
  4282   001474                     u8241:
  4283   001474  EF5C  F00A         	goto	l6852
  4284   001478                     u8240:
  4285   001478                     
  4286                           ; BSR set to: 0
  4287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4288   001478  BF97               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4289   00147A  EF43  F00A         	goto	u8250
  4290   00147E  EF41  F00A         	goto	u8251
  4291   001482                     u8251:
  4292   001482  EF4F  F00A         	goto	l6848
  4293   001486                     u8250:
  4294   001486                     
  4295                           ; BSR set to: 0
  4296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4297   001486  0E00               	movlw	0
  4298   001488  6FAF               	movwf	efgtoa@u& (0+255),b
  4299   00148A  0E00               	movlw	0
  4300   00148C  6FB0               	movwf	(efgtoa@u+1)& (0+255),b
  4301   00148E  0E80               	movlw	128
  4302   001490  6FB1               	movwf	(efgtoa@u+2)& (0+255),b
  4303   001492  0E3F               	movlw	63
  4304   001494  6FB2               	movwf	(efgtoa@u+3)& (0+255),b
  4305                           
  4306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4307   001496  0E00               	movlw	0
  4308   001498  6F97               	movwf	(efgtoa@e+1)& (0+255),b
  4309   00149A  0E00               	movlw	0
  4310   00149C  6F96               	movwf	efgtoa@e& (0+255),b
  4311   00149E                     l6848:
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4315   00149E  0E67               	movlw	103
  4316   0014A0  1990               	xorwf	efgtoa@mode& (0+255),w,b
  4317   0014A2  B4D8               	btfsc	status,2,c
  4318   0014A4  EF56  F00A         	goto	u8261
  4319   0014A8  EF58  F00A         	goto	u8260
  4320   0014AC                     u8261:
  4321   0014AC  EF5C  F00A         	goto	l6852
  4322   0014B0                     u8260:
  4323   0014B0                     
  4324                           ; BSR set to: 0
  4325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4326   0014B0  5196               	movf	efgtoa@e& (0+255),w,b
  4327   0014B2  2794               	addwf	efgtoa@m& (0+255),f,b
  4328   0014B4  5197               	movf	(efgtoa@e+1)& (0+255),w,b
  4329   0014B6  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4330   0014B8                     l6852:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4334   0014B8  0E00               	movlw	0
  4335   0014BA  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  4336   0014BC  0E00               	movlw	0
  4337   0014BE  6FA6               	movwf	efgtoa@i& (0+255),b
  4338   0014C0                     
  4339                           ; BSR set to: 0
  4340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4341   0014C0  C0A9  F09E         	movff	efgtoa@g,efgtoa@h
  4342   0014C4  C0AA  F09F         	movff	efgtoa@g+1,efgtoa@h+1
  4343   0014C8  C0AB  F0A0         	movff	efgtoa@g+2,efgtoa@h+2
  4344   0014CC  C0AC  F0A1         	movff	efgtoa@g+3,efgtoa@h+3
  4345   0014D0                     
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4348   0014D0  C0AF  F098         	movff	efgtoa@u,efgtoa@ou
  4349   0014D4  C0B0  F099         	movff	efgtoa@u+1,efgtoa@ou+1
  4350   0014D8  C0B1  F09A         	movff	efgtoa@u+2,efgtoa@ou+2
  4351   0014DC  C0B2  F09B         	movff	efgtoa@u+3,efgtoa@ou+3
  4352                           
  4353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4354   0014E0  EFED  F00A         	goto	l6866
  4355   0014E4                     l6858:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4359   0014E4  C09E  F028         	movff	efgtoa@h,___fldiv@b
  4360   0014E8  C09F  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4361   0014EC  C0A0  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4362   0014F0  C0A1  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4363   0014F4  C0AF  F02C         	movff	efgtoa@u,___fldiv@a
  4364   0014F8  C0B0  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4365   0014FC  C0B1  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4366   001500  C0B2  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4367   001504  ECC2  F017         	call	___fldiv	;wreg free
  4368   001508  C028  F041         	movff	?___fldiv,floorf@x
  4369   00150C  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4370   001510  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4371   001514  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4372   001518  EC1B  F01C         	call	_floorf	;wreg free
  4373   00151C  C041  F0A2         	movff	?_floorf,efgtoa@l
  4374   001520  C042  F0A3         	movff	?_floorf+1,efgtoa@l+1
  4375   001524  C043  F0A4         	movff	?_floorf+2,efgtoa@l+2
  4376   001528  C044  F0A5         	movff	?_floorf+3,efgtoa@l+3
  4377                           
  4378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4379   00152C  C0A2  F014         	movff	efgtoa@l,___fltol@f1
  4380   001530  C0A3  F015         	movff	efgtoa@l+1,___fltol@f1+1
  4381   001534  C0A4  F016         	movff	efgtoa@l+2,___fltol@f1+2
  4382   001538  C0A5  F017         	movff	efgtoa@l+3,___fltol@f1+3
  4383   00153C  EC25  F022         	call	___fltol	;wreg free
  4384   001540  C014  F092         	movff	?___fltol,efgtoa@d
  4385   001544  C015  F093         	movff	?___fltol+1,efgtoa@d+1
  4386   001548                     
  4387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4388   001548  C09E  F02D         	movff	efgtoa@h,___flsub@b
  4389   00154C  C09F  F02E         	movff	efgtoa@h+1,___flsub@b+1
  4390   001550  C0A0  F02F         	movff	efgtoa@h+2,___flsub@b+2
  4391   001554  C0A1  F030         	movff	efgtoa@h+3,___flsub@b+3
  4392   001558  C0A2  F018         	movff	efgtoa@l,___flmul@a
  4393   00155C  C0A3  F019         	movff	efgtoa@l+1,___flmul@a+1
  4394   001560  C0A4  F01A         	movff	efgtoa@l+2,___flmul@a+2
  4395   001564  C0A5  F01B         	movff	efgtoa@l+3,___flmul@a+3
  4396   001568  C0AF  F014         	movff	efgtoa@u,___flmul@b
  4397   00156C  C0B0  F015         	movff	efgtoa@u+1,___flmul@b+1
  4398   001570  C0B1  F016         	movff	efgtoa@u+2,___flmul@b+2
  4399   001574  C0B2  F017         	movff	efgtoa@u+3,___flmul@b+3
  4400   001578  ECAD  F015         	call	___flmul	;wreg free
  4401   00157C  C014  F031         	movff	?___flmul,___flsub@a
  4402   001580  C015  F032         	movff	?___flmul+1,___flsub@a+1
  4403   001584  C016  F033         	movff	?___flmul+2,___flsub@a+2
  4404   001588  C017  F034         	movff	?___flmul+3,___flsub@a+3
  4405   00158C  EC2A  F02A         	call	___flsub	;wreg free
  4406   001590  C02D  F09E         	movff	?___flsub,efgtoa@h
  4407   001594  C02E  F09F         	movff	?___flsub+1,efgtoa@h+1
  4408   001598  C02F  F0A0         	movff	?___flsub+2,efgtoa@h+2
  4409   00159C  C030  F0A1         	movff	?___flsub+3,efgtoa@h+3
  4410   0015A0                     
  4411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4412   0015A0  C0AF  F028         	movff	efgtoa@u,___fldiv@b
  4413   0015A4  C0B0  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4414   0015A8  C0B1  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4415   0015AC  C0B2  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4416   0015B0  0E00               	movlw	0
  4417   0015B2  6E2C               	movwf	___fldiv@a^0,c
  4418   0015B4  0E00               	movlw	0
  4419   0015B6  6E2D               	movwf	(___fldiv@a+1)^0,c
  4420   0015B8  0E20               	movlw	32
  4421   0015BA  6E2E               	movwf	(___fldiv@a+2)^0,c
  4422   0015BC  0E41               	movlw	65
  4423   0015BE  6E2F               	movwf	(___fldiv@a+3)^0,c
  4424   0015C0  ECC2  F017         	call	___fldiv	;wreg free
  4425   0015C4  C028  F0AF         	movff	?___fldiv,efgtoa@u
  4426   0015C8  C029  F0B0         	movff	?___fldiv+1,efgtoa@u+1
  4427   0015CC  C02A  F0B1         	movff	?___fldiv+2,efgtoa@u+2
  4428   0015D0  C02B  F0B2         	movff	?___fldiv+3,efgtoa@u+3
  4429   0015D4                     
  4430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4431   0015D4  0100               	movlb	0	; () banked
  4432   0015D6  4BA6               	infsnz	efgtoa@i& (0+255),f,b
  4433   0015D8  2BA7               	incf	(efgtoa@i+1)& (0+255),f,b
  4434   0015DA                     l6866:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4438   0015DA  5194               	movf	efgtoa@m& (0+255),w,b
  4439   0015DC  5DA6               	subwf	efgtoa@i& (0+255),w,b
  4440   0015DE  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  4441   0015E0  0A80               	xorlw	128
  4442   0015E2  6E55               	movwf	??_efgtoa^0,c
  4443   0015E4  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4444   0015E6  0A80               	xorlw	128
  4445   0015E8  5855               	subwfb	??_efgtoa^0,w,c
  4446   0015EA  A0D8               	btfss	status,0,c
  4447   0015EC  EFFA  F00A         	goto	u8271
  4448   0015F0  EFFC  F00A         	goto	u8270
  4449   0015F4                     u8271:
  4450   0015F4  EF72  F00A         	goto	l6858
  4451   0015F8                     u8270:
  4452   0015F8                     
  4453                           ; BSR set to: 0
  4454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4455   0015F8  C0AF  F014         	movff	efgtoa@u,___flmul@b
  4456   0015FC  C0B0  F015         	movff	efgtoa@u+1,___flmul@b+1
  4457   001600  C0B1  F016         	movff	efgtoa@u+2,___flmul@b+2
  4458   001604  C0B2  F017         	movff	efgtoa@u+3,___flmul@b+3
  4459   001608  0E00               	movlw	0
  4460   00160A  6E18               	movwf	___flmul@a^0,c
  4461   00160C  0E00               	movlw	0
  4462   00160E  6E19               	movwf	(___flmul@a+1)^0,c
  4463   001610  0EA0               	movlw	160
  4464   001612  6E1A               	movwf	(___flmul@a+2)^0,c
  4465   001614  0E40               	movlw	64
  4466   001616  6E1B               	movwf	(___flmul@a+3)^0,c
  4467   001618  ECAD  F015         	call	___flmul	;wreg free
  4468   00161C  C014  F0A2         	movff	?___flmul,efgtoa@l
  4469   001620  C015  F0A3         	movff	?___flmul+1,efgtoa@l+1
  4470   001624  C016  F0A4         	movff	?___flmul+2,efgtoa@l+2
  4471   001628  C017  F0A5         	movff	?___flmul+3,efgtoa@l+3
  4472   00162C                     
  4473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4474   00162C  C09E  F02D         	movff	efgtoa@h,___flge@ff1
  4475   001630  C09F  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  4476   001634  C0A0  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  4477   001638  C0A1  F030         	movff	efgtoa@h+3,___flge@ff1+3
  4478   00163C  C0A2  F031         	movff	efgtoa@l,___flge@ff2
  4479   001640  C0A3  F032         	movff	efgtoa@l+1,___flge@ff2+1
  4480   001644  C0A4  F033         	movff	efgtoa@l+2,___flge@ff2+2
  4481   001648  C0A5  F034         	movff	efgtoa@l+3,___flge@ff2+3
  4482   00164C  ECA8  F022         	call	___flge	;wreg free
  4483   001650  B0D8               	btfsc	status,0,c
  4484   001652  EF2D  F00B         	goto	u8281
  4485   001656  EF2F  F00B         	goto	u8280
  4486   00165A                     u8281:
  4487   00165A  EF3A  F00B         	goto	l6874
  4488   00165E                     u8280:
  4489   00165E                     
  4490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4491   00165E  0E00               	movlw	0
  4492   001660  0100               	movlb	0	; () banked
  4493   001662  6FA2               	movwf	efgtoa@l& (0+255),b
  4494   001664  0E00               	movlw	0
  4495   001666  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  4496   001668  0E00               	movlw	0
  4497   00166A  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  4498   00166C  0E00               	movlw	0
  4499   00166E  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4502   001670  EF63  F00B         	goto	l6880
  4503   001674                     l6874:
  4504                           
  4505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4506   001674  C09E  F014         	movff	efgtoa@h,___fleq@ff1
  4507   001678  C09F  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  4508   00167C  C0A0  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  4509   001680  C0A1  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  4510   001684  C0A2  F018         	movff	efgtoa@l,___fleq@ff2
  4511   001688  C0A3  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  4512   00168C  C0A4  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  4513   001690  C0A5  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  4514   001694  EC17  F026         	call	___fleq	;wreg free
  4515   001698  A0D8               	btfss	status,0,c
  4516   00169A  EF51  F00B         	goto	u8291
  4517   00169E  EF53  F00B         	goto	u8290
  4518   0016A2                     u8291:
  4519   0016A2  EF63  F00B         	goto	l6880
  4520   0016A6                     u8290:
  4521   0016A6  0100               	movlb	0	; () banked
  4522   0016A8  B192               	btfsc	efgtoa@d& (0+255),0,b
  4523   0016AA  EF59  F00B         	goto	u8301
  4524   0016AE  EF5B  F00B         	goto	u8300
  4525   0016B2                     u8301:
  4526   0016B2  EF63  F00B         	goto	l6880
  4527   0016B6                     u8300:
  4528   0016B6                     
  4529                           ; BSR set to: 0
  4530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4531   0016B6  0E00               	movlw	0
  4532   0016B8  6FA2               	movwf	efgtoa@l& (0+255),b
  4533   0016BA  0E00               	movlw	0
  4534   0016BC  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  4535   0016BE  0E00               	movlw	0
  4536   0016C0  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  4537   0016C2  0E00               	movlw	0
  4538   0016C4  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  4539   0016C6                     l6880:
  4540                           
  4541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4542   0016C6  C0A9  F014         	movff	efgtoa@g,___fladd@b
  4543   0016CA  C0AA  F015         	movff	efgtoa@g+1,___fladd@b+1
  4544   0016CE  C0AB  F016         	movff	efgtoa@g+2,___fladd@b+2
  4545   0016D2  C0AC  F017         	movff	efgtoa@g+3,___fladd@b+3
  4546   0016D6  C0A2  F018         	movff	efgtoa@l,___fladd@a
  4547   0016DA  C0A3  F019         	movff	efgtoa@l+1,___fladd@a+1
  4548   0016DE  C0A4  F01A         	movff	efgtoa@l+2,___fladd@a+2
  4549   0016E2  C0A5  F01B         	movff	efgtoa@l+3,___fladd@a+3
  4550   0016E6  EC4D  F013         	call	___fladd	;wreg free
  4551   0016EA  C014  F09E         	movff	?___fladd,efgtoa@h
  4552   0016EE  C015  F09F         	movff	?___fladd+1,efgtoa@h+1
  4553   0016F2  C016  F0A0         	movff	?___fladd+2,efgtoa@h+2
  4554   0016F6  C017  F0A1         	movff	?___fladd+3,efgtoa@h+3
  4555   0016FA                     
  4556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4557   0016FA  C09E  F02D         	movff	efgtoa@h,___flge@ff1
  4558   0016FE  C09F  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  4559   001702  C0A0  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  4560   001706  C0A1  F030         	movff	efgtoa@h+3,___flge@ff1+3
  4561   00170A  0E00               	movlw	0
  4562   00170C  6E18               	movwf	___flmul@a^0,c
  4563   00170E  0E00               	movlw	0
  4564   001710  6E19               	movwf	(___flmul@a+1)^0,c
  4565   001712  0E20               	movlw	32
  4566   001714  6E1A               	movwf	(___flmul@a+2)^0,c
  4567   001716  0E41               	movlw	65
  4568   001718  6E1B               	movwf	(___flmul@a+3)^0,c
  4569   00171A  C098  F014         	movff	efgtoa@ou,___flmul@b
  4570   00171E  C099  F015         	movff	efgtoa@ou+1,___flmul@b+1
  4571   001722  C09A  F016         	movff	efgtoa@ou+2,___flmul@b+2
  4572   001726  C09B  F017         	movff	efgtoa@ou+3,___flmul@b+3
  4573   00172A  ECAD  F015         	call	___flmul	;wreg free
  4574   00172E  C014  F031         	movff	?___flmul,___flge@ff2
  4575   001732  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  4576   001736  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  4577   00173A  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  4578   00173E  ECA8  F022         	call	___flge	;wreg free
  4579   001742  A0D8               	btfss	status,0,c
  4580   001744  EFA6  F00B         	goto	u8311
  4581   001748  EFA8  F00B         	goto	u8310
  4582   00174C                     u8311:
  4583   00174C  EFD1  F00B         	goto	l6892
  4584   001750                     u8310:
  4585   001750                     
  4586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4587   001750  0100               	movlb	0	; () banked
  4588   001752  4B96               	infsnz	efgtoa@e& (0+255),f,b
  4589   001754  2B97               	incf	(efgtoa@e+1)& (0+255),f,b
  4590   001756                     
  4591                           ; BSR set to: 0
  4592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4593   001756  C098  F014         	movff	efgtoa@ou,___flmul@b
  4594   00175A  C099  F015         	movff	efgtoa@ou+1,___flmul@b+1
  4595   00175E  C09A  F016         	movff	efgtoa@ou+2,___flmul@b+2
  4596   001762  C09B  F017         	movff	efgtoa@ou+3,___flmul@b+3
  4597   001766  0E00               	movlw	0
  4598   001768  6E18               	movwf	___flmul@a^0,c
  4599   00176A  0E00               	movlw	0
  4600   00176C  6E19               	movwf	(___flmul@a+1)^0,c
  4601   00176E  0E20               	movlw	32
  4602   001770  6E1A               	movwf	(___flmul@a+2)^0,c
  4603   001772  0E41               	movlw	65
  4604   001774  6E1B               	movwf	(___flmul@a+3)^0,c
  4605   001776  ECAD  F015         	call	___flmul	;wreg free
  4606   00177A  C014  F098         	movff	?___flmul,efgtoa@ou
  4607   00177E  C015  F099         	movff	?___flmul+1,efgtoa@ou+1
  4608   001782  C016  F09A         	movff	?___flmul+2,efgtoa@ou+2
  4609   001786  C017  F09B         	movff	?___flmul+3,efgtoa@ou+3
  4610   00178A                     
  4611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4612   00178A  0E66               	movlw	102
  4613   00178C  0100               	movlb	0	; () banked
  4614   00178E  1991               	xorwf	efgtoa@nmode& (0+255),w,b
  4615   001790  A4D8               	btfss	status,2,c
  4616   001792  EFCD  F00B         	goto	u8321
  4617   001796  EFCF  F00B         	goto	u8320
  4618   00179A                     u8321:
  4619   00179A  EFD1  F00B         	goto	l6892
  4620   00179E                     u8320:
  4621   00179E                     
  4622                           ; BSR set to: 0
  4623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4624   00179E  4B94               	infsnz	efgtoa@m& (0+255),f,b
  4625   0017A0  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  4626   0017A2                     l6892:
  4627                           
  4628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4629   0017A2  C098  F0AF         	movff	efgtoa@ou,efgtoa@u
  4630   0017A6  C099  F0B0         	movff	efgtoa@ou+1,efgtoa@u+1
  4631   0017AA  C09A  F0B1         	movff	efgtoa@ou+2,efgtoa@u+2
  4632   0017AE  C09B  F0B2         	movff	efgtoa@ou+3,efgtoa@u+3
  4633   0017B2                     
  4634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4635   0017B2  C096  F087         	movff	efgtoa@e,efgtoa@ne
  4636   0017B6  C097  F088         	movff	efgtoa@e+1,efgtoa@ne+1
  4637   0017BA                     
  4638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4639   0017BA  0E00               	movlw	0
  4640   0017BC  0100               	movlb	0	; () banked
  4641   0017BE  6F8F               	movwf	efgtoa@pp& (0+255),b
  4642   0017C0                     
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4645   0017C0  0E00               	movlw	0
  4646   0017C2  6F8C               	movwf	(efgtoa@t+1)& (0+255),b
  4647   0017C4  0E00               	movlw	0
  4648   0017C6  6F8B               	movwf	efgtoa@t& (0+255),b
  4649   0017C8                     
  4650                           ; BSR set to: 0
  4651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4652   0017C8  0E00               	movlw	0
  4653   0017CA  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  4654   0017CC  0E00               	movlw	0
  4655   0017CE  6FA6               	movwf	efgtoa@i& (0+255),b
  4656                           
  4657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4658   0017D0  EFCF  F00C         	goto	l6942
  4659   0017D4                     l6902:
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4663   0017D4  C09E  F028         	movff	efgtoa@h,___fldiv@b
  4664   0017D8  C09F  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4665   0017DC  C0A0  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4666   0017E0  C0A1  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4667   0017E4  C0AF  F02C         	movff	efgtoa@u,___fldiv@a
  4668   0017E8  C0B0  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4669   0017EC  C0B1  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4670   0017F0  C0B2  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4671   0017F4  ECC2  F017         	call	___fldiv	;wreg free
  4672   0017F8  C028  F041         	movff	?___fldiv,floorf@x
  4673   0017FC  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4674   001800  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4675   001804  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4676   001808  EC1B  F01C         	call	_floorf	;wreg free
  4677   00180C  C041  F0A2         	movff	?_floorf,efgtoa@l
  4678   001810  C042  F0A3         	movff	?_floorf+1,efgtoa@l+1
  4679   001814  C043  F0A4         	movff	?_floorf+2,efgtoa@l+2
  4680   001818  C044  F0A5         	movff	?_floorf+3,efgtoa@l+3
  4681                           
  4682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4683   00181C  C0A2  F014         	movff	efgtoa@l,___fltol@f1
  4684   001820  C0A3  F015         	movff	efgtoa@l+1,___fltol@f1+1
  4685   001824  C0A4  F016         	movff	efgtoa@l+2,___fltol@f1+2
  4686   001828  C0A5  F017         	movff	efgtoa@l+3,___fltol@f1+3
  4687   00182C  EC25  F022         	call	___fltol	;wreg free
  4688   001830  BE15               	btfsc	(?___fltol+1)^0,7,c
  4689   001832  EF26  F00C         	goto	u8330
  4690   001836  5015               	movf	(?___fltol+1)^0,w,c
  4691   001838  E107               	bnz	u8331
  4692   00183A  0E0A               	movlw	10
  4693   00183C  5C14               	subwf	?___fltol^0,w,c
  4694   00183E  B0D8               	btfsc	status,0,c
  4695   001840  EF24  F00C         	goto	u8331
  4696   001844  EF26  F00C         	goto	u8330
  4697   001848                     u8331:
  4698   001848  EF36  F00C         	goto	l6906
  4699   00184C                     u8330:
  4700   00184C  C0A2  F014         	movff	efgtoa@l,___fltol@f1
  4701   001850  C0A3  F015         	movff	efgtoa@l+1,___fltol@f1+1
  4702   001854  C0A4  F016         	movff	efgtoa@l+2,___fltol@f1+2
  4703   001858  C0A5  F017         	movff	efgtoa@l+3,___fltol@f1+3
  4704   00185C  EC25  F022         	call	___fltol	;wreg free
  4705   001860  C014  F092         	movff	?___fltol,efgtoa@d
  4706   001864  C015  F093         	movff	?___fltol+1,efgtoa@d+1
  4707   001868  EF3B  F00C         	goto	l1107
  4708   00186C                     l6906:
  4709   00186C  0E00               	movlw	0
  4710   00186E  0100               	movlb	0	; () banked
  4711   001870  6F93               	movwf	(efgtoa@d+1)& (0+255),b
  4712   001872  0E09               	movlw	9
  4713   001874  6F92               	movwf	efgtoa@d& (0+255),b
  4714   001876                     l1107:
  4715                           
  4716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4717   001876  0100               	movlb	0	; () banked
  4718   001878  518F               	movf	efgtoa@pp& (0+255),w,b
  4719   00187A  A4D8               	btfss	status,2,c
  4720   00187C  EF42  F00C         	goto	u8341
  4721   001880  EF44  F00C         	goto	u8340
  4722   001884                     u8341:
  4723   001884  EF6C  F00C         	goto	l6926
  4724   001888                     u8340:
  4725   001888                     
  4726                           ; BSR set to: 0
  4727   001888  BF88               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4728   00188A  EF4B  F00C         	goto	u8350
  4729   00188E  EF49  F00C         	goto	u8351
  4730   001892                     u8351:
  4731   001892  EF6C  F00C         	goto	l6926
  4732   001896                     u8350:
  4733   001896                     
  4734                           ; BSR set to: 0
  4735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4736   001896  0E0E               	movlw	low _dbuf
  4737   001898  25AD               	addwf	efgtoa@n& (0+255),w,b
  4738   00189A  6ED9               	movwf	fsr2l,c
  4739   00189C  0E01               	movlw	high _dbuf
  4740   00189E  21AE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4741   0018A0  6EDA               	movwf	fsr2h,c
  4742   0018A2  0E2E               	movlw	46
  4743   0018A4  6EDF               	movwf	indf2,c
  4744   0018A6                     
  4745                           ; BSR set to: 0
  4746   0018A6  4BAD               	infsnz	efgtoa@n& (0+255),f,b
  4747   0018A8  2BAE               	incf	(efgtoa@n+1)& (0+255),f,b
  4748   0018AA                     
  4749                           ; BSR set to: 0
  4750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4751   0018AA  079C               	decf	efgtoa@w& (0+255),f,b
  4752   0018AC  A0D8               	btfss	status,0,c
  4753   0018AE  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  4754   0018B0                     
  4755                           ; BSR set to: 0
  4756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4757   0018B0  0E01               	movlw	1
  4758   0018B2  6F8F               	movwf	efgtoa@pp& (0+255),b
  4759   0018B4  EF6C  F00C         	goto	l6926
  4760   0018B8                     l6918:
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4764   0018B8  0E0E               	movlw	low _dbuf
  4765   0018BA  25AD               	addwf	efgtoa@n& (0+255),w,b
  4766   0018BC  6ED9               	movwf	fsr2l,c
  4767   0018BE  0E01               	movlw	high _dbuf
  4768   0018C0  21AE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4769   0018C2  6EDA               	movwf	fsr2h,c
  4770   0018C4  0E30               	movlw	48
  4771   0018C6  6EDF               	movwf	indf2,c
  4772   0018C8                     
  4773                           ; BSR set to: 0
  4774   0018C8  4BAD               	infsnz	efgtoa@n& (0+255),f,b
  4775   0018CA  2BAE               	incf	(efgtoa@n+1)& (0+255),f,b
  4776   0018CC                     
  4777                           ; BSR set to: 0
  4778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4779   0018CC  079C               	decf	efgtoa@w& (0+255),f,b
  4780   0018CE  A0D8               	btfss	status,0,c
  4781   0018D0  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  4782   0018D2                     
  4783                           ; BSR set to: 0
  4784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4785   0018D2  078B               	decf	efgtoa@t& (0+255),f,b
  4786   0018D4  A0D8               	btfss	status,0,c
  4787   0018D6  078C               	decf	(efgtoa@t+1)& (0+255),f,b
  4788   0018D8                     l6926:
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4792   0018D8  518B               	movf	efgtoa@t& (0+255),w,b
  4793   0018DA  118C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4794   0018DC  A4D8               	btfss	status,2,c
  4795   0018DE  EF73  F00C         	goto	u8361
  4796   0018E2  EF75  F00C         	goto	u8360
  4797   0018E6                     u8361:
  4798   0018E6  EF5C  F00C         	goto	l6918
  4799   0018EA                     u8360:
  4800   0018EA                     
  4801                           ; BSR set to: 0
  4802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4803   0018EA  0E0E               	movlw	low _dbuf
  4804   0018EC  25AD               	addwf	efgtoa@n& (0+255),w,b
  4805   0018EE  6ED9               	movwf	fsr2l,c
  4806   0018F0  0E01               	movlw	high _dbuf
  4807   0018F2  21AE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4808   0018F4  6EDA               	movwf	fsr2h,c
  4809   0018F6  5192               	movf	efgtoa@d& (0+255),w,b
  4810   0018F8  0F30               	addlw	48
  4811   0018FA  6EDF               	movwf	indf2,c
  4812   0018FC                     
  4813                           ; BSR set to: 0
  4814   0018FC  4BAD               	infsnz	efgtoa@n& (0+255),f,b
  4815   0018FE  2BAE               	incf	(efgtoa@n+1)& (0+255),f,b
  4816   001900                     
  4817                           ; BSR set to: 0
  4818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4819   001900  079C               	decf	efgtoa@w& (0+255),f,b
  4820   001902  A0D8               	btfss	status,0,c
  4821   001904  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  4822   001906                     
  4823                           ; BSR set to: 0
  4824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4825   001906  C09E  F02D         	movff	efgtoa@h,___flsub@b
  4826   00190A  C09F  F02E         	movff	efgtoa@h+1,___flsub@b+1
  4827   00190E  C0A0  F02F         	movff	efgtoa@h+2,___flsub@b+2
  4828   001912  C0A1  F030         	movff	efgtoa@h+3,___flsub@b+3
  4829   001916  C0A2  F018         	movff	efgtoa@l,___flmul@a
  4830   00191A  C0A3  F019         	movff	efgtoa@l+1,___flmul@a+1
  4831   00191E  C0A4  F01A         	movff	efgtoa@l+2,___flmul@a+2
  4832   001922  C0A5  F01B         	movff	efgtoa@l+3,___flmul@a+3
  4833   001926  C0AF  F014         	movff	efgtoa@u,___flmul@b
  4834   00192A  C0B0  F015         	movff	efgtoa@u+1,___flmul@b+1
  4835   00192E  C0B1  F016         	movff	efgtoa@u+2,___flmul@b+2
  4836   001932  C0B2  F017         	movff	efgtoa@u+3,___flmul@b+3
  4837   001936  ECAD  F015         	call	___flmul	;wreg free
  4838   00193A  C014  F031         	movff	?___flmul,___flsub@a
  4839   00193E  C015  F032         	movff	?___flmul+1,___flsub@a+1
  4840   001942  C016  F033         	movff	?___flmul+2,___flsub@a+2
  4841   001946  C017  F034         	movff	?___flmul+3,___flsub@a+3
  4842   00194A  EC2A  F02A         	call	___flsub	;wreg free
  4843   00194E  C02D  F09E         	movff	?___flsub,efgtoa@h
  4844   001952  C02E  F09F         	movff	?___flsub+1,efgtoa@h+1
  4845   001956  C02F  F0A0         	movff	?___flsub+2,efgtoa@h+2
  4846   00195A  C030  F0A1         	movff	?___flsub+3,efgtoa@h+3
  4847   00195E                     
  4848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4849   00195E  C0AF  F028         	movff	efgtoa@u,___fldiv@b
  4850   001962  C0B0  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4851   001966  C0B1  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4852   00196A  C0B2  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4853   00196E  0E00               	movlw	0
  4854   001970  6E2C               	movwf	___fldiv@a^0,c
  4855   001972  0E00               	movlw	0
  4856   001974  6E2D               	movwf	(___fldiv@a+1)^0,c
  4857   001976  0E20               	movlw	32
  4858   001978  6E2E               	movwf	(___fldiv@a+2)^0,c
  4859   00197A  0E41               	movlw	65
  4860   00197C  6E2F               	movwf	(___fldiv@a+3)^0,c
  4861   00197E  ECC2  F017         	call	___fldiv	;wreg free
  4862   001982  C028  F0AF         	movff	?___fldiv,efgtoa@u
  4863   001986  C029  F0B0         	movff	?___fldiv+1,efgtoa@u+1
  4864   00198A  C02A  F0B1         	movff	?___fldiv+2,efgtoa@u+2
  4865   00198E  C02B  F0B2         	movff	?___fldiv+3,efgtoa@u+3
  4866   001992                     
  4867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4868   001992  0100               	movlb	0	; () banked
  4869   001994  0787               	decf	efgtoa@ne& (0+255),f,b
  4870   001996  A0D8               	btfss	status,0,c
  4871   001998  0788               	decf	(efgtoa@ne+1)& (0+255),f,b
  4872   00199A                     
  4873                           ; BSR set to: 0
  4874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4875   00199A  4BA6               	infsnz	efgtoa@i& (0+255),f,b
  4876   00199C  2BA7               	incf	(efgtoa@i+1)& (0+255),f,b
  4877   00199E                     l6942:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4881   00199E  5194               	movf	efgtoa@m& (0+255),w,b
  4882   0019A0  5DA6               	subwf	efgtoa@i& (0+255),w,b
  4883   0019A2  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  4884   0019A4  0A80               	xorlw	128
  4885   0019A6  6E55               	movwf	??_efgtoa^0,c
  4886   0019A8  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4887   0019AA  0A80               	xorlw	128
  4888   0019AC  5855               	subwfb	??_efgtoa^0,w,c
  4889   0019AE  B0D8               	btfsc	status,0,c
  4890   0019B0  EFDC  F00C         	goto	u8371
  4891   0019B4  EFDE  F00C         	goto	u8370
  4892   0019B8                     u8371:
  4893   0019B8  EFEC  F00C         	goto	l6946
  4894   0019BC                     u8370:
  4895   0019BC                     
  4896                           ; BSR set to: 0
  4897   0019BC  BFAE               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4898   0019BE  EFEA  F00C         	goto	u8381
  4899   0019C2  51AE               	movf	(efgtoa@n+1)& (0+255),w,b
  4900   0019C4  E109               	bnz	u8380
  4901   0019C6  0E4B               	movlw	75
  4902   0019C8  5DAD               	subwf	efgtoa@n& (0+255),w,b
  4903   0019CA  A0D8               	btfss	status,0,c
  4904   0019CC  EFEA  F00C         	goto	u8381
  4905   0019D0  EFEC  F00C         	goto	u8380
  4906   0019D4                     u8381:
  4907   0019D4  EFEA  F00B         	goto	l6902
  4908   0019D8                     u8380:
  4909   0019D8                     l6946:
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4913   0019D8  0E00               	movlw	0
  4914   0019DA  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  4915   0019DC  0E4F               	movlw	79
  4916   0019DE  6FA6               	movwf	efgtoa@i& (0+255),b
  4917   0019E0                     
  4918                           ; BSR set to: 0
  4919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4920   0019E0  0E0E               	movlw	low _dbuf
  4921   0019E2  25A6               	addwf	efgtoa@i& (0+255),w,b
  4922   0019E4  6ED9               	movwf	fsr2l,c
  4923   0019E6  0E01               	movlw	high _dbuf
  4924   0019E8  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4925   0019EA  6EDA               	movwf	fsr2h,c
  4926   0019EC  0E00               	movlw	0
  4927   0019EE  6EDF               	movwf	indf2,c
  4928   0019F0                     
  4929                           ; BSR set to: 0
  4930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4931   0019F0  0E0E               	movlw	low _dbuf
  4932   0019F2  6E55               	movwf	??_efgtoa^0,c
  4933   0019F4  0E01               	movlw	high _dbuf
  4934   0019F6  6E56               	movwf	(??_efgtoa+1)^0,c
  4935   0019F8  51AD               	movf	efgtoa@n& (0+255),w,b
  4936   0019FA  5E55               	subwf	??_efgtoa^0,f,c
  4937   0019FC  51AE               	movf	(efgtoa@n+1)& (0+255),w,b
  4938   0019FE  5A56               	subwfb	(??_efgtoa+1)^0,f,c
  4939   001A00  51A6               	movf	efgtoa@i& (0+255),w,b
  4940   001A02  2455               	addwf	??_efgtoa^0,w,c
  4941   001A04  6E14               	movwf	memcpy@d1^0,c
  4942   001A06  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  4943   001A08  2056               	addwfc	(??_efgtoa+1)^0,w,c
  4944   001A0A  6E15               	movwf	(memcpy@d1+1)^0,c
  4945   001A0C  0E0E               	movlw	low _dbuf
  4946   001A0E  6E16               	movwf	memcpy@s1^0,c
  4947   001A10  0E01               	movlw	high _dbuf
  4948   001A12  6E17               	movwf	(memcpy@s1+1)^0,c
  4949   001A14  C0AD  F018         	movff	efgtoa@n,memcpy@n
  4950   001A18  C0AE  F019         	movff	efgtoa@n+1,memcpy@n+1
  4951   001A1C  ECDB  F029         	call	_memcpy	;wreg free
  4952   001A20                     
  4953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4954   001A20  0100               	movlb	0	; () banked
  4955   001A22  51AD               	movf	efgtoa@n& (0+255),w,b
  4956   001A24  5DA6               	subwf	efgtoa@i& (0+255),w,b
  4957   001A26  6FAD               	movwf	efgtoa@n& (0+255),b
  4958   001A28  51AE               	movf	(efgtoa@n+1)& (0+255),w,b
  4959   001A2A  59A7               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4960   001A2C  6FAE               	movwf	(efgtoa@n+1)& (0+255),b
  4961   001A2E                     
  4962                           ; BSR set to: 0
  4963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4964   001A2E  51A8               	movf	efgtoa@sign& (0+255),w,b
  4965   001A30  A4D8               	btfss	status,2,c
  4966   001A32  EF1D  F00D         	goto	u8391
  4967   001A36  EF20  F00D         	goto	u8390
  4968   001A3A                     u8391:
  4969   001A3A  0E01               	movlw	1
  4970   001A3C  EF21  F00D         	goto	u8400
  4971   001A40                     u8390:
  4972   001A40  0E00               	movlw	0
  4973   001A42                     u8400:
  4974   001A42  6FA6               	movwf	efgtoa@i& (0+255),b
  4975   001A44  6BA7               	clrf	(efgtoa@i+1)& (0+255),b
  4976   001A46                     
  4977                           ; BSR set to: 0
  4978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  4979   001A46  A269               	btfss	_flags^0,1,c
  4980   001A48  EF28  F00D         	goto	u8411
  4981   001A4C  EF2A  F00D         	goto	u8410
  4982   001A50                     u8411:
  4983   001A50  EF58  F00D         	goto	l6968
  4984   001A54                     u8410:
  4985   001A54  EF3A  F00D         	goto	l6964
  4986   001A58                     l6960:
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  4990   001A58  07AD               	decf	efgtoa@n& (0+255),f,b
  4991   001A5A  A0D8               	btfss	status,0,c
  4992   001A5C  07AE               	decf	(efgtoa@n+1)& (0+255),f,b
  4993   001A5E  0E0E               	movlw	low _dbuf
  4994   001A60  25AD               	addwf	efgtoa@n& (0+255),w,b
  4995   001A62  6ED9               	movwf	fsr2l,c
  4996   001A64  0E01               	movlw	high _dbuf
  4997   001A66  21AE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4998   001A68  6EDA               	movwf	fsr2h,c
  4999   001A6A  0E30               	movlw	48
  5000   001A6C  6EDF               	movwf	indf2,c
  5001   001A6E                     
  5002                           ; BSR set to: 0
  5003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  5004   001A6E  079C               	decf	efgtoa@w& (0+255),f,b
  5005   001A70  A0D8               	btfss	status,0,c
  5006   001A72  079D               	decf	(efgtoa@w+1)& (0+255),f,b
  5007   001A74                     l6964:
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  5011   001A74  519C               	movf	efgtoa@w& (0+255),w,b
  5012   001A76  5DA6               	subwf	efgtoa@i& (0+255),w,b
  5013   001A78  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  5014   001A7A  0A80               	xorlw	128
  5015   001A7C  6E55               	movwf	??_efgtoa^0,c
  5016   001A7E  519D               	movf	(efgtoa@w+1)& (0+255),w,b
  5017   001A80  0A80               	xorlw	128
  5018   001A82  5855               	subwfb	??_efgtoa^0,w,c
  5019   001A84  B0D8               	btfsc	status,0,c
  5020   001A86  EF47  F00D         	goto	u8421
  5021   001A8A  EF49  F00D         	goto	u8420
  5022   001A8E                     u8421:
  5023   001A8E  EF58  F00D         	goto	l6968
  5024   001A92                     u8420:
  5025   001A92                     
  5026                           ; BSR set to: 0
  5027   001A92  51AD               	movf	efgtoa@n& (0+255),w,b
  5028   001A94  5DA6               	subwf	efgtoa@i& (0+255),w,b
  5029   001A96  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  5030   001A98  0A80               	xorlw	128
  5031   001A9A  6E55               	movwf	??_efgtoa^0,c
  5032   001A9C  51AE               	movf	(efgtoa@n+1)& (0+255),w,b
  5033   001A9E  0A80               	xorlw	128
  5034   001AA0  5855               	subwfb	??_efgtoa^0,w,c
  5035   001AA2  A0D8               	btfss	status,0,c
  5036   001AA4  EF56  F00D         	goto	u8431
  5037   001AA8  EF58  F00D         	goto	u8430
  5038   001AAC                     u8431:
  5039   001AAC  EF2C  F00D         	goto	l6960
  5040   001AB0                     u8430:
  5041   001AB0                     l6968:
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  5045   001AB0  51A8               	movf	efgtoa@sign& (0+255),w,b
  5046   001AB2  B4D8               	btfsc	status,2,c
  5047   001AB4  EF5E  F00D         	goto	u8441
  5048   001AB8  EF60  F00D         	goto	u8440
  5049   001ABC                     u8441:
  5050   001ABC  EF6B  F00D         	goto	l6972
  5051   001AC0                     u8440:
  5052   001AC0                     
  5053                           ; BSR set to: 0
  5054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  5055   001AC0  07AD               	decf	efgtoa@n& (0+255),f,b
  5056   001AC2  A0D8               	btfss	status,0,c
  5057   001AC4  07AE               	decf	(efgtoa@n+1)& (0+255),f,b
  5058   001AC6  0E0E               	movlw	low _dbuf
  5059   001AC8  25AD               	addwf	efgtoa@n& (0+255),w,b
  5060   001ACA  6ED9               	movwf	fsr2l,c
  5061   001ACC  0E01               	movlw	high _dbuf
  5062   001ACE  21AE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5063   001AD0  6EDA               	movwf	fsr2h,c
  5064   001AD2  C0A8  FFDF         	movff	efgtoa@sign,indf2
  5065   001AD6                     l6972:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  5069   001AD6  51A6               	movf	efgtoa@i& (0+255),w,b
  5070   001AD8  5F9C               	subwf	efgtoa@w& (0+255),f,b
  5071   001ADA  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  5072   001ADC  5B9D               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5073   001ADE                     
  5074                           ; BSR set to: 0
  5075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5076   001ADE  C080  F024         	movff	efgtoa@fp,pad@fp
  5077   001AE2  C081  F025         	movff	efgtoa@fp+1,pad@fp+1
  5078   001AE6  0E0E               	movlw	low _dbuf
  5079   001AE8  25AD               	addwf	efgtoa@n& (0+255),w,b
  5080   001AEA  6E26               	movwf	pad@buf^0,c
  5081   001AEC  0E01               	movlw	high _dbuf
  5082   001AEE  21AE               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5083   001AF0  6E27               	movwf	(pad@buf+1)^0,c
  5084   001AF2  C09C  F028         	movff	efgtoa@w,pad@p
  5085   001AF6  C09D  F029         	movff	efgtoa@w+1,pad@p+1
  5086   001AFA  EC6C  F026         	call	_pad	;wreg free
  5087   001AFE                     l1074:
  5088   001AFE  0012               	return		;funcret
  5089   001B00                     __end_of_efgtoa:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _strcpy *****************
  5093 ;; Defined at:
  5094 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  dest            2   19[COMRAM] PTR unsigned char 
  5097 ;;		 -> dbuf(80), 
  5098 ;;  src             2   21[COMRAM] PTR const unsigned char 
  5099 ;;		 -> STR_27(4), STR_24(4), 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  d               2   25[COMRAM] PTR unsigned char 
  5102 ;;		 -> dbuf(80), 
  5103 ;;  s               2   23[COMRAM] PTR const unsigned char 
  5104 ;;		 -> STR_27(4), STR_24(4), 
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  2   19[COMRAM] PTR unsigned char 
  5107 ;; Registers used:
  5108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5114 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;Total ram usage:        8 bytes
  5119 ;; Hardware stack levels used: 1
  5120 ;; Hardware stack levels required when called: 3
  5121 ;; This function calls:
  5122 ;;		Nothing
  5123 ;; This function is called by:
  5124 ;;		_efgtoa
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text8
  5129   005568                     __ptext8:
  5130                           	callstack 0
  5131   005568                     _strcpy:
  5132                           	callstack 23
  5133   005568  C016  F018         	movff	strcpy@src,strcpy@s
  5134   00556C  C017  F019         	movff	strcpy@src+1,strcpy@s+1
  5135   005570  C014  F01A         	movff	strcpy@dest,strcpy@d
  5136   005574  C015  F01B         	movff	strcpy@dest+1,strcpy@d+1
  5137   005578                     l6612:
  5138   005578  C018  FFF6         	movff	strcpy@s,tblptrl
  5139   00557C  C019  FFF7         	movff	strcpy@s+1,tblptrh
  5140   005580  4A18               	infsnz	strcpy@s^0,f,c
  5141   005582  2A19               	incf	(strcpy@s+1)^0,f,c
  5142   005584                     	if	0	;tblptru may be non-zero
  5143   005584                     	endif
  5144   005584                     	if	0	;tblptru may be non-zero
  5145   005584                     	endif
  5146   005584  C01A  FFD9         	movff	strcpy@d,fsr2l
  5147   005588  C01B  FFDA         	movff	strcpy@d+1,fsr2h
  5148   00558C  4A1A               	infsnz	strcpy@d^0,f,c
  5149   00558E  2A1B               	incf	(strcpy@d+1)^0,f,c
  5150   005590  0008               	tblrd		*
  5151   005592  CFF5 FFDF          	movff	tablat,indf2
  5152   005596  50DF               	movf	indf2,w,c
  5153   005598  A4D8               	btfss	status,2,c
  5154   00559A  EFD1  F02A         	goto	u7781
  5155   00559E  EFD3  F02A         	goto	u7780
  5156   0055A2                     u7781:
  5157   0055A2  EFBC  F02A         	goto	l6612
  5158   0055A6                     u7780:
  5159   0055A6  0012               	return		;funcret
  5160   0055A8                     __end_of_strcpy:
  5161                           	callstack 0
  5162                           
  5163 ;; *************** function _memcpy *****************
  5164 ;; Defined at:
  5165 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  d1              2   19[COMRAM] PTR void 
  5168 ;;		 -> dbuf(80), 
  5169 ;;  s1              2   21[COMRAM] PTR const void 
  5170 ;;		 -> dbuf(80), 
  5171 ;;  n               2   23[COMRAM] unsigned int 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  s               2   28[COMRAM] PTR const unsigned char 
  5174 ;;		 -> dbuf(80), 
  5175 ;;  d               2   26[COMRAM] PTR unsigned char 
  5176 ;;		 -> dbuf(80), 
  5177 ;;  tmp             1   25[COMRAM] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  2   19[COMRAM] PTR void 
  5180 ;; Registers used:
  5181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5187 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;Total ram usage:       11 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; Hardware stack levels required when called: 3
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_efgtoa
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text9
  5202   0053B6                     __ptext9:
  5203                           	callstack 0
  5204   0053B6                     _memcpy:
  5205                           	callstack 23
  5206   0053B6  C016  F01D         	movff	memcpy@s1,memcpy@s
  5207   0053BA  C017  F01E         	movff	memcpy@s1+1,memcpy@s+1
  5208   0053BE  C014  F01B         	movff	memcpy@d1,memcpy@d
  5209   0053C2  C015  F01C         	movff	memcpy@d1+1,memcpy@d+1
  5210   0053C6  EFF5  F029         	goto	l6656
  5211   0053CA                     l6648:
  5212   0053CA  C01D  FFD9         	movff	memcpy@s,fsr2l
  5213   0053CE  C01E  FFDA         	movff	memcpy@s+1,fsr2h
  5214   0053D2  50DF               	movf	indf2,w,c
  5215   0053D4  6E1A               	movwf	memcpy@tmp^0,c
  5216   0053D6  4A1D               	infsnz	memcpy@s^0,f,c
  5217   0053D8  2A1E               	incf	(memcpy@s+1)^0,f,c
  5218   0053DA  C01B  FFD9         	movff	memcpy@d,fsr2l
  5219   0053DE  C01C  FFDA         	movff	memcpy@d+1,fsr2h
  5220   0053E2  C01A  FFDF         	movff	memcpy@tmp,indf2
  5221   0053E6  4A1B               	infsnz	memcpy@d^0,f,c
  5222   0053E8  2A1C               	incf	(memcpy@d+1)^0,f,c
  5223   0053EA                     l6656:
  5224   0053EA  0618               	decf	memcpy@n^0,f,c
  5225   0053EC  A0D8               	btfss	status,0,c
  5226   0053EE  0619               	decf	(memcpy@n+1)^0,f,c
  5227   0053F0  2818               	incf	memcpy@n^0,w,c
  5228   0053F2  E106               	bnz	u7901
  5229   0053F4  2819               	incf	(memcpy@n+1)^0,w,c
  5230   0053F6  A4D8               	btfss	status,2,c
  5231   0053F8  EF00  F02A         	goto	u7901
  5232   0053FC  EF02  F02A         	goto	u7900
  5233   005400                     u7901:
  5234   005400  EFE5  F029         	goto	l6648
  5235   005404                     u7900:
  5236   005404  0012               	return		;funcret
  5237   005406                     __end_of_memcpy:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _labs *****************
  5241 ;; Defined at:
  5242 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  a               4   19[COMRAM] long 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  4   19[COMRAM] long 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;Total ram usage:        8 bytes
  5261 ;; Hardware stack levels used: 1
  5262 ;; Hardware stack levels required when called: 3
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_efgtoa
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text10
  5271   0051B6                     __ptext10:
  5272                           	callstack 0
  5273   0051B6                     _labs:
  5274                           	callstack 23
  5275   0051B6  BE17               	btfsc	(labs@a+3)^0,7,c
  5276   0051B8  EFEA  F028         	goto	u7790
  5277   0051BC  5017               	movf	(labs@a+3)^0,w,c
  5278   0051BE  1016               	iorwf	(labs@a+2)^0,w,c
  5279   0051C0  1015               	iorwf	(labs@a+1)^0,w,c
  5280   0051C2  E106               	bnz	u7791
  5281   0051C4  0414               	decf	labs@a^0,w,c
  5282   0051C6  B0D8               	btfsc	status,0,c
  5283   0051C8  EFE8  F028         	goto	u7791
  5284   0051CC  EFEA  F028         	goto	u7790
  5285   0051D0                     u7791:
  5286   0051D0  EF05  F029         	goto	l1277
  5287   0051D4                     u7790:
  5288   0051D4  C014  F018         	movff	labs@a,??_labs
  5289   0051D8  C015  F019         	movff	labs@a+1,??_labs+1
  5290   0051DC  C016  F01A         	movff	labs@a+2,??_labs+2
  5291   0051E0  C017  F01B         	movff	labs@a+3,??_labs+3
  5292   0051E4  1E18               	comf	??_labs^0,f,c
  5293   0051E6  1E19               	comf	(??_labs+1)^0,f,c
  5294   0051E8  1E1A               	comf	(??_labs+2)^0,f,c
  5295   0051EA  1E1B               	comf	(??_labs+3)^0,f,c
  5296   0051EC  2A18               	incf	??_labs^0,f,c
  5297   0051EE  0E00               	movlw	0
  5298   0051F0  2219               	addwfc	(??_labs+1)^0,f,c
  5299   0051F2  221A               	addwfc	(??_labs+2)^0,f,c
  5300   0051F4  221B               	addwfc	(??_labs+3)^0,f,c
  5301   0051F6  C018  F014         	movff	??_labs,?_labs
  5302   0051FA  C019  F015         	movff	??_labs+1,?_labs+1
  5303   0051FE  C01A  F016         	movff	??_labs+2,?_labs+2
  5304   005202  C01B  F017         	movff	??_labs+3,?_labs+3
  5305   005206  EF0D  F029         	goto	l1280
  5306   00520A                     l1277:
  5307   00520A  C014  F014         	movff	labs@a,?_labs
  5308   00520E  C015  F015         	movff	labs@a+1,?_labs+1
  5309   005212  C016  F016         	movff	labs@a+2,?_labs+2
  5310   005216  C017  F017         	movff	labs@a+3,?_labs+3
  5311   00521A                     l1280:
  5312   00521A  0012               	return		;funcret
  5313   00521C                     __end_of_labs:
  5314                           	callstack 0
  5315                           
  5316 ;; *************** function _floorf *****************
  5317 ;; Defined at:
  5318 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  x               4   64[COMRAM] float 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  u               4   80[COMRAM] struct .
  5323 ;;  m               4   74[COMRAM] unsigned long 
  5324 ;;  e               2   78[COMRAM] int 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  4   64[COMRAM] float 
  5327 ;; Registers used:
  5328 ;;		wreg, status,2, status,0
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;Total ram usage:       20 bytes
  5339 ;; Hardware stack levels used: 1
  5340 ;; Hardware stack levels required when called: 3
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_efgtoa
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text11
  5349   003836                     __ptext11:
  5350                           	callstack 0
  5351   003836                     _floorf:
  5352                           	callstack 23
  5353   003836  C0F5  F051         	movff	floorf@F526,floorf@u
  5354   00383A  C0F6  F052         	movff	floorf@F526+1,floorf@u+1
  5355   00383E  C0F7  F053         	movff	floorf@F526+2,floorf@u+2
  5356   003842  C0F8  F054         	movff	floorf@F526+3,floorf@u+3
  5357   003846  C041  F051         	movff	floorf@x,floorf@u
  5358   00384A  C042  F052         	movff	floorf@x+1,floorf@u+1
  5359   00384E  C043  F053         	movff	floorf@x+2,floorf@u+2
  5360   003852  C044  F054         	movff	floorf@x+3,floorf@u+3
  5361   003856  0E81               	movlw	129
  5362   003858  6E45               	movwf	??_floorf^0,c
  5363   00385A  0EFF               	movlw	255
  5364   00385C  6E46               	movwf	(??_floorf+1)^0,c
  5365   00385E  C051  F047         	movff	floorf@u,??_floorf+2
  5366   003862  C052  F048         	movff	floorf@u+1,??_floorf+3
  5367   003866  C053  F049         	movff	floorf@u+2,??_floorf+4
  5368   00386A  C054  F04A         	movff	floorf@u+3,??_floorf+5
  5369   00386E  0E18               	movlw	24
  5370   003870  EF3F  F01C         	goto	u7800
  5371   003874                     u7805:
  5372   003874  90D8               	bcf	status,0,c
  5373   003876  324A               	rrcf	(??_floorf+5)^0,f,c
  5374   003878  3249               	rrcf	(??_floorf+4)^0,f,c
  5375   00387A  3248               	rrcf	(??_floorf+3)^0,f,c
  5376   00387C  3247               	rrcf	(??_floorf+2)^0,f,c
  5377   00387E                     u7800:
  5378   00387E  2EE8               	decfsz	wreg,f,c
  5379   003880  EF3A  F01C         	goto	u7805
  5380   003884  5047               	movf	(??_floorf+2)^0,w,c
  5381   003886  2445               	addwf	??_floorf^0,w,c
  5382   003888  6E4F               	movwf	floorf@e^0,c
  5383   00388A  0E00               	movlw	0
  5384   00388C  2046               	addwfc	(??_floorf+1)^0,w,c
  5385   00388E  6E50               	movwf	(floorf@e+1)^0,c
  5386   003890  BE50               	btfsc	(floorf@e+1)^0,7,c
  5387   003892  EF54  F01C         	goto	u7811
  5388   003896  5050               	movf	(floorf@e+1)^0,w,c
  5389   003898  E109               	bnz	u7810
  5390   00389A  0E17               	movlw	23
  5391   00389C  5C4F               	subwf	floorf@e^0,w,c
  5392   00389E  A0D8               	btfss	status,0,c
  5393   0038A0  EF54  F01C         	goto	u7811
  5394   0038A4  EF56  F01C         	goto	u7810
  5395   0038A8                     u7811:
  5396   0038A8  EF60  F01C         	goto	l6624
  5397   0038AC                     u7810:
  5398   0038AC                     l6622:
  5399   0038AC  C041  F041         	movff	floorf@x,?_floorf
  5400   0038B0  C042  F042         	movff	floorf@x+1,?_floorf+1
  5401   0038B4  C043  F043         	movff	floorf@x+2,?_floorf+2
  5402   0038B8  C044  F044         	movff	floorf@x+3,?_floorf+3
  5403   0038BC  EF23  F01D         	goto	l1252
  5404   0038C0                     l6624:
  5405   0038C0  BE50               	btfsc	(floorf@e+1)^0,7,c
  5406   0038C2  EF65  F01C         	goto	u7821
  5407   0038C6  EF67  F01C         	goto	u7820
  5408   0038CA                     u7821:
  5409   0038CA  EFD7  F01C         	goto	l6634
  5410   0038CE                     u7820:
  5411   0038CE  C04F  F045         	movff	floorf@e,??_floorf
  5412   0038D2  0EFF               	movlw	255
  5413   0038D4  6E46               	movwf	(??_floorf+1)^0,c
  5414   0038D6  0EFF               	movlw	255
  5415   0038D8  6E47               	movwf	(??_floorf+2)^0,c
  5416   0038DA  0E7F               	movlw	127
  5417   0038DC  6E48               	movwf	(??_floorf+3)^0,c
  5418   0038DE  0E00               	movlw	0
  5419   0038E0  6E49               	movwf	(??_floorf+4)^0,c
  5420   0038E2                     u7835:
  5421   0038E2  6645               	tstfsz	??_floorf^0,c
  5422   0038E4  EF76  F01C         	goto	u7836
  5423   0038E8  EF7E  F01C         	goto	u7837
  5424   0038EC                     u7836:
  5425   0038EC  3449               	rlcf	(??_floorf+4)^0,w,c
  5426   0038EE  3249               	rrcf	(??_floorf+4)^0,f,c
  5427   0038F0  3248               	rrcf	(??_floorf+3)^0,f,c
  5428   0038F2  3247               	rrcf	(??_floorf+2)^0,f,c
  5429   0038F4  3246               	rrcf	(??_floorf+1)^0,f,c
  5430   0038F6  2E45               	decfsz	??_floorf^0,f,c
  5431   0038F8  EF71  F01C         	goto	u7835
  5432   0038FC                     u7837:
  5433   0038FC  C046  F04B         	movff	??_floorf+1,floorf@m
  5434   003900  C047  F04C         	movff	??_floorf+2,floorf@m+1
  5435   003904  C048  F04D         	movff	??_floorf+3,floorf@m+2
  5436   003908  C049  F04E         	movff	??_floorf+4,floorf@m+3
  5437   00390C  504B               	movf	floorf@m^0,w,c
  5438   00390E  1451               	andwf	floorf@u^0,w,c
  5439   003910  6E45               	movwf	??_floorf^0,c
  5440   003912  504C               	movf	(floorf@m+1)^0,w,c
  5441   003914  1452               	andwf	(floorf@u+1)^0,w,c
  5442   003916  6E46               	movwf	(??_floorf+1)^0,c
  5443   003918  504D               	movf	(floorf@m+2)^0,w,c
  5444   00391A  1453               	andwf	(floorf@u+2)^0,w,c
  5445   00391C  6E47               	movwf	(??_floorf+2)^0,c
  5446   00391E  504E               	movf	(floorf@m+3)^0,w,c
  5447   003920  1454               	andwf	(floorf@u+3)^0,w,c
  5448   003922  6E48               	movwf	(??_floorf+3)^0,c
  5449   003924  5045               	movf	??_floorf^0,w,c
  5450   003926  1046               	iorwf	(??_floorf+1)^0,w,c
  5451   003928  1047               	iorwf	(??_floorf+2)^0,w,c
  5452   00392A  1048               	iorwf	(??_floorf+3)^0,w,c
  5453   00392C  A4D8               	btfss	status,2,c
  5454   00392E  EF9B  F01C         	goto	u7841
  5455   003932  EF9D  F01C         	goto	u7840
  5456   003936                     u7841:
  5457   003936  EF9F  F01C         	goto	l6630
  5458   00393A                     u7840:
  5459   00393A  EF56  F01C         	goto	l6622
  5460   00393E                     l6630:
  5461   00393E  C051  F045         	movff	floorf@u,??_floorf
  5462   003942  C052  F046         	movff	floorf@u+1,??_floorf+1
  5463   003946  C053  F047         	movff	floorf@u+2,??_floorf+2
  5464   00394A  C054  F048         	movff	floorf@u+3,??_floorf+3
  5465   00394E  0E20               	movlw	32
  5466   003950  EFAF  F01C         	goto	u7850
  5467   003954                     u7855:
  5468   003954  90D8               	bcf	status,0,c
  5469   003956  3248               	rrcf	(??_floorf+3)^0,f,c
  5470   003958  3247               	rrcf	(??_floorf+2)^0,f,c
  5471   00395A  3246               	rrcf	(??_floorf+1)^0,f,c
  5472   00395C  3245               	rrcf	??_floorf^0,f,c
  5473   00395E                     u7850:
  5474   00395E  2EE8               	decfsz	wreg,f,c
  5475   003960  EFAA  F01C         	goto	u7855
  5476   003964  5045               	movf	??_floorf^0,w,c
  5477   003966  1046               	iorwf	(??_floorf+1)^0,w,c
  5478   003968  1047               	iorwf	(??_floorf+2)^0,w,c
  5479   00396A  1048               	iorwf	(??_floorf+3)^0,w,c
  5480   00396C  B4D8               	btfsc	status,2,c
  5481   00396E  EFBB  F01C         	goto	u7861
  5482   003972  EFBD  F01C         	goto	u7860
  5483   003976                     u7861:
  5484   003976  EFC5  F01C         	goto	l1255
  5485   00397A                     u7860:
  5486   00397A  504B               	movf	floorf@m^0,w,c
  5487   00397C  2651               	addwf	floorf@u^0,f,c
  5488   00397E  504C               	movf	(floorf@m+1)^0,w,c
  5489   003980  2252               	addwfc	(floorf@u+1)^0,f,c
  5490   003982  504D               	movf	(floorf@m+2)^0,w,c
  5491   003984  2253               	addwfc	(floorf@u+2)^0,f,c
  5492   003986  504E               	movf	(floorf@m+3)^0,w,c
  5493   003988  2254               	addwfc	(floorf@u+3)^0,f,c
  5494   00398A                     l1255:
  5495   00398A  1C4B               	comf	floorf@m^0,w,c
  5496   00398C  6E45               	movwf	??_floorf^0,c
  5497   00398E  1C4C               	comf	(floorf@m+1)^0,w,c
  5498   003990  6E46               	movwf	(??_floorf+1)^0,c
  5499   003992  1C4D               	comf	(floorf@m+2)^0,w,c
  5500   003994  6E47               	movwf	(??_floorf+2)^0,c
  5501   003996  1C4E               	comf	(floorf@m+3)^0,w,c
  5502   003998  6E48               	movwf	(??_floorf+3)^0,c
  5503   00399A  5045               	movf	??_floorf^0,w,c
  5504   00399C  1651               	andwf	floorf@u^0,f,c
  5505   00399E  5046               	movf	(??_floorf+1)^0,w,c
  5506   0039A0  1652               	andwf	(floorf@u+1)^0,f,c
  5507   0039A2  5047               	movf	(??_floorf+2)^0,w,c
  5508   0039A4  1653               	andwf	(floorf@u+2)^0,f,c
  5509   0039A6  5048               	movf	(??_floorf+3)^0,w,c
  5510   0039A8  1654               	andwf	(floorf@u+3)^0,f,c
  5511   0039AA  EF1B  F01D         	goto	l6642
  5512   0039AE                     l6634:
  5513   0039AE  C051  F045         	movff	floorf@u,??_floorf
  5514   0039B2  C052  F046         	movff	floorf@u+1,??_floorf+1
  5515   0039B6  C053  F047         	movff	floorf@u+2,??_floorf+2
  5516   0039BA  C054  F048         	movff	floorf@u+3,??_floorf+3
  5517   0039BE  0E20               	movlw	32
  5518   0039C0  EFE7  F01C         	goto	u7870
  5519   0039C4                     u7875:
  5520   0039C4  90D8               	bcf	status,0,c
  5521   0039C6  3248               	rrcf	(??_floorf+3)^0,f,c
  5522   0039C8  3247               	rrcf	(??_floorf+2)^0,f,c
  5523   0039CA  3246               	rrcf	(??_floorf+1)^0,f,c
  5524   0039CC  3245               	rrcf	??_floorf^0,f,c
  5525   0039CE                     u7870:
  5526   0039CE  2EE8               	decfsz	wreg,f,c
  5527   0039D0  EFE2  F01C         	goto	u7875
  5528   0039D4  5045               	movf	??_floorf^0,w,c
  5529   0039D6  1046               	iorwf	(??_floorf+1)^0,w,c
  5530   0039D8  1047               	iorwf	(??_floorf+2)^0,w,c
  5531   0039DA  1048               	iorwf	(??_floorf+3)^0,w,c
  5532   0039DC  A4D8               	btfss	status,2,c
  5533   0039DE  EFF3  F01C         	goto	u7881
  5534   0039E2  EFF5  F01C         	goto	u7880
  5535   0039E6                     u7881:
  5536   0039E6  EFFF  F01C         	goto	l6638
  5537   0039EA                     u7880:
  5538   0039EA  0E00               	movlw	0
  5539   0039EC  6E51               	movwf	floorf@u^0,c
  5540   0039EE  0E00               	movlw	0
  5541   0039F0  6E52               	movwf	(floorf@u+1)^0,c
  5542   0039F2  0E00               	movlw	0
  5543   0039F4  6E53               	movwf	(floorf@u+2)^0,c
  5544   0039F6  0E00               	movlw	0
  5545   0039F8  6E54               	movwf	(floorf@u+3)^0,c
  5546   0039FA  EF1B  F01D         	goto	l6642
  5547   0039FE                     l6638:
  5548   0039FE  90D8               	bcf	status,0,c
  5549   003A00  3451               	rlcf	floorf@u^0,w,c
  5550   003A02  6E45               	movwf	??_floorf^0,c
  5551   003A04  3452               	rlcf	(floorf@u+1)^0,w,c
  5552   003A06  6E46               	movwf	(??_floorf+1)^0,c
  5553   003A08  3453               	rlcf	(floorf@u+2)^0,w,c
  5554   003A0A  6E47               	movwf	(??_floorf+2)^0,c
  5555   003A0C  3454               	rlcf	(floorf@u+3)^0,w,c
  5556   003A0E  6E48               	movwf	(??_floorf+3)^0,c
  5557   003A10  5045               	movf	??_floorf^0,w,c
  5558   003A12  1046               	iorwf	(??_floorf+1)^0,w,c
  5559   003A14  1047               	iorwf	(??_floorf+2)^0,w,c
  5560   003A16  1048               	iorwf	(??_floorf+3)^0,w,c
  5561   003A18  B4D8               	btfsc	status,2,c
  5562   003A1A  EF11  F01D         	goto	u7891
  5563   003A1E  EF13  F01D         	goto	u7890
  5564   003A22                     u7891:
  5565   003A22  EF1B  F01D         	goto	l6642
  5566   003A26                     u7890:
  5567   003A26  0E00               	movlw	0
  5568   003A28  6E51               	movwf	floorf@u^0,c
  5569   003A2A  0E00               	movlw	0
  5570   003A2C  6E52               	movwf	(floorf@u+1)^0,c
  5571   003A2E  0E80               	movlw	128
  5572   003A30  6E53               	movwf	(floorf@u+2)^0,c
  5573   003A32  0EBF               	movlw	191
  5574   003A34  6E54               	movwf	(floorf@u+3)^0,c
  5575   003A36                     l6642:
  5576   003A36  C051  F041         	movff	floorf@u,?_floorf
  5577   003A3A  C052  F042         	movff	floorf@u+1,?_floorf+1
  5578   003A3E  C053  F043         	movff	floorf@u+2,?_floorf+2
  5579   003A42  C054  F044         	movff	floorf@u+3,?_floorf+3
  5580   003A46                     l1252:
  5581   003A46  0012               	return		;funcret
  5582   003A48                     __end_of_floorf:
  5583                           	callstack 0
  5584                           
  5585 ;; *************** function ___fpclassifyf *****************
  5586 ;; Defined at:
  5587 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  x               4   19[COMRAM] float 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  u               4   29[COMRAM] struct .
  5592 ;;  e               2   27[COMRAM] int 
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  2   19[COMRAM] int 
  5595 ;; Registers used:
  5596 ;;		wreg, status,2, status,0
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5603 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;Total ram usage:       14 bytes
  5607 ;; Hardware stack levels used: 1
  5608 ;; Hardware stack levels required when called: 3
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_efgtoa
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text12
  5617   004654                     __ptext12:
  5618                           	callstack 0
  5619   004654                     ___fpclassifyf:
  5620                           	callstack 23
  5621   004654  C0F9  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5622   004658  C0FA  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5623   00465C  C0FB  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5624   004660  C0FC  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5625   004664  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  5626   004668  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5627   00466C  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5628   004670  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5629   004674  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  5630   004678  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5631   00467C  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5632   004680  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5633   004684  0E18               	movlw	24
  5634   004686  EF4A  F023         	goto	u7710
  5635   00468A                     u7715:
  5636   00468A  90D8               	bcf	status,0,c
  5637   00468C  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  5638   00468E  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  5639   004690  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  5640   004692  3218               	rrcf	??___fpclassifyf^0,f,c
  5641   004694                     u7710:
  5642   004694  2EE8               	decfsz	wreg,f,c
  5643   004696  EF45  F023         	goto	u7715
  5644   00469A  5018               	movf	??___fpclassifyf^0,w,c
  5645   00469C  6E1C               	movwf	___fpclassifyf@e^0,c
  5646   00469E  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  5647   0046A0  501C               	movf	___fpclassifyf@e^0,w,c
  5648   0046A2  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5649   0046A4  A4D8               	btfss	status,2,c
  5650   0046A6  EF57  F023         	goto	u7721
  5651   0046AA  EF59  F023         	goto	u7720
  5652   0046AE                     u7721:
  5653   0046AE  EF79  F023         	goto	l6600
  5654   0046B2                     u7720:
  5655   0046B2  90D8               	bcf	status,0,c
  5656   0046B4  341E               	rlcf	___fpclassifyf@u^0,w,c
  5657   0046B6  6E18               	movwf	??___fpclassifyf^0,c
  5658   0046B8  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5659   0046BA  6E19               	movwf	(??___fpclassifyf+1)^0,c
  5660   0046BC  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5661   0046BE  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  5662   0046C0  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5663   0046C2  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  5664   0046C4  5018               	movf	??___fpclassifyf^0,w,c
  5665   0046C6  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  5666   0046C8  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5667   0046CA  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5668   0046CC  A4D8               	btfss	status,2,c
  5669   0046CE  EF6B  F023         	goto	u7731
  5670   0046D2  EF6D  F023         	goto	u7730
  5671   0046D6                     u7731:
  5672   0046D6  EF73  F023         	goto	l6596
  5673   0046DA                     u7730:
  5674   0046DA  0E00               	movlw	0
  5675   0046DC  6E15               	movwf	(?___fpclassifyf+1)^0,c
  5676   0046DE  0E02               	movlw	2
  5677   0046E0  6E14               	movwf	?___fpclassifyf^0,c
  5678   0046E2  EFA8  F023         	goto	l1213
  5679   0046E6                     l6596:
  5680   0046E6  0E00               	movlw	0
  5681   0046E8  6E15               	movwf	(?___fpclassifyf+1)^0,c
  5682   0046EA  0E03               	movlw	3
  5683   0046EC  6E14               	movwf	?___fpclassifyf^0,c
  5684   0046EE  EFA8  F023         	goto	l1213
  5685   0046F2                     l6600:
  5686   0046F2  281C               	incf	___fpclassifyf@e^0,w,c
  5687   0046F4  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5688   0046F6  A4D8               	btfss	status,2,c
  5689   0046F8  EF80  F023         	goto	u7741
  5690   0046FC  EF82  F023         	goto	u7740
  5691   004700                     u7741:
  5692   004700  EFA4  F023         	goto	l6606
  5693   004704                     u7740:
  5694   004704  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  5695   004708  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5696   00470C  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5697   004710  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5698   004714  0E09               	movlw	9
  5699   004716                     u7755:
  5700   004716  90D8               	bcf	status,0,c
  5701   004718  3618               	rlcf	??___fpclassifyf^0,f,c
  5702   00471A  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  5703   00471C  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  5704   00471E  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  5705   004720  2EE8               	decfsz	wreg,f,c
  5706   004722  EF8B  F023         	goto	u7755
  5707   004726  5018               	movf	??___fpclassifyf^0,w,c
  5708   004728  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  5709   00472A  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5710   00472C  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5711   00472E  B4D8               	btfsc	status,2,c
  5712   004730  EF9C  F023         	goto	u7761
  5713   004734  EF9F  F023         	goto	u7760
  5714   004738                     u7761:
  5715   004738  0E01               	movlw	1
  5716   00473A  EFA0  F023         	goto	u7770
  5717   00473E                     u7760:
  5718   00473E  0E00               	movlw	0
  5719   004740                     u7770:
  5720   004740  6E14               	movwf	?___fpclassifyf^0,c
  5721   004742  6A15               	clrf	(?___fpclassifyf+1)^0,c
  5722   004744  EFA8  F023         	goto	l1213
  5723   004748                     l6606:
  5724   004748  0E00               	movlw	0
  5725   00474A  6E15               	movwf	(?___fpclassifyf+1)^0,c
  5726   00474C  0E04               	movlw	4
  5727   00474E  6E14               	movwf	?___fpclassifyf^0,c
  5728   004750                     l1213:
  5729   004750  0012               	return		;funcret
  5730   004752                     __end_of___fpclassifyf:
  5731                           	callstack 0
  5732                           
  5733 ;; *************** function ___fltol *****************
  5734 ;; Defined at:
  5735 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;  f1              4   19[COMRAM] int 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  exp1            1   28[COMRAM] unsigned char 
  5740 ;;  sign1           1   27[COMRAM] unsigned char 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  4   19[COMRAM] long 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;Total ram usage:       10 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; Hardware stack levels required when called: 3
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_efgtoa
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text13
  5765   00444A                     __ptext13:
  5766                           	callstack 0
  5767   00444A                     ___fltol:
  5768                           	callstack 23
  5769   00444A  3416               	rlcf	(___fltol@f1+2)^0,w,c
  5770   00444C  3417               	rlcf	(___fltol@f1+3)^0,w,c
  5771   00444E  6E1D               	movwf	___fltol@exp1^0,c
  5772   004450  501D               	movf	___fltol@exp1^0,w,c
  5773   004452  A4D8               	btfss	status,2,c
  5774   004454  EF2E  F022         	goto	u7591
  5775   004458  EF30  F022         	goto	u7590
  5776   00445C                     u7591:
  5777   00445C  EF3A  F022         	goto	l6528
  5778   004460                     u7590:
  5779   004460                     l6524:
  5780   004460  0E00               	movlw	0
  5781   004462  6E14               	movwf	?___fltol^0,c
  5782   004464  0E00               	movlw	0
  5783   004466  6E15               	movwf	(?___fltol+1)^0,c
  5784   004468  0E00               	movlw	0
  5785   00446A  6E16               	movwf	(?___fltol+2)^0,c
  5786   00446C  0E00               	movlw	0
  5787   00446E  6E17               	movwf	(?___fltol+3)^0,c
  5788   004470  EFA7  F022         	goto	l614
  5789   004474                     l6528:
  5790   004474  C014  F018         	movff	___fltol@f1,??___fltol
  5791   004478  C015  F019         	movff	___fltol@f1+1,??___fltol+1
  5792   00447C  C016  F01A         	movff	___fltol@f1+2,??___fltol+2
  5793   004480  C017  F01B         	movff	___fltol@f1+3,??___fltol+3
  5794   004484  0E20               	movlw	32
  5795   004486  EF4A  F022         	goto	u7600
  5796   00448A                     u7605:
  5797   00448A  90D8               	bcf	status,0,c
  5798   00448C  321B               	rrcf	(??___fltol+3)^0,f,c
  5799   00448E  321A               	rrcf	(??___fltol+2)^0,f,c
  5800   004490  3219               	rrcf	(??___fltol+1)^0,f,c
  5801   004492  3218               	rrcf	??___fltol^0,f,c
  5802   004494                     u7600:
  5803   004494  2EE8               	decfsz	wreg,f,c
  5804   004496  EF45  F022         	goto	u7605
  5805   00449A  5018               	movf	??___fltol^0,w,c
  5806   00449C  6E1C               	movwf	___fltol@sign1^0,c
  5807   00449E  8E16               	bsf	(___fltol@f1+2)^0,7,c
  5808   0044A0  0EFF               	movlw	255
  5809   0044A2  1614               	andwf	___fltol@f1^0,f,c
  5810   0044A4  0EFF               	movlw	255
  5811   0044A6  1615               	andwf	(___fltol@f1+1)^0,f,c
  5812   0044A8  0EFF               	movlw	255
  5813   0044AA  1616               	andwf	(___fltol@f1+2)^0,f,c
  5814   0044AC  0E00               	movlw	0
  5815   0044AE  1617               	andwf	(___fltol@f1+3)^0,f,c
  5816   0044B0  0E96               	movlw	150
  5817   0044B2  5E1D               	subwf	___fltol@exp1^0,f,c
  5818   0044B4  BE1D               	btfsc	___fltol@exp1^0,7,c
  5819   0044B6  EF61  F022         	goto	u7610
  5820   0044BA  EF5F  F022         	goto	u7611
  5821   0044BE                     u7611:
  5822   0044BE  EF77  F022         	goto	l6548
  5823   0044C2                     u7610:
  5824   0044C2  501D               	movf	___fltol@exp1^0,w,c
  5825   0044C4  0A80               	xorlw	128
  5826   0044C6  0F97               	addlw	151
  5827   0044C8  B0D8               	btfsc	status,0,c
  5828   0044CA  EF69  F022         	goto	u7621
  5829   0044CE  EF6B  F022         	goto	u7620
  5830   0044D2                     u7621:
  5831   0044D2  EF6D  F022         	goto	l6544
  5832   0044D6                     u7620:
  5833   0044D6  EF30  F022         	goto	l6524
  5834   0044DA                     l6544:
  5835   0044DA  90D8               	bcf	status,0,c
  5836   0044DC  3217               	rrcf	(___fltol@f1+3)^0,f,c
  5837   0044DE  3216               	rrcf	(___fltol@f1+2)^0,f,c
  5838   0044E0  3215               	rrcf	(___fltol@f1+1)^0,f,c
  5839   0044E2  3214               	rrcf	___fltol@f1^0,f,c
  5840   0044E4  3E1D               	incfsz	___fltol@exp1^0,f,c
  5841   0044E6  EF6D  F022         	goto	l6544
  5842   0044EA  EF8F  F022         	goto	l6558
  5843   0044EE                     l6548:
  5844   0044EE  0E1F               	movlw	31
  5845   0044F0  641D               	cpfsgt	___fltol@exp1^0,c
  5846   0044F2  EF7D  F022         	goto	u7631
  5847   0044F6  EF7F  F022         	goto	u7630
  5848   0044FA                     u7631:
  5849   0044FA  EF87  F022         	goto	l6556
  5850   0044FE                     u7630:
  5851   0044FE  EF30  F022         	goto	l6524
  5852   004502                     l6554:
  5853   004502  90D8               	bcf	status,0,c
  5854   004504  3614               	rlcf	___fltol@f1^0,f,c
  5855   004506  3615               	rlcf	(___fltol@f1+1)^0,f,c
  5856   004508  3616               	rlcf	(___fltol@f1+2)^0,f,c
  5857   00450A  3617               	rlcf	(___fltol@f1+3)^0,f,c
  5858   00450C  061D               	decf	___fltol@exp1^0,f,c
  5859   00450E                     l6556:
  5860   00450E  501D               	movf	___fltol@exp1^0,w,c
  5861   004510  A4D8               	btfss	status,2,c
  5862   004512  EF8D  F022         	goto	u7641
  5863   004516  EF8F  F022         	goto	u7640
  5864   00451A                     u7641:
  5865   00451A  EF81  F022         	goto	l6554
  5866   00451E                     u7640:
  5867   00451E                     l6558:
  5868   00451E  501C               	movf	___fltol@sign1^0,w,c
  5869   004520  B4D8               	btfsc	status,2,c
  5870   004522  EF95  F022         	goto	u7651
  5871   004526  EF97  F022         	goto	u7650
  5872   00452A                     u7651:
  5873   00452A  EF9F  F022         	goto	l6562
  5874   00452E                     u7650:
  5875   00452E  1E17               	comf	(___fltol@f1+3)^0,f,c
  5876   004530  1E16               	comf	(___fltol@f1+2)^0,f,c
  5877   004532  1E15               	comf	(___fltol@f1+1)^0,f,c
  5878   004534  6C14               	negf	___fltol@f1^0,c
  5879   004536  0E00               	movlw	0
  5880   004538  2215               	addwfc	(___fltol@f1+1)^0,f,c
  5881   00453A  2216               	addwfc	(___fltol@f1+2)^0,f,c
  5882   00453C  2217               	addwfc	(___fltol@f1+3)^0,f,c
  5883   00453E                     l6562:
  5884   00453E  C014  F014         	movff	___fltol@f1,?___fltol
  5885   004542  C015  F015         	movff	___fltol@f1+1,?___fltol+1
  5886   004546  C016  F016         	movff	___fltol@f1+2,?___fltol+2
  5887   00454A  C017  F017         	movff	___fltol@f1+3,?___fltol+3
  5888   00454E                     l614:
  5889   00454E  0012               	return		;funcret
  5890   004550                     __end_of___fltol:
  5891                           	callstack 0
  5892                           
  5893 ;; *************** function ___flsub *****************
  5894 ;; Defined at:
  5895 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  b               4   44[COMRAM] long 
  5898 ;;  a               4   48[COMRAM] long 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  4   44[COMRAM] long 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5910 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;Total ram usage:        8 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 4
  5917 ;; This function calls:
  5918 ;;		___fladd
  5919 ;; This function is called by:
  5920 ;;		_efgtoa
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text14
  5925   005454                     __ptext14:
  5926                           	callstack 0
  5927   005454                     ___flsub:
  5928                           	callstack 22
  5929   005454  0E00               	movlw	0
  5930   005456  1A31               	xorwf	___flsub@a^0,f,c
  5931   005458  0E00               	movlw	0
  5932   00545A  1A32               	xorwf	(___flsub@a+1)^0,f,c
  5933   00545C  0E00               	movlw	0
  5934   00545E  1A33               	xorwf	(___flsub@a+2)^0,f,c
  5935   005460  0E80               	movlw	128
  5936   005462  1A34               	xorwf	(___flsub@a+3)^0,f,c
  5937   005464  C02D  F014         	movff	___flsub@b,___fladd@b
  5938   005468  C02E  F015         	movff	___flsub@b+1,___fladd@b+1
  5939   00546C  C02F  F016         	movff	___flsub@b+2,___fladd@b+2
  5940   005470  C030  F017         	movff	___flsub@b+3,___fladd@b+3
  5941   005474  C031  F018         	movff	___flsub@a,___fladd@a
  5942   005478  C032  F019         	movff	___flsub@a+1,___fladd@a+1
  5943   00547C  C033  F01A         	movff	___flsub@a+2,___fladd@a+2
  5944   005480  C034  F01B         	movff	___flsub@a+3,___fladd@a+3
  5945   005484  EC4D  F013         	call	___fladd	;wreg free
  5946   005488  C014  F02D         	movff	?___fladd,?___flsub
  5947   00548C  C015  F02E         	movff	?___fladd+1,?___flsub+1
  5948   005490  C016  F02F         	movff	?___fladd+2,?___flsub+2
  5949   005494  C017  F030         	movff	?___fladd+3,?___flsub+3
  5950   005498  0012               	return		;funcret
  5951   00549A                     __end_of___flsub:
  5952                           	callstack 0
  5953                           
  5954 ;; *************** function ___flneg *****************
  5955 ;; Defined at:
  5956 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  f1              4   19[COMRAM] long 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;		None
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  4   19[COMRAM] long 
  5963 ;; Registers used:
  5964 ;;		wreg, status,2, status,0
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;Total ram usage:        4 bytes
  5975 ;; Hardware stack levels used: 1
  5976 ;; Hardware stack levels required when called: 3
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_efgtoa
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text15
  5985   005622                     __ptext15:
  5986                           	callstack 0
  5987   005622                     ___flneg:
  5988                           	callstack 23
  5989   005622  5014               	movf	___flneg@f1^0,w,c
  5990   005624  1015               	iorwf	(___flneg@f1+1)^0,w,c
  5991   005626  1016               	iorwf	(___flneg@f1+2)^0,w,c
  5992   005628  1017               	iorwf	(___flneg@f1+3)^0,w,c
  5993   00562A  B4D8               	btfsc	status,2,c
  5994   00562C  EF1A  F02B         	goto	u7581
  5995   005630  EF1C  F02B         	goto	u7580
  5996   005634                     u7581:
  5997   005634  EF24  F02B         	goto	l6518
  5998   005638                     u7580:
  5999   005638  0E00               	movlw	0
  6000   00563A  1A14               	xorwf	___flneg@f1^0,f,c
  6001   00563C  0E00               	movlw	0
  6002   00563E  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  6003   005640  0E00               	movlw	0
  6004   005642  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  6005   005644  0E80               	movlw	128
  6006   005646  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  6007   005648                     l6518:
  6008   005648  C014  F014         	movff	___flneg@f1,?___flneg
  6009   00564C  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  6010   005650  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  6011   005654  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  6012   005658  0012               	return		;funcret
  6013   00565A                     __end_of___flneg:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function ___flmul *****************
  6017 ;; Defined at:
  6018 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  b               4   19[COMRAM] long 
  6021 ;;  a               4   23[COMRAM] long 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  prod            4   38[COMRAM] struct .
  6024 ;;  grs             4   33[COMRAM] unsigned long 
  6025 ;;  temp            2   42[COMRAM] struct .
  6026 ;;  bexp            1   37[COMRAM] unsigned char 
  6027 ;;  aexp            1   32[COMRAM] unsigned char 
  6028 ;;  sign            1   31[COMRAM] unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  4   19[COMRAM] unsigned char 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2, status,0, prodl, prodh
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6038 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;Total ram usage:       25 bytes
  6043 ;; Hardware stack levels used: 1
  6044 ;; Hardware stack levels required when called: 3
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_main
  6049 ;;		_efgtoa
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text16
  6054   002B5A                     __ptext16:
  6055                           	callstack 0
  6056   002B5A                     ___flmul:
  6057                           	callstack 23
  6058   002B5A  5017               	movf	(___flmul@b+3)^0,w,c
  6059   002B5C  0B80               	andlw	128
  6060   002B5E  6E20               	movwf	___flmul@sign^0,c
  6061   002B60  5017               	movf	(___flmul@b+3)^0,w,c
  6062   002B62  2417               	addwf	(___flmul@b+3)^0,w,c
  6063   002B64  6E26               	movwf	___flmul@bexp^0,c
  6064   002B66  AE16               	btfss	(___flmul@b+2)^0,7,c
  6065   002B68  EFB8  F015         	goto	u7311
  6066   002B6C  EFBA  F015         	goto	u7310
  6067   002B70                     u7311:
  6068   002B70  EFBB  F015         	goto	l6346
  6069   002B74                     u7310:
  6070   002B74  8026               	bsf	___flmul@bexp^0,0,c
  6071   002B76                     l6346:
  6072   002B76  5026               	movf	___flmul@bexp^0,w,c
  6073   002B78  B4D8               	btfsc	status,2,c
  6074   002B7A  EFC1  F015         	goto	u7321
  6075   002B7E  EFC3  F015         	goto	u7320
  6076   002B82                     u7321:
  6077   002B82  EFD6  F015         	goto	l6354
  6078   002B86                     u7320:
  6079   002B86  2826               	incf	___flmul@bexp^0,w,c
  6080   002B88  A4D8               	btfss	status,2,c
  6081   002B8A  EFC9  F015         	goto	u7331
  6082   002B8E  EFCB  F015         	goto	u7330
  6083   002B92                     u7331:
  6084   002B92  EFD3  F015         	goto	l6352
  6085   002B96                     u7330:
  6086   002B96  0E00               	movlw	0
  6087   002B98  6E14               	movwf	___flmul@b^0,c
  6088   002B9A  0E00               	movlw	0
  6089   002B9C  6E15               	movwf	(___flmul@b+1)^0,c
  6090   002B9E  0E00               	movlw	0
  6091   002BA0  6E16               	movwf	(___flmul@b+2)^0,c
  6092   002BA2  0E00               	movlw	0
  6093   002BA4  6E17               	movwf	(___flmul@b+3)^0,c
  6094   002BA6                     l6352:
  6095   002BA6  8E16               	bsf	(___flmul@b+2)^0,7,c
  6096   002BA8  EFDE  F015         	goto	l6356
  6097   002BAC                     l6354:
  6098   002BAC  0E00               	movlw	0
  6099   002BAE  6E14               	movwf	___flmul@b^0,c
  6100   002BB0  0E00               	movlw	0
  6101   002BB2  6E15               	movwf	(___flmul@b+1)^0,c
  6102   002BB4  0E00               	movlw	0
  6103   002BB6  6E16               	movwf	(___flmul@b+2)^0,c
  6104   002BB8  0E00               	movlw	0
  6105   002BBA  6E17               	movwf	(___flmul@b+3)^0,c
  6106   002BBC                     l6356:
  6107   002BBC  501B               	movf	(___flmul@a+3)^0,w,c
  6108   002BBE  0B80               	andlw	128
  6109   002BC0  1A20               	xorwf	___flmul@sign^0,f,c
  6110   002BC2  501B               	movf	(___flmul@a+3)^0,w,c
  6111   002BC4  241B               	addwf	(___flmul@a+3)^0,w,c
  6112   002BC6  6E21               	movwf	___flmul@aexp^0,c
  6113   002BC8  AE1A               	btfss	(___flmul@a+2)^0,7,c
  6114   002BCA  EFE9  F015         	goto	u7341
  6115   002BCE  EFEB  F015         	goto	u7340
  6116   002BD2                     u7341:
  6117   002BD2  EFEC  F015         	goto	l6364
  6118   002BD6                     u7340:
  6119   002BD6  8021               	bsf	___flmul@aexp^0,0,c
  6120   002BD8                     l6364:
  6121   002BD8  5021               	movf	___flmul@aexp^0,w,c
  6122   002BDA  B4D8               	btfsc	status,2,c
  6123   002BDC  EFF2  F015         	goto	u7351
  6124   002BE0  EFF4  F015         	goto	u7350
  6125   002BE4                     u7351:
  6126   002BE4  EF07  F016         	goto	l6372
  6127   002BE8                     u7350:
  6128   002BE8  2821               	incf	___flmul@aexp^0,w,c
  6129   002BEA  A4D8               	btfss	status,2,c
  6130   002BEC  EFFA  F015         	goto	u7361
  6131   002BF0  EFFC  F015         	goto	u7360
  6132   002BF4                     u7361:
  6133   002BF4  EF04  F016         	goto	l6370
  6134   002BF8                     u7360:
  6135   002BF8  0E00               	movlw	0
  6136   002BFA  6E18               	movwf	___flmul@a^0,c
  6137   002BFC  0E00               	movlw	0
  6138   002BFE  6E19               	movwf	(___flmul@a+1)^0,c
  6139   002C00  0E00               	movlw	0
  6140   002C02  6E1A               	movwf	(___flmul@a+2)^0,c
  6141   002C04  0E00               	movlw	0
  6142   002C06  6E1B               	movwf	(___flmul@a+3)^0,c
  6143   002C08                     l6370:
  6144   002C08  8E1A               	bsf	(___flmul@a+2)^0,7,c
  6145   002C0A  EF0F  F016         	goto	l931
  6146   002C0E                     l6372:
  6147   002C0E  0E00               	movlw	0
  6148   002C10  6E18               	movwf	___flmul@a^0,c
  6149   002C12  0E00               	movlw	0
  6150   002C14  6E19               	movwf	(___flmul@a+1)^0,c
  6151   002C16  0E00               	movlw	0
  6152   002C18  6E1A               	movwf	(___flmul@a+2)^0,c
  6153   002C1A  0E00               	movlw	0
  6154   002C1C  6E1B               	movwf	(___flmul@a+3)^0,c
  6155   002C1E                     l931:
  6156   002C1E  5021               	movf	___flmul@aexp^0,w,c
  6157   002C20  B4D8               	btfsc	status,2,c
  6158   002C22  EF15  F016         	goto	u7371
  6159   002C26  EF17  F016         	goto	u7370
  6160   002C2A                     u7371:
  6161   002C2A  EF1F  F016         	goto	l6376
  6162   002C2E                     u7370:
  6163   002C2E  5026               	movf	___flmul@bexp^0,w,c
  6164   002C30  A4D8               	btfss	status,2,c
  6165   002C32  EF1D  F016         	goto	u7381
  6166   002C36  EF1F  F016         	goto	u7380
  6167   002C3A                     u7381:
  6168   002C3A  EF29  F016         	goto	l6380
  6169   002C3E                     u7380:
  6170   002C3E                     l6376:
  6171   002C3E  0E00               	movlw	0
  6172   002C40  6E14               	movwf	?___flmul^0,c
  6173   002C42  0E00               	movlw	0
  6174   002C44  6E15               	movwf	(?___flmul+1)^0,c
  6175   002C46  0E00               	movlw	0
  6176   002C48  6E16               	movwf	(?___flmul+2)^0,c
  6177   002C4A  0E00               	movlw	0
  6178   002C4C  6E17               	movwf	(?___flmul+3)^0,c
  6179   002C4E  EFC1  F017         	goto	l935
  6180   002C52                     l6380:
  6181   002C52  501A               	movf	(___flmul@a+2)^0,w,c
  6182   002C54  0214               	mulwf	___flmul@b^0,c
  6183   002C56  CFF3 F02B          	movff	prodl,___flmul@temp
  6184   002C5A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6185   002C5E  502B               	movf	___flmul@temp^0,w,c
  6186   002C60  6E22               	movwf	___flmul@grs^0,c
  6187   002C62  6A23               	clrf	(___flmul@grs+1)^0,c
  6188   002C64  6A24               	clrf	(___flmul@grs+2)^0,c
  6189   002C66  6A25               	clrf	(___flmul@grs+3)^0,c
  6190   002C68  502C               	movf	(___flmul@temp+1)^0,w,c
  6191   002C6A  6E27               	movwf	___flmul@prod^0,c
  6192   002C6C  6A28               	clrf	(___flmul@prod+1)^0,c
  6193   002C6E  6A29               	clrf	(___flmul@prod+2)^0,c
  6194   002C70  6A2A               	clrf	(___flmul@prod+3)^0,c
  6195   002C72  5019               	movf	(___flmul@a+1)^0,w,c
  6196   002C74  0215               	mulwf	(___flmul@b+1)^0,c
  6197   002C76  CFF3 F02B          	movff	prodl,___flmul@temp
  6198   002C7A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6199   002C7E  502B               	movf	___flmul@temp^0,w,c
  6200   002C80  2622               	addwf	___flmul@grs^0,f,c
  6201   002C82  0E00               	movlw	0
  6202   002C84  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6203   002C86  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6204   002C88  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6205   002C8A  502C               	movf	(___flmul@temp+1)^0,w,c
  6206   002C8C  2627               	addwf	___flmul@prod^0,f,c
  6207   002C8E  0E00               	movlw	0
  6208   002C90  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6209   002C92  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6210   002C94  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6211   002C96  5018               	movf	___flmul@a^0,w,c
  6212   002C98  0216               	mulwf	(___flmul@b+2)^0,c
  6213   002C9A  CFF3 F02B          	movff	prodl,___flmul@temp
  6214   002C9E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6215   002CA2  502B               	movf	___flmul@temp^0,w,c
  6216   002CA4  2622               	addwf	___flmul@grs^0,f,c
  6217   002CA6  0E00               	movlw	0
  6218   002CA8  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6219   002CAA  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6220   002CAC  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6221   002CAE  502C               	movf	(___flmul@temp+1)^0,w,c
  6222   002CB0  2627               	addwf	___flmul@prod^0,f,c
  6223   002CB2  0E00               	movlw	0
  6224   002CB4  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6225   002CB6  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6226   002CB8  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6227   002CBA  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6228   002CBE  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6229   002CC2  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6230   002CC6  6A22               	clrf	___flmul@grs^0,c
  6231   002CC8  5018               	movf	___flmul@a^0,w,c
  6232   002CCA  0215               	mulwf	(___flmul@b+1)^0,c
  6233   002CCC  CFF3 F02B          	movff	prodl,___flmul@temp
  6234   002CD0  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6235   002CD4  502B               	movf	___flmul@temp^0,w,c
  6236   002CD6  2622               	addwf	___flmul@grs^0,f,c
  6237   002CD8  502C               	movf	(___flmul@temp+1)^0,w,c
  6238   002CDA  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6239   002CDC  0E00               	movlw	0
  6240   002CDE  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6241   002CE0  0E00               	movlw	0
  6242   002CE2  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6243   002CE4  5019               	movf	(___flmul@a+1)^0,w,c
  6244   002CE6  0214               	mulwf	___flmul@b^0,c
  6245   002CE8  CFF3 F02B          	movff	prodl,___flmul@temp
  6246   002CEC  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6247   002CF0  502B               	movf	___flmul@temp^0,w,c
  6248   002CF2  2622               	addwf	___flmul@grs^0,f,c
  6249   002CF4  502C               	movf	(___flmul@temp+1)^0,w,c
  6250   002CF6  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6251   002CF8  0E00               	movlw	0
  6252   002CFA  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6253   002CFC  0E00               	movlw	0
  6254   002CFE  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6255   002D00  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6256   002D04  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6257   002D08  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6258   002D0C  6A22               	clrf	___flmul@grs^0,c
  6259   002D0E  5018               	movf	___flmul@a^0,w,c
  6260   002D10  0214               	mulwf	___flmul@b^0,c
  6261   002D12  CFF3 F02B          	movff	prodl,___flmul@temp
  6262   002D16  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6263   002D1A  502B               	movf	___flmul@temp^0,w,c
  6264   002D1C  2622               	addwf	___flmul@grs^0,f,c
  6265   002D1E  502C               	movf	(___flmul@temp+1)^0,w,c
  6266   002D20  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6267   002D22  0E00               	movlw	0
  6268   002D24  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6269   002D26  0E00               	movlw	0
  6270   002D28  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6271   002D2A  501A               	movf	(___flmul@a+2)^0,w,c
  6272   002D2C  0215               	mulwf	(___flmul@b+1)^0,c
  6273   002D2E  CFF3 F02B          	movff	prodl,___flmul@temp
  6274   002D32  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6275   002D36  502B               	movf	___flmul@temp^0,w,c
  6276   002D38  2627               	addwf	___flmul@prod^0,f,c
  6277   002D3A  502C               	movf	(___flmul@temp+1)^0,w,c
  6278   002D3C  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6279   002D3E  0E00               	movlw	0
  6280   002D40  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6281   002D42  0E00               	movlw	0
  6282   002D44  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6283   002D46  5019               	movf	(___flmul@a+1)^0,w,c
  6284   002D48  0216               	mulwf	(___flmul@b+2)^0,c
  6285   002D4A  CFF3 F02B          	movff	prodl,___flmul@temp
  6286   002D4E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6287   002D52  502B               	movf	___flmul@temp^0,w,c
  6288   002D54  2627               	addwf	___flmul@prod^0,f,c
  6289   002D56  502C               	movf	(___flmul@temp+1)^0,w,c
  6290   002D58  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6291   002D5A  0E00               	movlw	0
  6292   002D5C  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6293   002D5E  0E00               	movlw	0
  6294   002D60  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6295   002D62  501A               	movf	(___flmul@a+2)^0,w,c
  6296   002D64  0216               	mulwf	(___flmul@b+2)^0,c
  6297   002D66  CFF3 F02B          	movff	prodl,___flmul@temp
  6298   002D6A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6299   002D6E  502B               	movf	___flmul@temp^0,w,c
  6300   002D70  6E1C               	movwf	??___flmul^0,c
  6301   002D72  502C               	movf	(___flmul@temp+1)^0,w,c
  6302   002D74  6E1D               	movwf	(??___flmul+1)^0,c
  6303   002D76  6A1E               	clrf	(??___flmul+2)^0,c
  6304   002D78  6A1F               	clrf	(??___flmul+3)^0,c
  6305   002D7A  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6306   002D7E  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6307   002D82  C01C  F01D         	movff	??___flmul,??___flmul+1
  6308   002D86  6A1C               	clrf	??___flmul^0,c
  6309   002D88  501C               	movf	??___flmul^0,w,c
  6310   002D8A  2627               	addwf	___flmul@prod^0,f,c
  6311   002D8C  501D               	movf	(??___flmul+1)^0,w,c
  6312   002D8E  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6313   002D90  501E               	movf	(??___flmul+2)^0,w,c
  6314   002D92  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6315   002D94  501F               	movf	(??___flmul+3)^0,w,c
  6316   002D96  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6317   002D98  C022  F01C         	movff	___flmul@grs,??___flmul
  6318   002D9C  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
  6319   002DA0  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
  6320   002DA4  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
  6321   002DA8  0E19               	movlw	25
  6322   002DAA  EFDC  F016         	goto	u7390
  6323   002DAE                     u7395:
  6324   002DAE  90D8               	bcf	status,0,c
  6325   002DB0  321F               	rrcf	(??___flmul+3)^0,f,c
  6326   002DB2  321E               	rrcf	(??___flmul+2)^0,f,c
  6327   002DB4  321D               	rrcf	(??___flmul+1)^0,f,c
  6328   002DB6  321C               	rrcf	??___flmul^0,f,c
  6329   002DB8                     u7390:
  6330   002DB8  2EE8               	decfsz	wreg,f,c
  6331   002DBA  EFD7  F016         	goto	u7395
  6332   002DBE  501C               	movf	??___flmul^0,w,c
  6333   002DC0  2627               	addwf	___flmul@prod^0,f,c
  6334   002DC2  501D               	movf	(??___flmul+1)^0,w,c
  6335   002DC4  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6336   002DC6  501E               	movf	(??___flmul+2)^0,w,c
  6337   002DC8  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6338   002DCA  501F               	movf	(??___flmul+3)^0,w,c
  6339   002DCC  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6340   002DCE  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6341   002DD2  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6342   002DD6  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6343   002DDA  6A22               	clrf	___flmul@grs^0,c
  6344   002DDC  5021               	movf	___flmul@aexp^0,w,c
  6345   002DDE  C026  F01C         	movff	___flmul@bexp,??___flmul
  6346   002DE2  6A1D               	clrf	(??___flmul+1)^0,c
  6347   002DE4  261C               	addwf	??___flmul^0,f,c
  6348   002DE6  0E00               	movlw	0
  6349   002DE8  221D               	addwfc	(??___flmul+1)^0,f,c
  6350   002DEA  0E82               	movlw	130
  6351   002DEC  241C               	addwf	??___flmul^0,w,c
  6352   002DEE  6E2B               	movwf	___flmul@temp^0,c
  6353   002DF0  0EFF               	movlw	255
  6354   002DF2  201D               	addwfc	(??___flmul+1)^0,w,c
  6355   002DF4  6E2C               	movwf	(___flmul@temp+1)^0,c
  6356   002DF6  EF12  F017         	goto	l6428
  6357   002DFA                     l6422:
  6358   002DFA  90D8               	bcf	status,0,c
  6359   002DFC  3627               	rlcf	___flmul@prod^0,f,c
  6360   002DFE  3628               	rlcf	(___flmul@prod+1)^0,f,c
  6361   002E00  3629               	rlcf	(___flmul@prod+2)^0,f,c
  6362   002E02  362A               	rlcf	(___flmul@prod+3)^0,f,c
  6363   002E04  AE25               	btfss	(___flmul@grs+3)^0,7,c
  6364   002E06  EF07  F017         	goto	u7401
  6365   002E0A  EF09  F017         	goto	u7400
  6366   002E0E                     u7401:
  6367   002E0E  EF0A  F017         	goto	l938
  6368   002E12                     u7400:
  6369   002E12  8027               	bsf	___flmul@prod^0,0,c
  6370   002E14                     l938:
  6371   002E14  90D8               	bcf	status,0,c
  6372   002E16  3622               	rlcf	___flmul@grs^0,f,c
  6373   002E18  3623               	rlcf	(___flmul@grs+1)^0,f,c
  6374   002E1A  3624               	rlcf	(___flmul@grs+2)^0,f,c
  6375   002E1C  3625               	rlcf	(___flmul@grs+3)^0,f,c
  6376   002E1E  062B               	decf	___flmul@temp^0,f,c
  6377   002E20  A0D8               	btfss	status,0,c
  6378   002E22  062C               	decf	(___flmul@temp+1)^0,f,c
  6379   002E24                     l6428:
  6380   002E24  AE29               	btfss	(___flmul@prod+2)^0,7,c
  6381   002E26  EF17  F017         	goto	u7411
  6382   002E2A  EF19  F017         	goto	u7410
  6383   002E2E                     u7411:
  6384   002E2E  EFFD  F016         	goto	l6422
  6385   002E32                     u7410:
  6386   002E32  0E00               	movlw	0
  6387   002E34  6E21               	movwf	___flmul@aexp^0,c
  6388   002E36  AE25               	btfss	(___flmul@grs+3)^0,7,c
  6389   002E38  EF20  F017         	goto	u7421
  6390   002E3C  EF22  F017         	goto	u7420
  6391   002E40                     u7421:
  6392   002E40  EF46  F017         	goto	l940
  6393   002E44                     u7420:
  6394   002E44  0EFF               	movlw	255
  6395   002E46  1422               	andwf	___flmul@grs^0,w,c
  6396   002E48  6E1C               	movwf	??___flmul^0,c
  6397   002E4A  0EFF               	movlw	255
  6398   002E4C  1423               	andwf	(___flmul@grs+1)^0,w,c
  6399   002E4E  6E1D               	movwf	(??___flmul+1)^0,c
  6400   002E50  0EFF               	movlw	255
  6401   002E52  1424               	andwf	(___flmul@grs+2)^0,w,c
  6402   002E54  6E1E               	movwf	(??___flmul+2)^0,c
  6403   002E56  0E7F               	movlw	127
  6404   002E58  1425               	andwf	(___flmul@grs+3)^0,w,c
  6405   002E5A  6E1F               	movwf	(??___flmul+3)^0,c
  6406   002E5C  501C               	movf	??___flmul^0,w,c
  6407   002E5E  101D               	iorwf	(??___flmul+1)^0,w,c
  6408   002E60  101E               	iorwf	(??___flmul+2)^0,w,c
  6409   002E62  101F               	iorwf	(??___flmul+3)^0,w,c
  6410   002E64  B4D8               	btfsc	status,2,c
  6411   002E66  EF37  F017         	goto	u7431
  6412   002E6A  EF39  F017         	goto	u7430
  6413   002E6E                     u7431:
  6414   002E6E  EF3D  F017         	goto	l941
  6415   002E72                     u7430:
  6416   002E72                     l6436:
  6417   002E72  0E01               	movlw	1
  6418   002E74  6E21               	movwf	___flmul@aexp^0,c
  6419   002E76  EF46  F017         	goto	l940
  6420   002E7A                     l941:
  6421   002E7A  A027               	btfss	___flmul@prod^0,0,c
  6422   002E7C  EF42  F017         	goto	u7441
  6423   002E80  EF44  F017         	goto	u7440
  6424   002E84                     u7441:
  6425   002E84  EF46  F017         	goto	l940
  6426   002E88                     u7440:
  6427   002E88  EF39  F017         	goto	l6436
  6428   002E8C                     l940:
  6429   002E8C  5021               	movf	___flmul@aexp^0,w,c
  6430   002E8E  B4D8               	btfsc	status,2,c
  6431   002E90  EF4C  F017         	goto	u7451
  6432   002E94  EF4E  F017         	goto	u7450
  6433   002E98                     u7451:
  6434   002E98  EF72  F017         	goto	l6448
  6435   002E9C                     u7450:
  6436   002E9C  0E01               	movlw	1
  6437   002E9E  2627               	addwf	___flmul@prod^0,f,c
  6438   002EA0  0E00               	movlw	0
  6439   002EA2  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6440   002EA4  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6441   002EA6  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6442   002EA8  A02A               	btfss	(___flmul@prod+3)^0,0,c
  6443   002EAA  EF59  F017         	goto	u7461
  6444   002EAE  EF5B  F017         	goto	u7460
  6445   002EB2                     u7461:
  6446   002EB2  EF72  F017         	goto	l6448
  6447   002EB6                     u7460:
  6448   002EB6  C027  F01C         	movff	___flmul@prod,??___flmul
  6449   002EBA  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  6450   002EBE  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  6451   002EC2  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  6452   002EC6  341F               	rlcf	(??___flmul+3)^0,w,c
  6453   002EC8  321F               	rrcf	(??___flmul+3)^0,f,c
  6454   002ECA  321E               	rrcf	(??___flmul+2)^0,f,c
  6455   002ECC  321D               	rrcf	(??___flmul+1)^0,f,c
  6456   002ECE  321C               	rrcf	??___flmul^0,f,c
  6457   002ED0  C01C  F027         	movff	??___flmul,___flmul@prod
  6458   002ED4  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  6459   002ED8  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  6460   002EDC  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  6461   002EE0  4A2B               	infsnz	___flmul@temp^0,f,c
  6462   002EE2  2A2C               	incf	(___flmul@temp+1)^0,f,c
  6463   002EE4                     l6448:
  6464   002EE4  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  6465   002EE6  EF7D  F017         	goto	u7471
  6466   002EEA  502C               	movf	(___flmul@temp+1)^0,w,c
  6467   002EEC  E108               	bnz	u7470
  6468   002EEE  282B               	incf	___flmul@temp^0,w,c
  6469   002EF0  A0D8               	btfss	status,0,c
  6470   002EF2  EF7D  F017         	goto	u7471
  6471   002EF6  EF7F  F017         	goto	u7470
  6472   002EFA                     u7471:
  6473   002EFA  EF89  F017         	goto	l6452
  6474   002EFE                     u7470:
  6475   002EFE  0E00               	movlw	0
  6476   002F00  6E27               	movwf	___flmul@prod^0,c
  6477   002F02  0E00               	movlw	0
  6478   002F04  6E28               	movwf	(___flmul@prod+1)^0,c
  6479   002F06  0E80               	movlw	128
  6480   002F08  6E29               	movwf	(___flmul@prod+2)^0,c
  6481   002F0A  0E7F               	movlw	127
  6482   002F0C  6E2A               	movwf	(___flmul@prod+3)^0,c
  6483   002F0E  EFB7  F017         	goto	l6464
  6484   002F12                     l6452:
  6485   002F12  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  6486   002F14  EF96  F017         	goto	u7480
  6487   002F18  502C               	movf	(___flmul@temp+1)^0,w,c
  6488   002F1A  E106               	bnz	u7481
  6489   002F1C  042B               	decf	___flmul@temp^0,w,c
  6490   002F1E  B0D8               	btfsc	status,0,c
  6491   002F20  EF94  F017         	goto	u7481
  6492   002F24  EF96  F017         	goto	u7480
  6493   002F28                     u7481:
  6494   002F28  EFA2  F017         	goto	l948
  6495   002F2C                     u7480:
  6496   002F2C  0E00               	movlw	0
  6497   002F2E  6E27               	movwf	___flmul@prod^0,c
  6498   002F30  0E00               	movlw	0
  6499   002F32  6E28               	movwf	(___flmul@prod+1)^0,c
  6500   002F34  0E00               	movlw	0
  6501   002F36  6E29               	movwf	(___flmul@prod+2)^0,c
  6502   002F38  0E00               	movlw	0
  6503   002F3A  6E2A               	movwf	(___flmul@prod+3)^0,c
  6504   002F3C  0E00               	movlw	0
  6505   002F3E  6E20               	movwf	___flmul@sign^0,c
  6506   002F40  EFB7  F017         	goto	l6464
  6507   002F44                     l948:
  6508   002F44  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  6509   002F48  0EFF               	movlw	255
  6510   002F4A  1627               	andwf	___flmul@prod^0,f,c
  6511   002F4C  0EFF               	movlw	255
  6512   002F4E  1628               	andwf	(___flmul@prod+1)^0,f,c
  6513   002F50  0E7F               	movlw	127
  6514   002F52  1629               	andwf	(___flmul@prod+2)^0,f,c
  6515   002F54  0E00               	movlw	0
  6516   002F56  162A               	andwf	(___flmul@prod+3)^0,f,c
  6517   002F58  A026               	btfss	___flmul@bexp^0,0,c
  6518   002F5A  EFB1  F017         	goto	u7491
  6519   002F5E  EFB3  F017         	goto	u7490
  6520   002F62                     u7491:
  6521   002F62  EFB4  F017         	goto	l6462
  6522   002F66                     u7490:
  6523   002F66  8E29               	bsf	(___flmul@prod+2)^0,7,c
  6524   002F68                     l6462:
  6525   002F68  90D8               	bcf	status,0,c
  6526   002F6A  3026               	rrcf	___flmul@bexp^0,w,c
  6527   002F6C  6E2A               	movwf	(___flmul@prod+3)^0,c
  6528   002F6E                     l6464:
  6529   002F6E  5020               	movf	___flmul@sign^0,w,c
  6530   002F70  122A               	iorwf	(___flmul@prod+3)^0,f,c
  6531   002F72  C027  F014         	movff	___flmul@prod,?___flmul
  6532   002F76  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  6533   002F7A  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  6534   002F7E  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  6535   002F82                     l935:
  6536   002F82  0012               	return		;funcret
  6537   002F84                     __end_of___flmul:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function ___fleq *****************
  6541 ;; Defined at:
  6542 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  ff1             4   19[COMRAM] unsigned char 
  6545 ;;  ff2             4   23[COMRAM] unsigned char 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;		None
  6548 ;; Return value:  Size  Location     Type
  6549 ;;		None               void
  6550 ;; Registers used:
  6551 ;;		wreg, status,2, status,0
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6557 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;Total ram usage:       12 bytes
  6562 ;; Hardware stack levels used: 1
  6563 ;; Hardware stack levels required when called: 3
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		_efgtoa
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text17
  6572   004C2E                     __ptext17:
  6573                           	callstack 0
  6574   004C2E                     ___fleq:
  6575                           	callstack 23
  6576   004C2E  0E00               	movlw	0
  6577   004C30  1414               	andwf	___fleq@ff1^0,w,c
  6578   004C32  6E1C               	movwf	??___fleq^0,c
  6579   004C34  0E00               	movlw	0
  6580   004C36  1415               	andwf	(___fleq@ff1+1)^0,w,c
  6581   004C38  6E1D               	movwf	(??___fleq+1)^0,c
  6582   004C3A  0E80               	movlw	128
  6583   004C3C  1416               	andwf	(___fleq@ff1+2)^0,w,c
  6584   004C3E  6E1E               	movwf	(??___fleq+2)^0,c
  6585   004C40  0E7F               	movlw	127
  6586   004C42  1417               	andwf	(___fleq@ff1+3)^0,w,c
  6587   004C44  6E1F               	movwf	(??___fleq+3)^0,c
  6588   004C46  501C               	movf	??___fleq^0,w,c
  6589   004C48  101D               	iorwf	(??___fleq+1)^0,w,c
  6590   004C4A  101E               	iorwf	(??___fleq+2)^0,w,c
  6591   004C4C  101F               	iorwf	(??___fleq+3)^0,w,c
  6592   004C4E  A4D8               	btfss	status,2,c
  6593   004C50  EF2C  F026         	goto	u7501
  6594   004C54  EF2E  F026         	goto	u7500
  6595   004C58                     u7501:
  6596   004C58  EF36  F026         	goto	l6480
  6597   004C5C                     u7500:
  6598   004C5C  0E00               	movlw	0
  6599   004C5E  6E14               	movwf	___fleq@ff1^0,c
  6600   004C60  0E00               	movlw	0
  6601   004C62  6E15               	movwf	(___fleq@ff1+1)^0,c
  6602   004C64  0E00               	movlw	0
  6603   004C66  6E16               	movwf	(___fleq@ff1+2)^0,c
  6604   004C68  0E00               	movlw	0
  6605   004C6A  6E17               	movwf	(___fleq@ff1+3)^0,c
  6606   004C6C                     l6480:
  6607   004C6C  0E00               	movlw	0
  6608   004C6E  1418               	andwf	___fleq@ff2^0,w,c
  6609   004C70  6E1C               	movwf	??___fleq^0,c
  6610   004C72  0E00               	movlw	0
  6611   004C74  1419               	andwf	(___fleq@ff2+1)^0,w,c
  6612   004C76  6E1D               	movwf	(??___fleq+1)^0,c
  6613   004C78  0E80               	movlw	128
  6614   004C7A  141A               	andwf	(___fleq@ff2+2)^0,w,c
  6615   004C7C  6E1E               	movwf	(??___fleq+2)^0,c
  6616   004C7E  0E7F               	movlw	127
  6617   004C80  141B               	andwf	(___fleq@ff2+3)^0,w,c
  6618   004C82  6E1F               	movwf	(??___fleq+3)^0,c
  6619   004C84  501C               	movf	??___fleq^0,w,c
  6620   004C86  101D               	iorwf	(??___fleq+1)^0,w,c
  6621   004C88  101E               	iorwf	(??___fleq+2)^0,w,c
  6622   004C8A  101F               	iorwf	(??___fleq+3)^0,w,c
  6623   004C8C  A4D8               	btfss	status,2,c
  6624   004C8E  EF4B  F026         	goto	u7511
  6625   004C92  EF4D  F026         	goto	u7510
  6626   004C96                     u7511:
  6627   004C96  EF55  F026         	goto	l6484
  6628   004C9A                     u7510:
  6629   004C9A  0E00               	movlw	0
  6630   004C9C  6E18               	movwf	___fleq@ff2^0,c
  6631   004C9E  0E00               	movlw	0
  6632   004CA0  6E19               	movwf	(___fleq@ff2+1)^0,c
  6633   004CA2  0E00               	movlw	0
  6634   004CA4  6E1A               	movwf	(___fleq@ff2+2)^0,c
  6635   004CA6  0E00               	movlw	0
  6636   004CA8  6E1B               	movwf	(___fleq@ff2+3)^0,c
  6637   004CAA                     l6484:
  6638   004CAA  5018               	movf	___fleq@ff2^0,w,c
  6639   004CAC  1814               	xorwf	___fleq@ff1^0,w,c
  6640   004CAE  E10F               	bnz	u7520
  6641   004CB0  5019               	movf	(___fleq@ff2+1)^0,w,c
  6642   004CB2  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  6643   004CB4  E10C               	bnz	u7520
  6644   004CB6  501A               	movf	(___fleq@ff2+2)^0,w,c
  6645   004CB8  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  6646   004CBA  E109               	bnz	u7520
  6647   004CBC  501B               	movf	(___fleq@ff2+3)^0,w,c
  6648   004CBE  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  6649   004CC0  B4D8               	btfsc	status,2,c
  6650   004CC2  EF65  F026         	goto	u7521
  6651   004CC6  EF67  F026         	goto	u7520
  6652   004CCA                     u7521:
  6653   004CCA  EF6A  F026         	goto	l6488
  6654   004CCE                     u7520:
  6655   004CCE  90D8               	bcf	status,0,c
  6656   004CD0  EF6B  F026         	goto	l576
  6657   004CD4                     l6488:
  6658   004CD4  80D8               	bsf	status,0,c
  6659   004CD6                     l576:
  6660   004CD6  0012               	return		;funcret
  6661   004CD8                     __end_of___fleq:
  6662                           	callstack 0
  6663                           
  6664 ;; *************** function _dtoa *****************
  6665 ;; Defined at:
  6666 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  6669 ;;		 -> sprintf@f(11), 
  6670 ;;  d               8   48[COMRAM] long long 
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;  n               8   70[COMRAM] long long 
  6673 ;;  i               2   79[COMRAM] int 
  6674 ;;  w               2   68[COMRAM] int 
  6675 ;;  p               2   66[COMRAM] int 
  6676 ;;  s               1   78[COMRAM] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6686 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;Total ram usage:       35 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; Hardware stack levels required when called: 7
  6693 ;; This function calls:
  6694 ;;		___aodiv
  6695 ;;		___aomod
  6696 ;;		_abs
  6697 ;;		_pad
  6698 ;; This function is called by:
  6699 ;;		_vfpfcnvrt
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text18
  6704   00331E                     __ptext18:
  6705                           	callstack 0
  6706   00331E                     _dtoa:
  6707                           	callstack 20
  6708   00331E                     
  6709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  6710   00331E  C031  F047         	movff	dtoa@d,dtoa@n
  6711   003322  C032  F048         	movff	dtoa@d+1,dtoa@n+1
  6712   003326  C033  F049         	movff	dtoa@d+2,dtoa@n+2
  6713   00332A  C034  F04A         	movff	dtoa@d+3,dtoa@n+3
  6714   00332E  C035  F04B         	movff	dtoa@d+4,dtoa@n+4
  6715   003332  C036  F04C         	movff	dtoa@d+5,dtoa@n+5
  6716   003336  C037  F04D         	movff	dtoa@d+6,dtoa@n+6
  6717   00333A  C038  F04E         	movff	dtoa@d+7,dtoa@n+7
  6718   00333E                     
  6719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  6720   00333E  BE4E               	btfsc	(dtoa@n+7)^0,7,c
  6721   003340  EFA4  F019         	goto	u7971
  6722   003344  EFA7  F019         	goto	u7970
  6723   003348                     u7971:
  6724   003348  0E01               	movlw	1
  6725   00334A  EFA8  F019         	goto	u7980
  6726   00334E                     u7970:
  6727   00334E  0E00               	movlw	0
  6728   003350                     u7980:
  6729   003350  6E4F               	movwf	dtoa@s^0,c
  6730   003352                     
  6731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  6732   003352  504F               	movf	dtoa@s^0,w,c
  6733   003354  B4D8               	btfsc	status,2,c
  6734   003356  EFAF  F019         	goto	u7991
  6735   00335A  EFB1  F019         	goto	u7990
  6736   00335E                     u7991:
  6737   00335E  EFC1  F019         	goto	l6692
  6738   003362                     u7990:
  6739   003362                     
  6740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  6741   003362  1E4E               	comf	(dtoa@n+7)^0,f,c
  6742   003364  1E4D               	comf	(dtoa@n+6)^0,f,c
  6743   003366  1E4C               	comf	(dtoa@n+5)^0,f,c
  6744   003368  1E4B               	comf	(dtoa@n+4)^0,f,c
  6745   00336A  1E4A               	comf	(dtoa@n+3)^0,f,c
  6746   00336C  1E49               	comf	(dtoa@n+2)^0,f,c
  6747   00336E  1E48               	comf	(dtoa@n+1)^0,f,c
  6748   003370  6C47               	negf	dtoa@n^0,c
  6749   003372  0E00               	movlw	0
  6750   003374  2248               	addwfc	(dtoa@n+1)^0,f,c
  6751   003376  2249               	addwfc	(dtoa@n+2)^0,f,c
  6752   003378  224A               	addwfc	(dtoa@n+3)^0,f,c
  6753   00337A  224B               	addwfc	(dtoa@n+4)^0,f,c
  6754   00337C  224C               	addwfc	(dtoa@n+5)^0,f,c
  6755   00337E  224D               	addwfc	(dtoa@n+6)^0,f,c
  6756   003380  224E               	addwfc	(dtoa@n+7)^0,f,c
  6757   003382                     l6692:
  6758                           
  6759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  6760   003382  BE5A               	btfsc	(_prec+1)^0,7,c
  6761   003384  EFC6  F019         	goto	u8001
  6762   003388  EFC8  F019         	goto	u8000
  6763   00338C                     u8001:
  6764   00338C  EFC9  F019         	goto	l6696
  6765   003390                     u8000:
  6766   003390                     
  6767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  6768   003390  9269               	bcf	_flags^0,1,c
  6769   003392                     l6696:
  6770                           
  6771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  6772   003392  BE5A               	btfsc	(_prec+1)^0,7,c
  6773   003394  EFD6  F019         	goto	u8010
  6774   003398  505A               	movf	(_prec+1)^0,w,c
  6775   00339A  E106               	bnz	u8011
  6776   00339C  0459               	decf	_prec^0,w,c
  6777   00339E  B0D8               	btfsc	status,0,c
  6778   0033A0  EFD4  F019         	goto	u8011
  6779   0033A4  EFD6  F019         	goto	u8010
  6780   0033A8                     u8011:
  6781   0033A8  EFDC  F019         	goto	l1047
  6782   0033AC                     u8010:
  6783   0033AC  0E00               	movlw	0
  6784   0033AE  6E44               	movwf	(dtoa@p+1)^0,c
  6785   0033B0  0E01               	movlw	1
  6786   0033B2  6E43               	movwf	dtoa@p^0,c
  6787   0033B4  EFE0  F019         	goto	l1049
  6788   0033B8                     l1047:
  6789   0033B8  C059  F043         	movff	_prec,dtoa@p
  6790   0033BC  C05A  F044         	movff	_prec+1,dtoa@p+1
  6791   0033C0                     l1049:
  6792                           
  6793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  6794   0033C0  C057  F045         	movff	_width,dtoa@w
  6795   0033C4  C058  F046         	movff	_width+1,dtoa@w+1
  6796   0033C8                     
  6797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  6798   0033C8  504F               	movf	dtoa@s^0,w,c
  6799   0033CA  B4D8               	btfsc	status,2,c
  6800   0033CC  EFEA  F019         	goto	u8021
  6801   0033D0  EFEC  F019         	goto	u8020
  6802   0033D4                     u8021:
  6803   0033D4  EF03  F01A         	goto	l1050
  6804   0033D8                     u8020:
  6805   0033D8                     
  6806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  6807   0033D8  0645               	decf	dtoa@w^0,f,c
  6808   0033DA  A0D8               	btfss	status,0,c
  6809   0033DC  0646               	decf	(dtoa@w+1)^0,f,c
  6810   0033DE                     
  6811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  6812   0033DE  504F               	movf	dtoa@s^0,w,c
  6813   0033E0  A4D8               	btfss	status,2,c
  6814   0033E2  EFF5  F019         	goto	u8031
  6815   0033E6  EFF7  F019         	goto	u8030
  6816   0033EA                     u8031:
  6817   0033EA  EFFD  F019         	goto	l6708
  6818   0033EE                     u8030:
  6819   0033EE  0E00               	movlw	0
  6820   0033F0  6E42               	movwf	(_dtoa$1446+1)^0,c
  6821   0033F2  0E2B               	movlw	43
  6822   0033F4  6E41               	movwf	_dtoa$1446^0,c
  6823   0033F6  EF01  F01A         	goto	l6710
  6824   0033FA                     l6708:
  6825   0033FA  0E00               	movlw	0
  6826   0033FC  6E42               	movwf	(_dtoa$1446+1)^0,c
  6827   0033FE  0E2D               	movlw	45
  6828   003400  6E41               	movwf	_dtoa$1446^0,c
  6829   003402                     l6710:
  6830   003402  C041  F04F         	movff	_dtoa$1446,dtoa@s
  6831   003406                     l1050:
  6832                           
  6833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  6834   003406  0E00               	movlw	0
  6835   003408  6E51               	movwf	(dtoa@i+1)^0,c
  6836   00340A  0E4F               	movlw	79
  6837   00340C  6E50               	movwf	dtoa@i^0,c
  6838   00340E                     
  6839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  6840   00340E  0E00               	movlw	0
  6841   003410  0101               	movlb	1	; () banked
  6842   003412  6F5D               	movwf	(_dbuf+79)& (0+255),b
  6843                           
  6844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6845   003414  EF88  F01A         	goto	l6724
  6846   003418                     l6714:
  6847                           
  6848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  6849   003418  0650               	decf	dtoa@i^0,f,c
  6850   00341A  A0D8               	btfss	status,0,c
  6851   00341C  0651               	decf	(dtoa@i+1)^0,f,c
  6852   00341E                     
  6853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6854   00341E  0E0E               	movlw	low _dbuf
  6855   003420  2450               	addwf	dtoa@i^0,w,c
  6856   003422  6ED9               	movwf	fsr2l,c
  6857   003424  0E01               	movlw	high _dbuf
  6858   003426  2051               	addwfc	(dtoa@i+1)^0,w,c
  6859   003428  6EDA               	movwf	fsr2h,c
  6860   00342A  C047  F014         	movff	dtoa@n,___aomod@dividend
  6861   00342E  C048  F015         	movff	dtoa@n+1,___aomod@dividend+1
  6862   003432  C049  F016         	movff	dtoa@n+2,___aomod@dividend+2
  6863   003436  C04A  F017         	movff	dtoa@n+3,___aomod@dividend+3
  6864   00343A  C04B  F018         	movff	dtoa@n+4,___aomod@dividend+4
  6865   00343E  C04C  F019         	movff	dtoa@n+5,___aomod@dividend+5
  6866   003442  C04D  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  6867   003446  C04E  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  6868   00344A  0E0A               	movlw	10
  6869   00344C  6E1C               	movwf	___aomod@divisor^0,c
  6870   00344E  0E00               	movlw	0
  6871   003450  6E1D               	movwf	(___aomod@divisor+1)^0,c
  6872   003452  0E00               	movlw	0
  6873   003454  6E1E               	movwf	(___aomod@divisor+2)^0,c
  6874   003456  0E00               	movlw	0
  6875   003458  6E1F               	movwf	(___aomod@divisor+3)^0,c
  6876   00345A  0E00               	movlw	0
  6877   00345C  6E20               	movwf	(___aomod@divisor+4)^0,c
  6878   00345E  0E00               	movlw	0
  6879   003460  6E21               	movwf	(___aomod@divisor+5)^0,c
  6880   003462  0E00               	movlw	0
  6881   003464  6E22               	movwf	(___aomod@divisor+6)^0,c
  6882   003466  0E00               	movlw	0
  6883   003468  6E23               	movwf	(___aomod@divisor+7)^0,c
  6884   00346A  EC8B  F01F         	call	___aomod	;wreg free
  6885   00346E  C014  F039         	movff	?___aomod,??_dtoa
  6886   003472  C015  F03A         	movff	?___aomod+1,??_dtoa+1
  6887   003476  C016  F03B         	movff	?___aomod+2,??_dtoa+2
  6888   00347A  C017  F03C         	movff	?___aomod+3,??_dtoa+3
  6889   00347E  C018  F03D         	movff	?___aomod+4,??_dtoa+4
  6890   003482  C019  F03E         	movff	?___aomod+5,??_dtoa+5
  6891   003486  C01A  F03F         	movff	?___aomod+6,??_dtoa+6
  6892   00348A  C01B  F040         	movff	?___aomod+7,??_dtoa+7
  6893   00348E  C039  F026         	movff	??_dtoa,abs@a
  6894   003492  C03A  F027         	movff	??_dtoa+1,abs@a+1
  6895   003496  ECD4  F02A         	call	_abs	;wreg free
  6896   00349A  5026               	movf	?_abs^0,w,c
  6897   00349C  0F30               	addlw	48
  6898   00349E  6EDF               	movwf	indf2,c
  6899   0034A0                     
  6900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  6901   0034A0  0643               	decf	dtoa@p^0,f,c
  6902   0034A2  A0D8               	btfss	status,0,c
  6903   0034A4  0644               	decf	(dtoa@p+1)^0,f,c
  6904   0034A6                     
  6905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  6906   0034A6  0645               	decf	dtoa@w^0,f,c
  6907   0034A8  A0D8               	btfss	status,0,c
  6908   0034AA  0646               	decf	(dtoa@w+1)^0,f,c
  6909   0034AC                     
  6910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  6911   0034AC  C047  F014         	movff	dtoa@n,___aodiv@dividend
  6912   0034B0  C048  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  6913   0034B4  C049  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  6914   0034B8  C04A  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  6915   0034BC  C04B  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  6916   0034C0  C04C  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  6917   0034C4  C04D  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  6918   0034C8  C04E  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  6919   0034CC  0E0A               	movlw	10
  6920   0034CE  6E1C               	movwf	___aodiv@divisor^0,c
  6921   0034D0  0E00               	movlw	0
  6922   0034D2  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  6923   0034D4  0E00               	movlw	0
  6924   0034D6  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  6925   0034D8  0E00               	movlw	0
  6926   0034DA  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  6927   0034DC  0E00               	movlw	0
  6928   0034DE  6E20               	movwf	(___aodiv@divisor+4)^0,c
  6929   0034E0  0E00               	movlw	0
  6930   0034E2  6E21               	movwf	(___aodiv@divisor+5)^0,c
  6931   0034E4  0E00               	movlw	0
  6932   0034E6  6E22               	movwf	(___aodiv@divisor+6)^0,c
  6933   0034E8  0E00               	movlw	0
  6934   0034EA  6E23               	movwf	(___aodiv@divisor+7)^0,c
  6935   0034EC  ECC7  F01E         	call	___aodiv	;wreg free
  6936   0034F0  C014  F047         	movff	?___aodiv,dtoa@n
  6937   0034F4  C015  F048         	movff	?___aodiv+1,dtoa@n+1
  6938   0034F8  C016  F049         	movff	?___aodiv+2,dtoa@n+2
  6939   0034FC  C017  F04A         	movff	?___aodiv+3,dtoa@n+3
  6940   003500  C018  F04B         	movff	?___aodiv+4,dtoa@n+4
  6941   003504  C019  F04C         	movff	?___aodiv+5,dtoa@n+5
  6942   003508  C01A  F04D         	movff	?___aodiv+6,dtoa@n+6
  6943   00350C  C01B  F04E         	movff	?___aodiv+7,dtoa@n+7
  6944   003510                     l6724:
  6945                           
  6946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6947   003510  BE51               	btfsc	(dtoa@i+1)^0,7,c
  6948   003512  EF93  F01A         	goto	u8041
  6949   003516  5051               	movf	(dtoa@i+1)^0,w,c
  6950   003518  E108               	bnz	u8040
  6951   00351A  0450               	decf	dtoa@i^0,w,c
  6952   00351C  A0D8               	btfss	status,0,c
  6953   00351E  EF93  F01A         	goto	u8041
  6954   003522  EF95  F01A         	goto	u8040
  6955   003526                     u8041:
  6956   003526  EFC5  F01A         	goto	l6734
  6957   00352A                     u8040:
  6958   00352A  5047               	movf	dtoa@n^0,w,c
  6959   00352C  1048               	iorwf	(dtoa@n+1)^0,w,c
  6960   00352E  1049               	iorwf	(dtoa@n+2)^0,w,c
  6961   003530  104A               	iorwf	(dtoa@n+3)^0,w,c
  6962   003532  104B               	iorwf	(dtoa@n+4)^0,w,c
  6963   003534  104C               	iorwf	(dtoa@n+5)^0,w,c
  6964   003536  104D               	iorwf	(dtoa@n+6)^0,w,c
  6965   003538  104E               	iorwf	(dtoa@n+7)^0,w,c
  6966   00353A  A4D8               	btfss	status,2,c
  6967   00353C  EFA2  F01A         	goto	u8051
  6968   003540  EFA4  F01A         	goto	u8050
  6969   003544                     u8051:
  6970   003544  EF0C  F01A         	goto	l6714
  6971   003548                     u8050:
  6972   003548  BE44               	btfsc	(dtoa@p+1)^0,7,c
  6973   00354A  EFB1  F01A         	goto	u8060
  6974   00354E  5044               	movf	(dtoa@p+1)^0,w,c
  6975   003550  E106               	bnz	u8061
  6976   003552  0443               	decf	dtoa@p^0,w,c
  6977   003554  B0D8               	btfsc	status,0,c
  6978   003556  EFAF  F01A         	goto	u8061
  6979   00355A  EFB1  F01A         	goto	u8060
  6980   00355E                     u8061:
  6981   00355E  EF0C  F01A         	goto	l6714
  6982   003562                     u8060:
  6983   003562  BE46               	btfsc	(dtoa@w+1)^0,7,c
  6984   003564  EFBC  F01A         	goto	u8071
  6985   003568  5046               	movf	(dtoa@w+1)^0,w,c
  6986   00356A  E108               	bnz	u8070
  6987   00356C  0445               	decf	dtoa@w^0,w,c
  6988   00356E  A0D8               	btfss	status,0,c
  6989   003570  EFBC  F01A         	goto	u8071
  6990   003574  EFBE  F01A         	goto	u8070
  6991   003578                     u8071:
  6992   003578  EFC5  F01A         	goto	l6734
  6993   00357C                     u8070:
  6994   00357C  B269               	btfsc	_flags^0,1,c
  6995   00357E  EFC3  F01A         	goto	u8081
  6996   003582  EFC5  F01A         	goto	u8080
  6997   003586                     u8081:
  6998   003586  EF0C  F01A         	goto	l6714
  6999   00358A                     u8080:
  7000   00358A                     l6734:
  7001                           
  7002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  7003   00358A  504F               	movf	dtoa@s^0,w,c
  7004   00358C  B4D8               	btfsc	status,2,c
  7005   00358E  EFCB  F01A         	goto	u8091
  7006   003592  EFCD  F01A         	goto	u8090
  7007   003596                     u8091:
  7008   003596  EFD8  F01A         	goto	l6740
  7009   00359A                     u8090:
  7010   00359A                     
  7011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  7012   00359A  0650               	decf	dtoa@i^0,f,c
  7013   00359C  A0D8               	btfss	status,0,c
  7014   00359E  0651               	decf	(dtoa@i+1)^0,f,c
  7015   0035A0                     
  7016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  7017   0035A0  0E0E               	movlw	low _dbuf
  7018   0035A2  2450               	addwf	dtoa@i^0,w,c
  7019   0035A4  6ED9               	movwf	fsr2l,c
  7020   0035A6  0E01               	movlw	high _dbuf
  7021   0035A8  2051               	addwfc	(dtoa@i+1)^0,w,c
  7022   0035AA  6EDA               	movwf	fsr2h,c
  7023   0035AC  C04F  FFDF         	movff	dtoa@s,indf2
  7024   0035B0                     l6740:
  7025                           
  7026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7027   0035B0  C02F  F024         	movff	dtoa@fp,pad@fp
  7028   0035B4  C030  F025         	movff	dtoa@fp+1,pad@fp+1
  7029   0035B8  0E0E               	movlw	low _dbuf
  7030   0035BA  2450               	addwf	dtoa@i^0,w,c
  7031   0035BC  6E26               	movwf	pad@buf^0,c
  7032   0035BE  0E01               	movlw	high _dbuf
  7033   0035C0  2051               	addwfc	(dtoa@i+1)^0,w,c
  7034   0035C2  6E27               	movwf	(pad@buf+1)^0,c
  7035   0035C4  C045  F028         	movff	dtoa@w,pad@p
  7036   0035C8  C046  F029         	movff	dtoa@w+1,pad@p+1
  7037   0035CC  EC6C  F026         	call	_pad	;wreg free
  7038   0035D0  0012               	return		;funcret
  7039   0035D2                     __end_of_dtoa:
  7040                           	callstack 0
  7041                           
  7042 ;; *************** function _pad *****************
  7043 ;; Defined at:
  7044 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  7047 ;;		 -> sprintf@f(11), 
  7048 ;;  buf             2   37[COMRAM] PTR unsigned char 
  7049 ;;		 -> dbuf(80), 
  7050 ;;  p               2   39[COMRAM] int 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  w               2   44[COMRAM] int 
  7053 ;;  i               2   42[COMRAM] int 
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  1    wreg      void 
  7056 ;; Registers used:
  7057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7063 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;Total ram usage:       11 bytes
  7068 ;; Hardware stack levels used: 1
  7069 ;; Hardware stack levels required when called: 6
  7070 ;; This function calls:
  7071 ;;		_fputc
  7072 ;;		_fputs
  7073 ;; This function is called by:
  7074 ;;		_dtoa
  7075 ;;		_efgtoa
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text19
  7080   004CD8                     __ptext19:
  7081                           	callstack 0
  7082   004CD8                     _pad:
  7083                           	callstack 20
  7084   004CD8                     
  7085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  7086   004CD8  A069               	btfss	_flags^0,0,c
  7087   004CDA  EF71  F026         	goto	u7661
  7088   004CDE  EF73  F026         	goto	u7660
  7089   004CE2                     u7661:
  7090   004CE2  EF7D  F026         	goto	l6570
  7091   004CE6                     u7660:
  7092   004CE6                     
  7093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  7094   004CE6  C026  F01D         	movff	pad@buf,fputs@s
  7095   004CEA  C027  F01E         	movff	pad@buf+1,fputs@s+1
  7096   004CEE  C024  F01F         	movff	pad@fp,fputs@fp
  7097   004CF2  C025  F020         	movff	pad@fp+1,fputs@fp+1
  7098   004CF6  EC70  F02A         	call	_fputs	;wreg free
  7099   004CFA                     l6570:
  7100                           
  7101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  7102   004CFA  BE29               	btfsc	(pad@p+1)^0,7,c
  7103   004CFC  EF82  F026         	goto	u7671
  7104   004D00  EF84  F026         	goto	u7670
  7105   004D04                     u7671:
  7106   004D04  EF8A  F026         	goto	l6574
  7107   004D08                     u7670:
  7108   004D08  C028  F02D         	movff	pad@p,pad@w
  7109   004D0C  C029  F02E         	movff	pad@p+1,pad@w+1
  7110   004D10  EF8E  F026         	goto	l1036
  7111   004D14                     l6574:
  7112   004D14  0E00               	movlw	0
  7113   004D16  6E2E               	movwf	(pad@w+1)^0,c
  7114   004D18  0E00               	movlw	0
  7115   004D1A  6E2D               	movwf	pad@w^0,c
  7116   004D1C                     l1036:
  7117                           
  7118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  7119   004D1C  0E00               	movlw	0
  7120   004D1E  6E2C               	movwf	(pad@i+1)^0,c
  7121   004D20  0E00               	movlw	0
  7122   004D22  6E2B               	movwf	pad@i^0,c
  7123                           
  7124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7125   004D24  EFA0  F026         	goto	l6580
  7126   004D28                     l6576:
  7127                           
  7128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  7129   004D28  0E00               	movlw	0
  7130   004D2A  6E15               	movwf	(fputc@c+1)^0,c
  7131   004D2C  0E20               	movlw	32
  7132   004D2E  6E14               	movwf	fputc@c^0,c
  7133   004D30  C024  F016         	movff	pad@fp,fputc@fp
  7134   004D34  C025  F017         	movff	pad@fp+1,fputc@fp+1
  7135   004D38  EC8A  F024         	call	_fputc	;wreg free
  7136   004D3C                     
  7137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  7138   004D3C  4A2B               	infsnz	pad@i^0,f,c
  7139   004D3E  2A2C               	incf	(pad@i+1)^0,f,c
  7140   004D40                     l6580:
  7141                           
  7142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7143   004D40  502D               	movf	pad@w^0,w,c
  7144   004D42  5C2B               	subwf	pad@i^0,w,c
  7145   004D44  502C               	movf	(pad@i+1)^0,w,c
  7146   004D46  0A80               	xorlw	128
  7147   004D48  6E2A               	movwf	??_pad^0,c
  7148   004D4A  502E               	movf	(pad@w+1)^0,w,c
  7149   004D4C  0A80               	xorlw	128
  7150   004D4E  582A               	subwfb	??_pad^0,w,c
  7151   004D50  A0D8               	btfss	status,0,c
  7152   004D52  EFAD  F026         	goto	u7681
  7153   004D56  EFAF  F026         	goto	u7680
  7154   004D5A                     u7681:
  7155   004D5A  EF94  F026         	goto	l6576
  7156   004D5E                     u7680:
  7157   004D5E                     
  7158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  7159   004D5E  B069               	btfsc	_flags^0,0,c
  7160   004D60  EFB4  F026         	goto	u7691
  7161   004D64  EFB6  F026         	goto	u7690
  7162   004D68                     u7691:
  7163   004D68  EFC0  F026         	goto	l1041
  7164   004D6C                     u7690:
  7165   004D6C                     
  7166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  7167   004D6C  C026  F01D         	movff	pad@buf,fputs@s
  7168   004D70  C027  F01E         	movff	pad@buf+1,fputs@s+1
  7169   004D74  C024  F01F         	movff	pad@fp,fputs@fp
  7170   004D78  C025  F020         	movff	pad@fp+1,fputs@fp+1
  7171   004D7C  EC70  F02A         	call	_fputs	;wreg free
  7172   004D80                     l1041:
  7173   004D80  0012               	return		;funcret
  7174   004D82                     __end_of_pad:
  7175                           	callstack 0
  7176                           
  7177 ;; *************** function _fputs *****************
  7178 ;; Defined at:
  7179 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  s               2   28[COMRAM] PTR const unsigned char 
  7182 ;;		 -> dbuf(80), 
  7183 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  7184 ;;		 -> sprintf@f(11), 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  i               2   33[COMRAM] int 
  7187 ;;  c               1   32[COMRAM] unsigned char 
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  2   28[COMRAM] int 
  7190 ;; Registers used:
  7191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7198 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7200 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7201 ;;Total ram usage:        7 bytes
  7202 ;; Hardware stack levels used: 1
  7203 ;; Hardware stack levels required when called: 5
  7204 ;; This function calls:
  7205 ;;		_fputc
  7206 ;; This function is called by:
  7207 ;;		_pad
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           	psect	text20
  7212   0054E0                     __ptext20:
  7213                           	callstack 0
  7214   0054E0                     _fputs:
  7215                           	callstack 20
  7216   0054E0  0E00               	movlw	0
  7217   0054E2  6E23               	movwf	(fputs@i+1)^0,c
  7218   0054E4  0E00               	movlw	0
  7219   0054E6  6E22               	movwf	fputs@i^0,c
  7220   0054E8  EF81  F02A         	goto	l6114
  7221   0054EC                     l6110:
  7222   0054EC  C021  F014         	movff	fputs@c,fputc@c
  7223   0054F0  6A15               	clrf	(fputc@c+1)^0,c
  7224   0054F2  C01F  F016         	movff	fputs@fp,fputc@fp
  7225   0054F6  C020  F017         	movff	fputs@fp+1,fputc@fp+1
  7226   0054FA  EC8A  F024         	call	_fputc	;wreg free
  7227   0054FE  4A22               	infsnz	fputs@i^0,f,c
  7228   005500  2A23               	incf	(fputs@i+1)^0,f,c
  7229   005502                     l6114:
  7230   005502  5022               	movf	fputs@i^0,w,c
  7231   005504  241D               	addwf	fputs@s^0,w,c
  7232   005506  6ED9               	movwf	fsr2l,c
  7233   005508  5023               	movf	(fputs@i+1)^0,w,c
  7234   00550A  201E               	addwfc	(fputs@s+1)^0,w,c
  7235   00550C  6EDA               	movwf	fsr2h,c
  7236   00550E  50DF               	movf	indf2,w,c
  7237   005510  6E21               	movwf	fputs@c^0,c
  7238   005512  5021               	movf	fputs@c^0,w,c
  7239   005514  A4D8               	btfss	status,2,c
  7240   005516  EF8F  F02A         	goto	u6941
  7241   00551A  EF91  F02A         	goto	u6940
  7242   00551E                     u6941:
  7243   00551E  EF76  F02A         	goto	l6110
  7244   005522                     u6940:
  7245   005522  0012               	return		;funcret
  7246   005524                     __end_of_fputs:
  7247                           	callstack 0
  7248                           
  7249 ;; *************** function _fputc *****************
  7250 ;; Defined at:
  7251 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  c               2   19[COMRAM] int 
  7254 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  7255 ;;		 -> sprintf@f(11), 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  2   19[COMRAM] int 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;Total ram usage:        9 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; Hardware stack levels required when called: 4
  7274 ;; This function calls:
  7275 ;;		_putch
  7276 ;; This function is called by:
  7277 ;;		_pad
  7278 ;;		_stoa
  7279 ;;		_vfpfcnvrt
  7280 ;;		_fputs
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           	psect	text21
  7285   004914                     __ptext21:
  7286                           	callstack 0
  7287   004914                     _fputc:
  7288                           	callstack 22
  7289   004914  5016               	movf	fputc@fp^0,w,c
  7290   004916  1017               	iorwf	(fputc@fp+1)^0,w,c
  7291   004918  B4D8               	btfsc	status,2,c
  7292   00491A  EF91  F024         	goto	u6511
  7293   00491E  EF93  F024         	goto	u6510
  7294   004922                     u6511:
  7295   004922  EF9C  F024         	goto	l5896
  7296   004926                     u6510:
  7297   004926  5016               	movf	fputc@fp^0,w,c
  7298   004928  1017               	iorwf	(fputc@fp+1)^0,w,c
  7299   00492A  A4D8               	btfss	status,2,c
  7300   00492C  EF9A  F024         	goto	u6521
  7301   004930  EF9C  F024         	goto	u6520
  7302   004934                     u6521:
  7303   004934  EFA1  F024         	goto	l5898
  7304   004938                     u6520:
  7305   004938                     l5896:
  7306   004938  5014               	movf	fputc@c^0,w,c
  7307   00493A  ECC7  F02B         	call	_putch
  7308   00493E  EFEE  F024         	goto	l1298
  7309   004942                     l5898:
  7310   004942  EE20 F009          	lfsr	2,9
  7311   004946  5016               	movf	fputc@fp^0,w,c
  7312   004948  26D9               	addwf	fsr2l,f,c
  7313   00494A  5017               	movf	(fputc@fp+1)^0,w,c
  7314   00494C  22DA               	addwfc	fsr2h,f,c
  7315   00494E  50DE               	movf	postinc2,w,c
  7316   004950  10DE               	iorwf	postinc2,w,c
  7317   004952  B4D8               	btfsc	status,2,c
  7318   004954  EFAE  F024         	goto	u6531
  7319   004958  EFB0  F024         	goto	u6530
  7320   00495C                     u6531:
  7321   00495C  EFCB  F024         	goto	l5902
  7322   004960                     u6530:
  7323   004960  EE20 F009          	lfsr	2,9
  7324   004964  5016               	movf	fputc@fp^0,w,c
  7325   004966  26D9               	addwf	fsr2l,f,c
  7326   004968  5017               	movf	(fputc@fp+1)^0,w,c
  7327   00496A  22DA               	addwfc	fsr2h,f,c
  7328   00496C  EE10 F003          	lfsr	1,3
  7329   004970  5016               	movf	fputc@fp^0,w,c
  7330   004972  26E1               	addwf	fsr1l,f,c
  7331   004974  5017               	movf	(fputc@fp+1)^0,w,c
  7332   004976  22E2               	addwfc	fsr1h,f,c
  7333   004978  50DE               	movf	postinc2,w,c
  7334   00497A  5CE6               	subwf	postinc1,w,c
  7335   00497C  50E6               	movf	postinc1,w,c
  7336   00497E  0A80               	xorlw	128
  7337   004980  6E1C               	movwf	(??_fputc+4)^0,c
  7338   004982  50DE               	movf	postinc2,w,c
  7339   004984  0A80               	xorlw	128
  7340   004986  581C               	subwfb	(??_fputc+4)^0,w,c
  7341   004988  B0D8               	btfsc	status,0,c
  7342   00498A  EFC9  F024         	goto	u6541
  7343   00498E  EFCB  F024         	goto	u6540
  7344   004992                     u6541:
  7345   004992  EFEE  F024         	goto	l1298
  7346   004996                     u6540:
  7347   004996                     l5902:
  7348   004996  EE20 F003          	lfsr	2,3
  7349   00499A  5016               	movf	fputc@fp^0,w,c
  7350   00499C  26D9               	addwf	fsr2l,f,c
  7351   00499E  5017               	movf	(fputc@fp+1)^0,w,c
  7352   0049A0  22DA               	addwfc	fsr2h,f,c
  7353   0049A2  CFDE F018          	movff	postinc2,??_fputc
  7354   0049A6  CFDD F019          	movff	postdec2,??_fputc+1
  7355   0049AA  C016  FFD9         	movff	fputc@fp,fsr2l
  7356   0049AE  C017  FFDA         	movff	fputc@fp+1,fsr2h
  7357   0049B2  CFDE F01A          	movff	postinc2,??_fputc+2
  7358   0049B6  CFDD F01B          	movff	postdec2,??_fputc+3
  7359   0049BA  5018               	movf	??_fputc^0,w,c
  7360   0049BC  241A               	addwf	(??_fputc+2)^0,w,c
  7361   0049BE  6ED9               	movwf	fsr2l,c
  7362   0049C0  5019               	movf	(??_fputc+1)^0,w,c
  7363   0049C2  201B               	addwfc	(??_fputc+3)^0,w,c
  7364   0049C4  6EDA               	movwf	fsr2h,c
  7365   0049C6  C014  FFDF         	movff	fputc@c,indf2
  7366   0049CA  EE20 F003          	lfsr	2,3
  7367   0049CE  5016               	movf	fputc@fp^0,w,c
  7368   0049D0  26D9               	addwf	fsr2l,f,c
  7369   0049D2  5017               	movf	(fputc@fp+1)^0,w,c
  7370   0049D4  22DA               	addwfc	fsr2h,f,c
  7371   0049D6  2ADE               	incf	postinc2,f,c
  7372   0049D8  0E00               	movlw	0
  7373   0049DA  22DD               	addwfc	postdec2,f,c
  7374   0049DC                     l1298:
  7375   0049DC  0012               	return		;funcret
  7376   0049DE                     __end_of_fputc:
  7377                           	callstack 0
  7378                           
  7379 ;; *************** function _putch *****************
  7380 ;; Defined at:
  7381 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  c               1    wreg     unsigned char 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  c               1    0[COMRAM] unsigned char 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		wreg
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;Total ram usage:        0 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; Hardware stack levels required when called: 3
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_fputc
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text22
  7410   00578E                     __ptext22:
  7411                           	callstack 0
  7412   00578E                     _putch:
  7413                           	callstack 22
  7414   00578E  0012               	return		;funcret
  7415   005790                     __end_of_putch:
  7416                           	callstack 0
  7417                           
  7418 ;; *************** function _abs *****************
  7419 ;; Defined at:
  7420 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;  a               2   37[COMRAM] int 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  2   37[COMRAM] int 
  7427 ;; Registers used:
  7428 ;;		wreg, status,2, status,0
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;Total ram usage:        4 bytes
  7439 ;; Hardware stack levels used: 1
  7440 ;; Hardware stack levels required when called: 3
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_dtoa
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text23
  7449   0055A8                     __ptext23:
  7450                           	callstack 0
  7451   0055A8                     _abs:
  7452                           	callstack 23
  7453   0055A8  BE27               	btfsc	(abs@a+1)^0,7,c
  7454   0055AA  EFE1  F02A         	goto	u7700
  7455   0055AE  5027               	movf	(abs@a+1)^0,w,c
  7456   0055B0  E106               	bnz	u7701
  7457   0055B2  0426               	decf	abs@a^0,w,c
  7458   0055B4  B0D8               	btfsc	status,0,c
  7459   0055B6  EFDF  F02A         	goto	u7701
  7460   0055BA  EFE1  F02A         	goto	u7700
  7461   0055BE                     u7701:
  7462   0055BE  EFEF  F02A         	goto	l1218
  7463   0055C2                     u7700:
  7464   0055C2  C026  F028         	movff	abs@a,??_abs
  7465   0055C6  C027  F029         	movff	abs@a+1,??_abs+1
  7466   0055CA  1E28               	comf	??_abs^0,f,c
  7467   0055CC  1E29               	comf	(??_abs+1)^0,f,c
  7468   0055CE  4A28               	infsnz	??_abs^0,f,c
  7469   0055D0  2A29               	incf	(??_abs+1)^0,f,c
  7470   0055D2  C028  F026         	movff	??_abs,?_abs
  7471   0055D6  C029  F027         	movff	??_abs+1,?_abs+1
  7472   0055DA  EFF3  F02A         	goto	l1221
  7473   0055DE                     l1218:
  7474   0055DE  C026  F026         	movff	abs@a,?_abs
  7475   0055E2  C027  F027         	movff	abs@a+1,?_abs+1
  7476   0055E6                     l1221:
  7477   0055E6  0012               	return		;funcret
  7478   0055E8                     __end_of_abs:
  7479                           	callstack 0
  7480                           
  7481 ;; *************** function ___aomod *****************
  7482 ;; Defined at:
  7483 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  dividend        8   19[COMRAM] long long 
  7486 ;;  divisor         8   27[COMRAM] long long 
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;  sign            1   36[COMRAM] unsigned char 
  7489 ;;  counter         1   35[COMRAM] unsigned char 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  8   19[COMRAM] long long 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7499 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7502 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;Total ram usage:       18 bytes
  7504 ;; Hardware stack levels used: 1
  7505 ;; Hardware stack levels required when called: 3
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_dtoa
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text24
  7514   003F16                     __ptext24:
  7515                           	callstack 0
  7516   003F16                     ___aomod:
  7517                           	callstack 23
  7518   003F16  0E00               	movlw	0
  7519   003F18  6E25               	movwf	___aomod@sign^0,c
  7520   003F1A  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  7521   003F1C  EF94  F01F         	goto	u7020
  7522   003F20  EF92  F01F         	goto	u7021
  7523   003F24                     u7021:
  7524   003F24  EFA6  F01F         	goto	l6174
  7525   003F28                     u7020:
  7526   003F28  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  7527   003F2A  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  7528   003F2C  1E19               	comf	(___aomod@dividend+5)^0,f,c
  7529   003F2E  1E18               	comf	(___aomod@dividend+4)^0,f,c
  7530   003F30  1E17               	comf	(___aomod@dividend+3)^0,f,c
  7531   003F32  1E16               	comf	(___aomod@dividend+2)^0,f,c
  7532   003F34  1E15               	comf	(___aomod@dividend+1)^0,f,c
  7533   003F36  6C14               	negf	___aomod@dividend^0,c
  7534   003F38  0E00               	movlw	0
  7535   003F3A  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  7536   003F3C  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  7537   003F3E  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  7538   003F40  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  7539   003F42  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  7540   003F44  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  7541   003F46  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  7542   003F48  0E01               	movlw	1
  7543   003F4A  6E25               	movwf	___aomod@sign^0,c
  7544   003F4C                     l6174:
  7545   003F4C  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  7546   003F4E  EFAD  F01F         	goto	u7030
  7547   003F52  EFAB  F01F         	goto	u7031
  7548   003F56                     u7031:
  7549   003F56  EFBD  F01F         	goto	l6178
  7550   003F5A                     u7030:
  7551   003F5A  1E23               	comf	(___aomod@divisor+7)^0,f,c
  7552   003F5C  1E22               	comf	(___aomod@divisor+6)^0,f,c
  7553   003F5E  1E21               	comf	(___aomod@divisor+5)^0,f,c
  7554   003F60  1E20               	comf	(___aomod@divisor+4)^0,f,c
  7555   003F62  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  7556   003F64  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  7557   003F66  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  7558   003F68  6C1C               	negf	___aomod@divisor^0,c
  7559   003F6A  0E00               	movlw	0
  7560   003F6C  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  7561   003F6E  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  7562   003F70  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  7563   003F72  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  7564   003F74  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  7565   003F76  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  7566   003F78  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  7567   003F7A                     l6178:
  7568   003F7A  501C               	movf	___aomod@divisor^0,w,c
  7569   003F7C  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  7570   003F7E  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  7571   003F80  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  7572   003F82  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  7573   003F84  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  7574   003F86  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  7575   003F88  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  7576   003F8A  B4D8               	btfsc	status,2,c
  7577   003F8C  EFCA  F01F         	goto	u7041
  7578   003F90  EFCC  F01F         	goto	u7040
  7579   003F94                     u7041:
  7580   003F94  EF14  F020         	goto	l6194
  7581   003F98                     u7040:
  7582   003F98  0E01               	movlw	1
  7583   003F9A  6E24               	movwf	___aomod@counter^0,c
  7584   003F9C  EFDA  F01F         	goto	l6184
  7585   003FA0                     l6182:
  7586   003FA0  90D8               	bcf	status,0,c
  7587   003FA2  361C               	rlcf	___aomod@divisor^0,f,c
  7588   003FA4  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  7589   003FA6  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  7590   003FA8  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  7591   003FAA  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  7592   003FAC  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  7593   003FAE  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  7594   003FB0  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  7595   003FB2  2A24               	incf	___aomod@counter^0,f,c
  7596   003FB4                     l6184:
  7597   003FB4  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  7598   003FB6  EFDF  F01F         	goto	u7051
  7599   003FBA  EFE1  F01F         	goto	u7050
  7600   003FBE                     u7051:
  7601   003FBE  EFD0  F01F         	goto	l6182
  7602   003FC2                     u7050:
  7603   003FC2                     l6186:
  7604   003FC2  501C               	movf	___aomod@divisor^0,w,c
  7605   003FC4  5C14               	subwf	___aomod@dividend^0,w,c
  7606   003FC6  501D               	movf	(___aomod@divisor+1)^0,w,c
  7607   003FC8  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  7608   003FCA  501E               	movf	(___aomod@divisor+2)^0,w,c
  7609   003FCC  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  7610   003FCE  501F               	movf	(___aomod@divisor+3)^0,w,c
  7611   003FD0  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  7612   003FD2  5020               	movf	(___aomod@divisor+4)^0,w,c
  7613   003FD4  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  7614   003FD6  5021               	movf	(___aomod@divisor+5)^0,w,c
  7615   003FD8  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  7616   003FDA  5022               	movf	(___aomod@divisor+6)^0,w,c
  7617   003FDC  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  7618   003FDE  5023               	movf	(___aomod@divisor+7)^0,w,c
  7619   003FE0  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  7620   003FE2  A0D8               	btfss	status,0,c
  7621   003FE4  EFF6  F01F         	goto	u7061
  7622   003FE8  EFF8  F01F         	goto	u7060
  7623   003FEC                     u7061:
  7624   003FEC  EF08  F020         	goto	l6190
  7625   003FF0                     u7060:
  7626   003FF0  501C               	movf	___aomod@divisor^0,w,c
  7627   003FF2  5E14               	subwf	___aomod@dividend^0,f,c
  7628   003FF4  501D               	movf	(___aomod@divisor+1)^0,w,c
  7629   003FF6  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  7630   003FF8  501E               	movf	(___aomod@divisor+2)^0,w,c
  7631   003FFA  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  7632   003FFC  501F               	movf	(___aomod@divisor+3)^0,w,c
  7633   003FFE  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  7634   004000  5020               	movf	(___aomod@divisor+4)^0,w,c
  7635   004002  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  7636   004004  5021               	movf	(___aomod@divisor+5)^0,w,c
  7637   004006  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  7638   004008  5022               	movf	(___aomod@divisor+6)^0,w,c
  7639   00400A  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  7640   00400C  5023               	movf	(___aomod@divisor+7)^0,w,c
  7641   00400E  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  7642   004010                     l6190:
  7643   004010  90D8               	bcf	status,0,c
  7644   004012  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  7645   004014  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  7646   004016  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  7647   004018  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  7648   00401A  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  7649   00401C  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  7650   00401E  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  7651   004020  321C               	rrcf	___aomod@divisor^0,f,c
  7652   004022  2E24               	decfsz	___aomod@counter^0,f,c
  7653   004024  EFE1  F01F         	goto	l6186
  7654   004028                     l6194:
  7655   004028  5025               	movf	___aomod@sign^0,w,c
  7656   00402A  B4D8               	btfsc	status,2,c
  7657   00402C  EF1A  F020         	goto	u7071
  7658   004030  EF1C  F020         	goto	u7070
  7659   004034                     u7071:
  7660   004034  EF2C  F020         	goto	l6198
  7661   004038                     u7070:
  7662   004038  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  7663   00403A  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  7664   00403C  1E19               	comf	(___aomod@dividend+5)^0,f,c
  7665   00403E  1E18               	comf	(___aomod@dividend+4)^0,f,c
  7666   004040  1E17               	comf	(___aomod@dividend+3)^0,f,c
  7667   004042  1E16               	comf	(___aomod@dividend+2)^0,f,c
  7668   004044  1E15               	comf	(___aomod@dividend+1)^0,f,c
  7669   004046  6C14               	negf	___aomod@dividend^0,c
  7670   004048  0E00               	movlw	0
  7671   00404A  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  7672   00404C  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  7673   00404E  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  7674   004050  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  7675   004052  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  7676   004054  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  7677   004056  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  7678   004058                     l6198:
  7679   004058  C014  F014         	movff	___aomod@dividend,?___aomod
  7680   00405C  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  7681   004060  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  7682   004064  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  7683   004068  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  7684   00406C  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  7685   004070  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  7686   004074  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  7687   004078  0012               	return		;funcret
  7688   00407A                     __end_of___aomod:
  7689                           	callstack 0
  7690                           
  7691 ;; *************** function ___aodiv *****************
  7692 ;; Defined at:
  7693 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  dividend        8   19[COMRAM] long long 
  7696 ;;  divisor         8   27[COMRAM] long long 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  quotient        8   37[COMRAM] long long 
  7699 ;;  sign            1   36[COMRAM] unsigned char 
  7700 ;;  counter         1   35[COMRAM] unsigned char 
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  8   19[COMRAM] long long 
  7703 ;; Registers used:
  7704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7710 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7711 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;Total ram usage:       26 bytes
  7715 ;; Hardware stack levels used: 1
  7716 ;; Hardware stack levels required when called: 3
  7717 ;; This function calls:
  7718 ;;		Nothing
  7719 ;; This function is called by:
  7720 ;;		_dtoa
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text25
  7725   003D8E                     __ptext25:
  7726                           	callstack 0
  7727   003D8E                     ___aodiv:
  7728                           	callstack 23
  7729   003D8E  0E00               	movlw	0
  7730   003D90  6E25               	movwf	___aodiv@sign^0,c
  7731   003D92  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  7732   003D94  EFD0  F01E         	goto	u6950
  7733   003D98  EFCE  F01E         	goto	u6951
  7734   003D9C                     u6951:
  7735   003D9C  EFE2  F01E         	goto	l6130
  7736   003DA0                     u6950:
  7737   003DA0  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  7738   003DA2  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  7739   003DA4  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  7740   003DA6  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  7741   003DA8  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  7742   003DAA  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  7743   003DAC  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  7744   003DAE  6C1C               	negf	___aodiv@divisor^0,c
  7745   003DB0  0E00               	movlw	0
  7746   003DB2  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  7747   003DB4  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  7748   003DB6  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  7749   003DB8  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  7750   003DBA  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  7751   003DBC  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  7752   003DBE  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  7753   003DC0  0E01               	movlw	1
  7754   003DC2  6E25               	movwf	___aodiv@sign^0,c
  7755   003DC4                     l6130:
  7756   003DC4  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  7757   003DC6  EFE9  F01E         	goto	u6960
  7758   003DCA  EFE7  F01E         	goto	u6961
  7759   003DCE                     u6961:
  7760   003DCE  EFFB  F01E         	goto	l6136
  7761   003DD2                     u6960:
  7762   003DD2  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  7763   003DD4  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  7764   003DD6  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  7765   003DD8  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  7766   003DDA  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  7767   003DDC  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  7768   003DDE  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  7769   003DE0  6C14               	negf	___aodiv@dividend^0,c
  7770   003DE2  0E00               	movlw	0
  7771   003DE4  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  7772   003DE6  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  7773   003DE8  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  7774   003DEA  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  7775   003DEC  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  7776   003DEE  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  7777   003DF0  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  7778   003DF2  0E01               	movlw	1
  7779   003DF4  1A25               	xorwf	___aodiv@sign^0,f,c
  7780   003DF6                     l6136:
  7781   003DF6  EE20  F026         	lfsr	2,___aodiv@quotient
  7782   003DFA  0E07               	movlw	7
  7783   003DFC                     u6971:
  7784   003DFC  6ADE               	clrf	postinc2,c
  7785   003DFE  06E8               	decf	wreg,f,c
  7786   003E00  E2FD               	bc	u6971
  7787   003E02  501C               	movf	___aodiv@divisor^0,w,c
  7788   003E04  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  7789   003E06  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  7790   003E08  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  7791   003E0A  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  7792   003E0C  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  7793   003E0E  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  7794   003E10  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  7795   003E12  B4D8               	btfsc	status,2,c
  7796   003E14  EF0E  F01F         	goto	u6981
  7797   003E18  EF10  F01F         	goto	u6980
  7798   003E1C                     u6981:
  7799   003E1C  EF62  F01F         	goto	l6158
  7800   003E20                     u6980:
  7801   003E20  0E01               	movlw	1
  7802   003E22  6E24               	movwf	___aodiv@counter^0,c
  7803   003E24  EF1E  F01F         	goto	l6144
  7804   003E28                     l6142:
  7805   003E28  90D8               	bcf	status,0,c
  7806   003E2A  361C               	rlcf	___aodiv@divisor^0,f,c
  7807   003E2C  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  7808   003E2E  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  7809   003E30  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  7810   003E32  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  7811   003E34  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  7812   003E36  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  7813   003E38  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  7814   003E3A  2A24               	incf	___aodiv@counter^0,f,c
  7815   003E3C                     l6144:
  7816   003E3C  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  7817   003E3E  EF23  F01F         	goto	u6991
  7818   003E42  EF25  F01F         	goto	u6990
  7819   003E46                     u6991:
  7820   003E46  EF14  F01F         	goto	l6142
  7821   003E4A                     u6990:
  7822   003E4A                     l6146:
  7823   003E4A  90D8               	bcf	status,0,c
  7824   003E4C  3626               	rlcf	___aodiv@quotient^0,f,c
  7825   003E4E  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  7826   003E50  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  7827   003E52  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  7828   003E54  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  7829   003E56  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  7830   003E58  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  7831   003E5A  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  7832   003E5C  501C               	movf	___aodiv@divisor^0,w,c
  7833   003E5E  5C14               	subwf	___aodiv@dividend^0,w,c
  7834   003E60  501D               	movf	(___aodiv@divisor+1)^0,w,c
  7835   003E62  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  7836   003E64  501E               	movf	(___aodiv@divisor+2)^0,w,c
  7837   003E66  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  7838   003E68  501F               	movf	(___aodiv@divisor+3)^0,w,c
  7839   003E6A  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  7840   003E6C  5020               	movf	(___aodiv@divisor+4)^0,w,c
  7841   003E6E  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  7842   003E70  5021               	movf	(___aodiv@divisor+5)^0,w,c
  7843   003E72  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  7844   003E74  5022               	movf	(___aodiv@divisor+6)^0,w,c
  7845   003E76  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  7846   003E78  5023               	movf	(___aodiv@divisor+7)^0,w,c
  7847   003E7A  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  7848   003E7C  A0D8               	btfss	status,0,c
  7849   003E7E  EF43  F01F         	goto	u7001
  7850   003E82  EF45  F01F         	goto	u7000
  7851   003E86                     u7001:
  7852   003E86  EF56  F01F         	goto	l6154
  7853   003E8A                     u7000:
  7854   003E8A  501C               	movf	___aodiv@divisor^0,w,c
  7855   003E8C  5E14               	subwf	___aodiv@dividend^0,f,c
  7856   003E8E  501D               	movf	(___aodiv@divisor+1)^0,w,c
  7857   003E90  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  7858   003E92  501E               	movf	(___aodiv@divisor+2)^0,w,c
  7859   003E94  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  7860   003E96  501F               	movf	(___aodiv@divisor+3)^0,w,c
  7861   003E98  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  7862   003E9A  5020               	movf	(___aodiv@divisor+4)^0,w,c
  7863   003E9C  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  7864   003E9E  5021               	movf	(___aodiv@divisor+5)^0,w,c
  7865   003EA0  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  7866   003EA2  5022               	movf	(___aodiv@divisor+6)^0,w,c
  7867   003EA4  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  7868   003EA6  5023               	movf	(___aodiv@divisor+7)^0,w,c
  7869   003EA8  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  7870   003EAA  8026               	bsf	___aodiv@quotient^0,0,c
  7871   003EAC                     l6154:
  7872   003EAC  90D8               	bcf	status,0,c
  7873   003EAE  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  7874   003EB0  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  7875   003EB2  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  7876   003EB4  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  7877   003EB6  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  7878   003EB8  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  7879   003EBA  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  7880   003EBC  321C               	rrcf	___aodiv@divisor^0,f,c
  7881   003EBE  2E24               	decfsz	___aodiv@counter^0,f,c
  7882   003EC0  EF25  F01F         	goto	l6146
  7883   003EC4                     l6158:
  7884   003EC4  5025               	movf	___aodiv@sign^0,w,c
  7885   003EC6  B4D8               	btfsc	status,2,c
  7886   003EC8  EF68  F01F         	goto	u7011
  7887   003ECC  EF6A  F01F         	goto	u7010
  7888   003ED0                     u7011:
  7889   003ED0  EF7A  F01F         	goto	l6162
  7890   003ED4                     u7010:
  7891   003ED4  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  7892   003ED6  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  7893   003ED8  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  7894   003EDA  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  7895   003EDC  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  7896   003EDE  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  7897   003EE0  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  7898   003EE2  6C26               	negf	___aodiv@quotient^0,c
  7899   003EE4  0E00               	movlw	0
  7900   003EE6  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  7901   003EE8  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  7902   003EEA  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  7903   003EEC  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  7904   003EEE  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  7905   003EF0  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  7906   003EF2  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  7907   003EF4                     l6162:
  7908   003EF4  C026  F014         	movff	___aodiv@quotient,?___aodiv
  7909   003EF8  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  7910   003EFC  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  7911   003F00  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  7912   003F04  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  7913   003F08  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  7914   003F0C  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  7915   003F10  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  7916   003F14  0012               	return		;funcret
  7917   003F16                     __end_of___aodiv:
  7918                           	callstack 0
  7919                           
  7920 ;; *************** function _atoi *****************
  7921 ;; Defined at:
  7922 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  s               2   25[COMRAM] PTR const unsigned char 
  7925 ;;		 -> STR_18(6), STR_17(17), STR_11(6), STR_8(6), 
  7926 ;;		 -> STR_7(11), STR_4(6), STR_3(11), STR_2(21), 
  7927 ;;		 -> STR_1(24), 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  n               2   32[COMRAM] int 
  7930 ;;  neg             2   30[COMRAM] int 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  2   25[COMRAM] int 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7941 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;Total ram usage:        9 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; Hardware stack levels required when called: 4
  7947 ;; This function calls:
  7948 ;;		___wmul
  7949 ;;		_isdigit
  7950 ;;		_isspace
  7951 ;; This function is called by:
  7952 ;;		_vfpfcnvrt
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text26
  7957   0041C6                     __ptext26:
  7958                           	callstack 0
  7959   0041C6                     _atoi:
  7960                           	callstack 23
  7961   0041C6  0E00               	movlw	0
  7962   0041C8  6E22               	movwf	(atoi@n+1)^0,c
  7963   0041CA  0E00               	movlw	0
  7964   0041CC  6E21               	movwf	atoi@n^0,c
  7965   0041CE  0E00               	movlw	0
  7966   0041D0  6E20               	movwf	(atoi@neg+1)^0,c
  7967   0041D2  0E00               	movlw	0
  7968   0041D4  6E1F               	movwf	atoi@neg^0,c
  7969   0041D6  EFEF  F020         	goto	l7026
  7970   0041DA                     l7022:
  7971   0041DA  4A1A               	infsnz	atoi@s^0,f,c
  7972   0041DC  2A1B               	incf	(atoi@s+1)^0,f,c
  7973   0041DE                     l7026:
  7974   0041DE  C01A  FFF6         	movff	atoi@s,tblptrl
  7975   0041E2  C01B  FFF7         	movff	atoi@s+1,tblptrh
  7976   0041E6                     	if	0	;tblptru may be non-zero
  7977   0041E6                     	endif
  7978   0041E6                     	if	0	;tblptru may be non-zero
  7979   0041E6                     	endif
  7980   0041E6  0008               	tblrd		*
  7981   0041E8  50F5               	movf	tablat,w,c
  7982   0041EA  0A20               	xorlw	32
  7983   0041EC  B4D8               	btfsc	status,2,c
  7984   0041EE  EFFB  F020         	goto	u8551
  7985   0041F2  EFFD  F020         	goto	u8550
  7986   0041F6                     u8551:
  7987   0041F6  EFED  F020         	goto	l7022
  7988   0041FA                     u8550:
  7989   0041FA  C01A  FFF6         	movff	atoi@s,tblptrl
  7990   0041FE  C01B  FFF7         	movff	atoi@s+1,tblptrh
  7991   004202                     	if	0	;tblptru may be non-zero
  7992   004202                     	endif
  7993   004202                     	if	0	;tblptru may be non-zero
  7994   004202                     	endif
  7995   004202  0008               	tblrd		*
  7996   004204  CFF5 F01C          	movff	tablat,??_atoi
  7997   004208  0EF7               	movlw	247
  7998   00420A  241C               	addwf	??_atoi^0,w,c
  7999   00420C  6E1D               	movwf	(??_atoi+1)^0,c
  8000   00420E  6A1E               	clrf	(??_atoi+2)^0,c
  8001   004210  0EFF               	movlw	255
  8002   004212  221E               	addwfc	(??_atoi+2)^0,f,c
  8003   004214  501E               	movf	(??_atoi+2)^0,w,c
  8004   004216  E109               	bnz	u8560
  8005   004218  0E05               	movlw	5
  8006   00421A  5C1D               	subwf	(??_atoi+1)^0,w,c
  8007   00421C  A0D8               	btfss	status,0,c
  8008   00421E  EF13  F021         	goto	u8561
  8009   004222  EF15  F021         	goto	u8560
  8010   004226                     u8561:
  8011   004226  EFED  F020         	goto	l7022
  8012   00422A                     u8560:
  8013   00422A  EF1F  F021         	goto	l7034
  8014   00422E                     l7030:
  8015   00422E  0E00               	movlw	0
  8016   004230  6E20               	movwf	(atoi@neg+1)^0,c
  8017   004232  0E01               	movlw	1
  8018   004234  6E1F               	movwf	atoi@neg^0,c
  8019   004236                     l7032:
  8020   004236  4A1A               	infsnz	atoi@s^0,f,c
  8021   004238  2A1B               	incf	(atoi@s+1)^0,f,c
  8022   00423A  EF54  F021         	goto	l7042
  8023   00423E                     l7034:
  8024   00423E  C01A  FFF6         	movff	atoi@s,tblptrl
  8025   004242  C01B  FFF7         	movff	atoi@s+1,tblptrh
  8026   004246                     	if	0	;tblptru may be non-zero
  8027   004246                     	endif
  8028   004246                     	if	0	;tblptru may be non-zero
  8029   004246                     	endif
  8030   004246  0008               	tblrd		*
  8031   004248  50F5               	movf	tablat,w,c
  8032   00424A  6E1C               	movwf	??_atoi^0,c
  8033   00424C  6A1D               	clrf	(??_atoi+1)^0,c
  8034                           
  8035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8036                           ; Switch size 1, requested type "simple"
  8037                           ; Number of cases is 1, Range of values is 0 to 0
  8038                           ; switch strategies available:
  8039                           ; Name         Instructions Cycles
  8040                           ; simple_byte            4     3 (average)
  8041                           ;	Chosen strategy is simple_byte
  8042   00424E  501D               	movf	(??_atoi+1)^0,w,c
  8043   004250  0A00               	xorlw	0	; case 0
  8044   004252  B4D8               	btfsc	status,2,c
  8045   004254  EF2E  F021         	goto	l7710
  8046   004258  EF54  F021         	goto	l7042
  8047   00425C                     l7710:
  8048                           
  8049                           ; Switch size 1, requested type "simple"
  8050                           ; Number of cases is 2, Range of values is 43 to 45
  8051                           ; switch strategies available:
  8052                           ; Name         Instructions Cycles
  8053                           ; simple_byte            7     4 (average)
  8054                           ;	Chosen strategy is simple_byte
  8055   00425C  501C               	movf	??_atoi^0,w,c
  8056   00425E  0A2B               	xorlw	43	; case 43
  8057   004260  B4D8               	btfsc	status,2,c
  8058   004262  EF1B  F021         	goto	l7032
  8059   004266  0A06               	xorlw	6	; case 45
  8060   004268  B4D8               	btfsc	status,2,c
  8061   00426A  EF17  F021         	goto	l7030
  8062   00426E  EF54  F021         	goto	l7042
  8063   004272                     l7036:
  8064   004272  C021  F014         	movff	atoi@n,___wmul@multiplier
  8065   004276  C022  F015         	movff	atoi@n+1,___wmul@multiplier+1
  8066   00427A  0E00               	movlw	0
  8067   00427C  6E17               	movwf	(___wmul@multiplicand+1)^0,c
  8068   00427E  0E0A               	movlw	10
  8069   004280  6E16               	movwf	___wmul@multiplicand^0,c
  8070   004282  EC74  F02B         	call	___wmul	;wreg free
  8071   004286  C01A  FFF6         	movff	atoi@s,tblptrl
  8072   00428A  C01B  FFF7         	movff	atoi@s+1,tblptrh
  8073   00428E                     	if	0	;tblptru may be non-zero
  8074   00428E                     	endif
  8075   00428E                     	if	0	;tblptru may be non-zero
  8076   00428E                     	endif
  8077   00428E  0008               	tblrd		*
  8078   004290  50F5               	movf	tablat,w,c
  8079   004292  5E14               	subwf	?___wmul^0,f,c
  8080   004294  0E00               	movlw	0
  8081   004296  5A15               	subwfb	(?___wmul+1)^0,f,c
  8082   004298  0E30               	movlw	48
  8083   00429A  2414               	addwf	?___wmul^0,w,c
  8084   00429C  6E21               	movwf	atoi@n^0,c
  8085   00429E  0E00               	movlw	0
  8086   0042A0  2015               	addwfc	(?___wmul+1)^0,w,c
  8087   0042A2  6E22               	movwf	(atoi@n+1)^0,c
  8088   0042A4  EF1B  F021         	goto	l7032
  8089   0042A8                     l7042:
  8090   0042A8  C01A  FFF6         	movff	atoi@s,tblptrl
  8091   0042AC  C01B  FFF7         	movff	atoi@s+1,tblptrh
  8092   0042B0                     	if	0	;tblptru may be non-zero
  8093   0042B0                     	endif
  8094   0042B0                     	if	0	;tblptru may be non-zero
  8095   0042B0                     	endif
  8096   0042B0  0008               	tblrd		*
  8097   0042B2  CFF5 F01C          	movff	tablat,??_atoi
  8098   0042B6  0ED0               	movlw	208
  8099   0042B8  241C               	addwf	??_atoi^0,w,c
  8100   0042BA  6E1D               	movwf	(??_atoi+1)^0,c
  8101   0042BC  6A1E               	clrf	(??_atoi+2)^0,c
  8102   0042BE  0EFF               	movlw	255
  8103   0042C0  221E               	addwfc	(??_atoi+2)^0,f,c
  8104   0042C2  501E               	movf	(??_atoi+2)^0,w,c
  8105   0042C4  E109               	bnz	u8570
  8106   0042C6  0E0A               	movlw	10
  8107   0042C8  5C1D               	subwf	(??_atoi+1)^0,w,c
  8108   0042CA  A0D8               	btfss	status,0,c
  8109   0042CC  EF6A  F021         	goto	u8571
  8110   0042D0  EF6C  F021         	goto	u8570
  8111   0042D4                     u8571:
  8112   0042D4  EF39  F021         	goto	l7036
  8113   0042D8                     u8570:
  8114   0042D8  501F               	movf	atoi@neg^0,w,c
  8115   0042DA  1020               	iorwf	(atoi@neg+1)^0,w,c
  8116   0042DC  A4D8               	btfss	status,2,c
  8117   0042DE  EF73  F021         	goto	u8581
  8118   0042E2  EF75  F021         	goto	u8580
  8119   0042E6                     u8581:
  8120   0042E6  EF83  F021         	goto	l1243
  8121   0042EA                     u8580:
  8122   0042EA  C021  F01C         	movff	atoi@n,??_atoi
  8123   0042EE  C022  F01D         	movff	atoi@n+1,??_atoi+1
  8124   0042F2  1E1C               	comf	??_atoi^0,f,c
  8125   0042F4  1E1D               	comf	(??_atoi+1)^0,f,c
  8126   0042F6  4A1C               	infsnz	??_atoi^0,f,c
  8127   0042F8  2A1D               	incf	(??_atoi+1)^0,f,c
  8128   0042FA  C01C  F01A         	movff	??_atoi,?_atoi
  8129   0042FE  C01D  F01B         	movff	??_atoi+1,?_atoi+1
  8130   004302  EF87  F021         	goto	l1246
  8131   004306                     l1243:
  8132   004306  C021  F01A         	movff	atoi@n,?_atoi
  8133   00430A  C022  F01B         	movff	atoi@n+1,?_atoi+1
  8134   00430E                     l1246:
  8135   00430E  0012               	return		;funcret
  8136   004310                     __end_of_atoi:
  8137                           	callstack 0
  8138                           
  8139 ;; *************** function _isspace *****************
  8140 ;; Defined at:
  8141 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;  c               2   19[COMRAM] int 
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  2   19[COMRAM] int 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;Total ram usage:        5 bytes
  8160 ;; Hardware stack levels used: 1
  8161 ;; Hardware stack levels required when called: 3
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_atoi
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text27
  8170   00549A                     __ptext27:
  8171                           	callstack 0
  8172   00549A                     _isspace:
  8173                           	callstack 23
  8174   00549A  0E01               	movlw	1
  8175   00549C  6E18               	movwf	_isspace$1575^0,c
  8176   00549E  0E20               	movlw	32
  8177   0054A0  1814               	xorwf	isspace@c^0,w,c
  8178   0054A2  1015               	iorwf	(isspace@c+1)^0,w,c
  8179   0054A4  B4D8               	btfsc	status,2,c
  8180   0054A6  EF57  F02A         	goto	u7951
  8181   0054AA  EF59  F02A         	goto	u7950
  8182   0054AE                     u7951:
  8183   0054AE  EF6C  F02A         	goto	l6680
  8184   0054B2                     u7950:
  8185   0054B2  0EF7               	movlw	247
  8186   0054B4  2414               	addwf	isspace@c^0,w,c
  8187   0054B6  6E16               	movwf	??_isspace^0,c
  8188   0054B8  0EFF               	movlw	255
  8189   0054BA  2015               	addwfc	(isspace@c+1)^0,w,c
  8190   0054BC  6E17               	movwf	(??_isspace+1)^0,c
  8191   0054BE  5017               	movf	(??_isspace+1)^0,w,c
  8192   0054C0  E109               	bnz	u7960
  8193   0054C2  0E05               	movlw	5
  8194   0054C4  5C16               	subwf	??_isspace^0,w,c
  8195   0054C6  A0D8               	btfss	status,0,c
  8196   0054C8  EF68  F02A         	goto	u7961
  8197   0054CC  EF6A  F02A         	goto	u7960
  8198   0054D0                     u7961:
  8199   0054D0  EF6C  F02A         	goto	l6680
  8200   0054D4                     u7960:
  8201   0054D4  0E00               	movlw	0
  8202   0054D6  6E18               	movwf	_isspace$1575^0,c
  8203   0054D8                     l6680:
  8204   0054D8  C018  F014         	movff	_isspace$1575,?_isspace
  8205   0054DC  6A15               	clrf	(?_isspace+1)^0,c
  8206   0054DE  0012               	return		;funcret
  8207   0054E0                     __end_of_isspace:
  8208                           	callstack 0
  8209                           
  8210 ;; *************** function _isdigit *****************
  8211 ;; Defined at:
  8212 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  c               2   19[COMRAM] int 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  2   19[COMRAM] int 
  8219 ;; Registers used:
  8220 ;;		wreg, status,2, status,0
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8229 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8230 ;;Total ram usage:        4 bytes
  8231 ;; Hardware stack levels used: 1
  8232 ;; Hardware stack levels required when called: 3
  8233 ;; This function calls:
  8234 ;;		Nothing
  8235 ;; This function is called by:
  8236 ;;		_vfpfcnvrt
  8237 ;;		_atoi
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           	psect	text28
  8242   0056BC                     __ptext28:
  8243                           	callstack 0
  8244   0056BC                     _isdigit:
  8245                           	callstack 24
  8246   0056BC  0ED0               	movlw	208
  8247   0056BE  2414               	addwf	isdigit@c^0,w,c
  8248   0056C0  6E16               	movwf	??_isdigit^0,c
  8249   0056C2  0EFF               	movlw	255
  8250   0056C4  2015               	addwfc	(isdigit@c+1)^0,w,c
  8251   0056C6  6E17               	movwf	(??_isdigit+1)^0,c
  8252   0056C8  5017               	movf	(??_isdigit+1)^0,w,c
  8253   0056CA  E10A               	bnz	u7930
  8254   0056CC  0E0A               	movlw	10
  8255   0056CE  5C16               	subwf	??_isdigit^0,w,c
  8256   0056D0  A0D8               	btfss	status,0,c
  8257   0056D2  EF6D  F02B         	goto	u7931
  8258   0056D6  EF70  F02B         	goto	u7930
  8259   0056DA                     u7931:
  8260   0056DA  0E01               	movlw	1
  8261   0056DC  EF71  F02B         	goto	u7940
  8262   0056E0                     u7930:
  8263   0056E0  0E00               	movlw	0
  8264   0056E2                     u7940:
  8265   0056E2  6E14               	movwf	?_isdigit^0,c
  8266   0056E4  6A15               	clrf	(?_isdigit+1)^0,c
  8267   0056E6  0012               	return		;funcret
  8268   0056E8                     __end_of_isdigit:
  8269                           	callstack 0
  8270                           
  8271 ;; *************** function _read_adc_voltage *****************
  8272 ;; Defined at:
  8273 ;;		line 180 in file "newfile.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  channel         1    wreg     unsigned char 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  channel         1   72[COMRAM] unsigned char 
  8278 ;;  voltage         4   68[COMRAM] float 
  8279 ;;  raw_value       2   73[COMRAM] int 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  4   64[COMRAM] float 
  8282 ;; Registers used:
  8283 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8293 ;;Total ram usage:       11 bytes
  8294 ;; Hardware stack levels used: 1
  8295 ;; Hardware stack levels required when called: 4
  8296 ;; This function calls:
  8297 ;;		___fldiv
  8298 ;;		___wmul
  8299 ;;		___xxtofl
  8300 ;;		_read_adc_raw_no_lib
  8301 ;; This function is called by:
  8302 ;;		_main
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text29
  8307   004E0A                     __ptext29:
  8308                           	callstack 0
  8309   004E0A                     _read_adc_voltage:
  8310                           	callstack 26
  8311                           
  8312                           ;incstack = 0
  8313                           ;read_adc_voltage@channel stored from wreg
  8314   004E0A  6E49               	movwf	read_adc_voltage@channel^0,c
  8315   004E0C                     
  8316                           ;newfile.c: 181:     int raw_value;;newfile.c: 182:     float voltage;;newfile.c: 183:  
      +                             raw_value = read_adc_raw_no_lib(channel);
  8317   004E0C  5049               	movf	read_adc_voltage@channel^0,w,c
  8318   004E0E  EC92  F02A         	call	_read_adc_raw_no_lib
  8319   004E12  C014  F04A         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  8320   004E16  C015  F04B         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  8321   004E1A                     
  8322                           ;newfile.c: 184:     voltage = (raw_value * 5) / 1023.0;
  8323   004E1A  C04A  F014         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  8324   004E1E  C04B  F015         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  8325   004E22  0E00               	movlw	0
  8326   004E24  6E17               	movwf	(___wmul@multiplicand+1)^0,c
  8327   004E26  0E05               	movlw	5
  8328   004E28  6E16               	movwf	___wmul@multiplicand^0,c
  8329   004E2A  EC74  F02B         	call	___wmul	;wreg free
  8330   004E2E  C014  F01A         	movff	?___wmul,___xxtofl@val
  8331   004E32  C015  F01B         	movff	?___wmul+1,___xxtofl@val+1
  8332   004E36  0E00               	movlw	0
  8333   004E38  BE1B               	btfsc	(___xxtofl@val+1)^0,7,c
  8334   004E3A  0EFF               	movlw	-1
  8335   004E3C  6E1C               	movwf	(___xxtofl@val+2)^0,c
  8336   004E3E  6E1D               	movwf	(___xxtofl@val+3)^0,c
  8337   004E40  0E01               	movlw	1
  8338   004E42  EC24  F01D         	call	___xxtofl
  8339   004E46  C01A  F028         	movff	?___xxtofl,___fldiv@b
  8340   004E4A  C01B  F029         	movff	?___xxtofl+1,___fldiv@b+1
  8341   004E4E  C01C  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  8342   004E52  C01D  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  8343   004E56  0E00               	movlw	0
  8344   004E58  6E2C               	movwf	___fldiv@a^0,c
  8345   004E5A  0EC0               	movlw	192
  8346   004E5C  6E2D               	movwf	(___fldiv@a+1)^0,c
  8347   004E5E  0E7F               	movlw	127
  8348   004E60  6E2E               	movwf	(___fldiv@a+2)^0,c
  8349   004E62  0E44               	movlw	68
  8350   004E64  6E2F               	movwf	(___fldiv@a+3)^0,c
  8351   004E66  ECC2  F017         	call	___fldiv	;wreg free
  8352   004E6A  C028  F045         	movff	?___fldiv,read_adc_voltage@voltage
  8353   004E6E  C029  F046         	movff	?___fldiv+1,read_adc_voltage@voltage+1
  8354   004E72  C02A  F047         	movff	?___fldiv+2,read_adc_voltage@voltage+2
  8355   004E76  C02B  F048         	movff	?___fldiv+3,read_adc_voltage@voltage+3
  8356   004E7A                     
  8357                           ;newfile.c: 185:     return voltage;
  8358   004E7A  C045  F041         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  8359   004E7E  C046  F042         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  8360   004E82  C047  F043         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  8361   004E86  C048  F044         	movff	read_adc_voltage@voltage+3,?_read_adc_voltage+3
  8362   004E8A  0012               	return		;funcret
  8363   004E8C                     __end_of_read_adc_voltage:
  8364                           	callstack 0
  8365                           
  8366 ;; *************** function _read_adc_raw_no_lib *****************
  8367 ;; Defined at:
  8368 ;;		line 170 in file "newfile.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  channel         1    wreg     unsigned char 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  channel         1   25[COMRAM] unsigned char 
  8373 ;;  raw_value       2   23[COMRAM] int 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  2   19[COMRAM] int 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8384 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;Total ram usage:        7 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 3
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_read_adc_voltage
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text30
  8398   005524                     __ptext30:
  8399                           	callstack 0
  8400   005524                     _read_adc_raw_no_lib:
  8401                           	callstack 26
  8402                           
  8403                           ;incstack = 0
  8404                           ;read_adc_raw_no_lib@channel stored from wreg
  8405   005524  6E1A               	movwf	read_adc_raw_no_lib@channel^0,c
  8406   005526                     
  8407                           ;newfile.c: 171:     int raw_value;;newfile.c: 172:     ADCON0bits.CHS = channel;
  8408   005526  C01A  F016         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  8409   00552A  4616               	rlncf	??_read_adc_raw_no_lib^0,f,c
  8410   00552C  4616               	rlncf	??_read_adc_raw_no_lib^0,f,c
  8411   00552E  50C2               	movf	194,w,c	;volatile
  8412   005530  1816               	xorwf	??_read_adc_raw_no_lib^0,w,c
  8413   005532  0BC3               	andlw	-61
  8414   005534  1816               	xorwf	??_read_adc_raw_no_lib^0,w,c
  8415   005536  6EC2               	movwf	194,c	;volatile
  8416   005538                     
  8417                           ;newfile.c: 173:     ADCON0bits.GO = 1;
  8418   005538  82C2               	bsf	194,1,c	;volatile
  8419   00553A                     l119:
  8420                           
  8421                           ;newfile.c: 174:     while (ADCON0bits.GO) {
  8422   00553A  B2C2               	btfsc	194,1,c	;volatile
  8423   00553C  EFA2  F02A         	goto	u5571
  8424   005540  EFA4  F02A         	goto	u5570
  8425   005544                     u5571:
  8426   005544  EF9D  F02A         	goto	l119
  8427   005548                     u5570:
  8428   005548                     
  8429                           ;newfile.c: 176:     raw_value = ADRESH << 8 | ADRESL;
  8430   005548  50C3               	movf	195,w,c	;volatile
  8431   00554A  CFC4 F016          	movff	4036,??_read_adc_raw_no_lib	;volatile
  8432   00554E  6A17               	clrf	(??_read_adc_raw_no_lib+1)^0,c
  8433   005550  C016  F017         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  8434   005554  6A16               	clrf	??_read_adc_raw_no_lib^0,c
  8435   005556  1016               	iorwf	??_read_adc_raw_no_lib^0,w,c
  8436   005558  6E18               	movwf	read_adc_raw_no_lib@raw_value^0,c
  8437   00555A  5017               	movf	(??_read_adc_raw_no_lib+1)^0,w,c
  8438   00555C  6E19               	movwf	(read_adc_raw_no_lib@raw_value+1)^0,c
  8439   00555E                     
  8440                           ;newfile.c: 177:     return raw_value;
  8441   00555E  C018  F014         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  8442   005562  C019  F015         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  8443   005566  0012               	return		;funcret
  8444   005568                     __end_of_read_adc_raw_no_lib:
  8445                           	callstack 0
  8446                           
  8447 ;; *************** function ___xxtofl *****************
  8448 ;; Defined at:
  8449 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;  sign            1    wreg     unsigned char 
  8452 ;;  val             4   25[COMRAM] long 
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;  sign            1   33[COMRAM] unsigned char 
  8455 ;;  arg             4   35[COMRAM] unsigned long 
  8456 ;;  exp             1   34[COMRAM] unsigned char 
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  4   25[COMRAM] unsigned char 
  8459 ;; Registers used:
  8460 ;;		wreg, status,2, status,0
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8469 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8470 ;;Total ram usage:       14 bytes
  8471 ;; Hardware stack levels used: 1
  8472 ;; Hardware stack levels required when called: 3
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_read_adc_voltage
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text31
  8481   003A48                     __ptext31:
  8482                           	callstack 0
  8483   003A48                     ___xxtofl:
  8484                           	callstack 26
  8485                           
  8486                           ;incstack = 0
  8487                           ;___xxtofl@sign stored from wreg
  8488   003A48  6E22               	movwf	___xxtofl@sign^0,c
  8489   003A4A  5022               	movf	___xxtofl@sign^0,w,c
  8490   003A4C  B4D8               	btfsc	status,2,c
  8491   003A4E  EF2B  F01D         	goto	u5671
  8492   003A52  EF2D  F01D         	goto	u5670
  8493   003A56                     u5671:
  8494   003A56  EF4F  F01D         	goto	l972
  8495   003A5A                     u5670:
  8496   003A5A  BE1D               	btfsc	(___xxtofl@val+3)^0,7,c
  8497   003A5C  EF34  F01D         	goto	u5680
  8498   003A60  EF32  F01D         	goto	u5681
  8499   003A64                     u5681:
  8500   003A64  EF4F  F01D         	goto	l972
  8501   003A68                     u5680:
  8502   003A68  C01A  F01E         	movff	___xxtofl@val,??___xxtofl
  8503   003A6C  C01B  F01F         	movff	___xxtofl@val+1,??___xxtofl+1
  8504   003A70  C01C  F020         	movff	___xxtofl@val+2,??___xxtofl+2
  8505   003A74  C01D  F021         	movff	___xxtofl@val+3,??___xxtofl+3
  8506   003A78  1E1E               	comf	??___xxtofl^0,f,c
  8507   003A7A  1E1F               	comf	(??___xxtofl+1)^0,f,c
  8508   003A7C  1E20               	comf	(??___xxtofl+2)^0,f,c
  8509   003A7E  1E21               	comf	(??___xxtofl+3)^0,f,c
  8510   003A80  2A1E               	incf	??___xxtofl^0,f,c
  8511   003A82  0E00               	movlw	0
  8512   003A84  221F               	addwfc	(??___xxtofl+1)^0,f,c
  8513   003A86  2220               	addwfc	(??___xxtofl+2)^0,f,c
  8514   003A88  2221               	addwfc	(??___xxtofl+3)^0,f,c
  8515   003A8A  C01E  F024         	movff	??___xxtofl,___xxtofl@arg
  8516   003A8E  C01F  F025         	movff	??___xxtofl+1,___xxtofl@arg+1
  8517   003A92  C020  F026         	movff	??___xxtofl+2,___xxtofl@arg+2
  8518   003A96  C021  F027         	movff	??___xxtofl+3,___xxtofl@arg+3
  8519   003A9A  EF57  F01D         	goto	l5068
  8520   003A9E                     l972:
  8521   003A9E  C01A  F024         	movff	___xxtofl@val,___xxtofl@arg
  8522   003AA2  C01B  F025         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8523   003AA6  C01C  F026         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8524   003AAA  C01D  F027         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8525   003AAE                     l5068:
  8526   003AAE  501A               	movf	___xxtofl@val^0,w,c
  8527   003AB0  101B               	iorwf	(___xxtofl@val+1)^0,w,c
  8528   003AB2  101C               	iorwf	(___xxtofl@val+2)^0,w,c
  8529   003AB4  101D               	iorwf	(___xxtofl@val+3)^0,w,c
  8530   003AB6  A4D8               	btfss	status,2,c
  8531   003AB8  EF60  F01D         	goto	u5691
  8532   003ABC  EF62  F01D         	goto	u5690
  8533   003AC0                     u5691:
  8534   003AC0  EF6C  F01D         	goto	l5074
  8535   003AC4                     u5690:
  8536   003AC4  0E00               	movlw	0
  8537   003AC6  6E1A               	movwf	?___xxtofl^0,c
  8538   003AC8  0E00               	movlw	0
  8539   003ACA  6E1B               	movwf	(?___xxtofl+1)^0,c
  8540   003ACC  0E00               	movlw	0
  8541   003ACE  6E1C               	movwf	(?___xxtofl+2)^0,c
  8542   003AD0  0E00               	movlw	0
  8543   003AD2  6E1D               	movwf	(?___xxtofl+3)^0,c
  8544   003AD4  EFFD  F01D         	goto	l975
  8545   003AD8                     l5074:
  8546   003AD8  0E96               	movlw	150
  8547   003ADA  6E23               	movwf	___xxtofl@exp^0,c
  8548   003ADC  EF76  F01D         	goto	l5078
  8549   003AE0                     l5076:
  8550   003AE0  2A23               	incf	___xxtofl@exp^0,f,c
  8551   003AE2  90D8               	bcf	status,0,c
  8552   003AE4  3227               	rrcf	(___xxtofl@arg+3)^0,f,c
  8553   003AE6  3226               	rrcf	(___xxtofl@arg+2)^0,f,c
  8554   003AE8  3225               	rrcf	(___xxtofl@arg+1)^0,f,c
  8555   003AEA  3224               	rrcf	___xxtofl@arg^0,f,c
  8556   003AEC                     l5078:
  8557   003AEC  0E00               	movlw	0
  8558   003AEE  1424               	andwf	___xxtofl@arg^0,w,c
  8559   003AF0  6E1E               	movwf	??___xxtofl^0,c
  8560   003AF2  0E00               	movlw	0
  8561   003AF4  1425               	andwf	(___xxtofl@arg+1)^0,w,c
  8562   003AF6  6E1F               	movwf	(??___xxtofl+1)^0,c
  8563   003AF8  0E00               	movlw	0
  8564   003AFA  1426               	andwf	(___xxtofl@arg+2)^0,w,c
  8565   003AFC  6E20               	movwf	(??___xxtofl+2)^0,c
  8566   003AFE  0EFE               	movlw	254
  8567   003B00  1427               	andwf	(___xxtofl@arg+3)^0,w,c
  8568   003B02  6E21               	movwf	(??___xxtofl+3)^0,c
  8569   003B04  501E               	movf	??___xxtofl^0,w,c
  8570   003B06  101F               	iorwf	(??___xxtofl+1)^0,w,c
  8571   003B08  1020               	iorwf	(??___xxtofl+2)^0,w,c
  8572   003B0A  1021               	iorwf	(??___xxtofl+3)^0,w,c
  8573   003B0C  A4D8               	btfss	status,2,c
  8574   003B0E  EF8B  F01D         	goto	u5701
  8575   003B12  EF8D  F01D         	goto	u5700
  8576   003B16                     u5701:
  8577   003B16  EF70  F01D         	goto	l5076
  8578   003B1A                     u5700:
  8579   003B1A  EF9B  F01D         	goto	l979
  8580   003B1E                     l5080:
  8581   003B1E  2A23               	incf	___xxtofl@exp^0,f,c
  8582   003B20  0E01               	movlw	1
  8583   003B22  2624               	addwf	___xxtofl@arg^0,f,c
  8584   003B24  0E00               	movlw	0
  8585   003B26  2225               	addwfc	(___xxtofl@arg+1)^0,f,c
  8586   003B28  2226               	addwfc	(___xxtofl@arg+2)^0,f,c
  8587   003B2A  2227               	addwfc	(___xxtofl@arg+3)^0,f,c
  8588   003B2C  90D8               	bcf	status,0,c
  8589   003B2E  3227               	rrcf	(___xxtofl@arg+3)^0,f,c
  8590   003B30  3226               	rrcf	(___xxtofl@arg+2)^0,f,c
  8591   003B32  3225               	rrcf	(___xxtofl@arg+1)^0,f,c
  8592   003B34  3224               	rrcf	___xxtofl@arg^0,f,c
  8593   003B36                     l979:
  8594   003B36  0E00               	movlw	0
  8595   003B38  1424               	andwf	___xxtofl@arg^0,w,c
  8596   003B3A  6E1E               	movwf	??___xxtofl^0,c
  8597   003B3C  0E00               	movlw	0
  8598   003B3E  1425               	andwf	(___xxtofl@arg+1)^0,w,c
  8599   003B40  6E1F               	movwf	(??___xxtofl+1)^0,c
  8600   003B42  0E00               	movlw	0
  8601   003B44  1426               	andwf	(___xxtofl@arg+2)^0,w,c
  8602   003B46  6E20               	movwf	(??___xxtofl+2)^0,c
  8603   003B48  0EFF               	movlw	255
  8604   003B4A  1427               	andwf	(___xxtofl@arg+3)^0,w,c
  8605   003B4C  6E21               	movwf	(??___xxtofl+3)^0,c
  8606   003B4E  501E               	movf	??___xxtofl^0,w,c
  8607   003B50  101F               	iorwf	(??___xxtofl+1)^0,w,c
  8608   003B52  1020               	iorwf	(??___xxtofl+2)^0,w,c
  8609   003B54  1021               	iorwf	(??___xxtofl+3)^0,w,c
  8610   003B56  A4D8               	btfss	status,2,c
  8611   003B58  EFB0  F01D         	goto	u5711
  8612   003B5C  EFB2  F01D         	goto	u5710
  8613   003B60                     u5711:
  8614   003B60  EF8F  F01D         	goto	l5080
  8615   003B64                     u5710:
  8616   003B64  EFBA  F01D         	goto	l5088
  8617   003B68                     l5086:
  8618   003B68  0623               	decf	___xxtofl@exp^0,f,c
  8619   003B6A  90D8               	bcf	status,0,c
  8620   003B6C  3624               	rlcf	___xxtofl@arg^0,f,c
  8621   003B6E  3625               	rlcf	(___xxtofl@arg+1)^0,f,c
  8622   003B70  3626               	rlcf	(___xxtofl@arg+2)^0,f,c
  8623   003B72  3627               	rlcf	(___xxtofl@arg+3)^0,f,c
  8624   003B74                     l5088:
  8625   003B74  BE26               	btfsc	(___xxtofl@arg+2)^0,7,c
  8626   003B76  EFBF  F01D         	goto	u5721
  8627   003B7A  EFC1  F01D         	goto	u5720
  8628   003B7E                     u5721:
  8629   003B7E  EFC9  F01D         	goto	l986
  8630   003B82                     u5720:
  8631   003B82  0E02               	movlw	2
  8632   003B84  6023               	cpfslt	___xxtofl@exp^0,c
  8633   003B86  EFC7  F01D         	goto	u5731
  8634   003B8A  EFC9  F01D         	goto	u5730
  8635   003B8E                     u5731:
  8636   003B8E  EFB4  F01D         	goto	l5086
  8637   003B92                     u5730:
  8638   003B92                     l986:
  8639   003B92  B023               	btfsc	___xxtofl@exp^0,0,c
  8640   003B94  EFCE  F01D         	goto	u5741
  8641   003B98  EFD0  F01D         	goto	u5740
  8642   003B9C                     u5741:
  8643   003B9C  EFD1  F01D         	goto	l5094
  8644   003BA0                     u5740:
  8645   003BA0  9E26               	bcf	(___xxtofl@arg+2)^0,7,c
  8646   003BA2                     l5094:
  8647   003BA2  90D8               	bcf	status,0,c
  8648   003BA4  3223               	rrcf	___xxtofl@exp^0,f,c
  8649   003BA6  C023  F01E         	movff	___xxtofl@exp,??___xxtofl
  8650   003BAA  6A1F               	clrf	(??___xxtofl+1)^0,c
  8651   003BAC  6A20               	clrf	(??___xxtofl+2)^0,c
  8652   003BAE  6A21               	clrf	(??___xxtofl+3)^0,c
  8653   003BB0  C01E  F021         	movff	??___xxtofl,??___xxtofl+3
  8654   003BB4  6A20               	clrf	(??___xxtofl+2)^0,c
  8655   003BB6  6A1F               	clrf	(??___xxtofl+1)^0,c
  8656   003BB8  6A1E               	clrf	??___xxtofl^0,c
  8657   003BBA  501E               	movf	??___xxtofl^0,w,c
  8658   003BBC  1224               	iorwf	___xxtofl@arg^0,f,c
  8659   003BBE  501F               	movf	(??___xxtofl+1)^0,w,c
  8660   003BC0  1225               	iorwf	(___xxtofl@arg+1)^0,f,c
  8661   003BC2  5020               	movf	(??___xxtofl+2)^0,w,c
  8662   003BC4  1226               	iorwf	(___xxtofl@arg+2)^0,f,c
  8663   003BC6  5021               	movf	(??___xxtofl+3)^0,w,c
  8664   003BC8  1227               	iorwf	(___xxtofl@arg+3)^0,f,c
  8665   003BCA  5022               	movf	___xxtofl@sign^0,w,c
  8666   003BCC  B4D8               	btfsc	status,2,c
  8667   003BCE  EFEB  F01D         	goto	u5751
  8668   003BD2  EFED  F01D         	goto	u5750
  8669   003BD6                     u5751:
  8670   003BD6  EFF5  F01D         	goto	l5104
  8671   003BDA                     u5750:
  8672   003BDA  BE1D               	btfsc	(___xxtofl@val+3)^0,7,c
  8673   003BDC  EFF4  F01D         	goto	u5760
  8674   003BE0  EFF2  F01D         	goto	u5761
  8675   003BE4                     u5761:
  8676   003BE4  EFF5  F01D         	goto	l5104
  8677   003BE8                     u5760:
  8678   003BE8  8E27               	bsf	(___xxtofl@arg+3)^0,7,c
  8679   003BEA                     l5104:
  8680   003BEA  C024  F01A         	movff	___xxtofl@arg,?___xxtofl
  8681   003BEE  C025  F01B         	movff	___xxtofl@arg+1,?___xxtofl+1
  8682   003BF2  C026  F01C         	movff	___xxtofl@arg+2,?___xxtofl+2
  8683   003BF6  C027  F01D         	movff	___xxtofl@arg+3,?___xxtofl+3
  8684   003BFA                     l975:
  8685   003BFA  0012               	return		;funcret
  8686   003BFC                     __end_of___xxtofl:
  8687                           	callstack 0
  8688                           
  8689 ;; *************** function ___fldiv *****************
  8690 ;; Defined at:
  8691 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  b               4   39[COMRAM] unsigned char 
  8694 ;;  a               4   43[COMRAM] unsigned char 
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;  grs             4   58[COMRAM] unsigned long 
  8697 ;;  rem             4   51[COMRAM] unsigned long 
  8698 ;;  new_exp         2   56[COMRAM] short 
  8699 ;;  aexp            1   63[COMRAM] unsigned char 
  8700 ;;  bexp            1   62[COMRAM] unsigned char 
  8701 ;;  sign            1   55[COMRAM] unsigned char 
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  4   39[COMRAM] unsigned char 
  8704 ;; Registers used:
  8705 ;;		wreg, status,2, status,0
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8711 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8713 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8714 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;Total ram usage:       25 bytes
  8716 ;; Hardware stack levels used: 1
  8717 ;; Hardware stack levels required when called: 3
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_read_adc_voltage
  8722 ;;		_efgtoa
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text32
  8727   002F84                     __ptext32:
  8728                           	callstack 0
  8729   002F84                     ___fldiv:
  8730                           	callstack 23
  8731   002F84  502B               	movf	(___fldiv@b+3)^0,w,c
  8732   002F86  0B80               	andlw	128
  8733   002F88  6E38               	movwf	___fldiv@sign^0,c
  8734   002F8A  502B               	movf	(___fldiv@b+3)^0,w,c
  8735   002F8C  242B               	addwf	(___fldiv@b+3)^0,w,c
  8736   002F8E  6E3F               	movwf	___fldiv@bexp^0,c
  8737   002F90  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  8738   002F92  EFCD  F017         	goto	u7081
  8739   002F96  EFCF  F017         	goto	u7080
  8740   002F9A                     u7081:
  8741   002F9A  EFD0  F017         	goto	l6208
  8742   002F9E                     u7080:
  8743   002F9E  803F               	bsf	___fldiv@bexp^0,0,c
  8744   002FA0                     l6208:
  8745   002FA0  503F               	movf	___fldiv@bexp^0,w,c
  8746   002FA2  B4D8               	btfsc	status,2,c
  8747   002FA4  EFD6  F017         	goto	u7091
  8748   002FA8  EFD8  F017         	goto	u7090
  8749   002FAC                     u7091:
  8750   002FAC  EFED  F017         	goto	l6218
  8751   002FB0                     u7090:
  8752   002FB0  283F               	incf	___fldiv@bexp^0,w,c
  8753   002FB2  A4D8               	btfss	status,2,c
  8754   002FB4  EFDE  F017         	goto	u7101
  8755   002FB8  EFE0  F017         	goto	u7100
  8756   002FBC                     u7101:
  8757   002FBC  EFE8  F017         	goto	l6214
  8758   002FC0                     u7100:
  8759   002FC0  0E00               	movlw	0
  8760   002FC2  6E28               	movwf	___fldiv@b^0,c
  8761   002FC4  0E00               	movlw	0
  8762   002FC6  6E29               	movwf	(___fldiv@b+1)^0,c
  8763   002FC8  0E00               	movlw	0
  8764   002FCA  6E2A               	movwf	(___fldiv@b+2)^0,c
  8765   002FCC  0E00               	movlw	0
  8766   002FCE  6E2B               	movwf	(___fldiv@b+3)^0,c
  8767   002FD0                     l6214:
  8768   002FD0  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  8769   002FD2  0E00               	movlw	0
  8770   002FD4  6E2B               	movwf	(___fldiv@b+3)^0,c
  8771   002FD6  EFF5  F017         	goto	l6220
  8772   002FDA                     l6218:
  8773   002FDA  0E00               	movlw	0
  8774   002FDC  6E28               	movwf	___fldiv@b^0,c
  8775   002FDE  0E00               	movlw	0
  8776   002FE0  6E29               	movwf	(___fldiv@b+1)^0,c
  8777   002FE2  0E00               	movlw	0
  8778   002FE4  6E2A               	movwf	(___fldiv@b+2)^0,c
  8779   002FE6  0E00               	movlw	0
  8780   002FE8  6E2B               	movwf	(___fldiv@b+3)^0,c
  8781   002FEA                     l6220:
  8782   002FEA  502F               	movf	(___fldiv@a+3)^0,w,c
  8783   002FEC  0B80               	andlw	128
  8784   002FEE  1A38               	xorwf	___fldiv@sign^0,f,c
  8785   002FF0  502F               	movf	(___fldiv@a+3)^0,w,c
  8786   002FF2  242F               	addwf	(___fldiv@a+3)^0,w,c
  8787   002FF4  6E40               	movwf	___fldiv@aexp^0,c
  8788   002FF6  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  8789   002FF8  EF00  F018         	goto	u7111
  8790   002FFC  EF02  F018         	goto	u7110
  8791   003000                     u7111:
  8792   003000  EF03  F018         	goto	l6228
  8793   003004                     u7110:
  8794   003004  8040               	bsf	___fldiv@aexp^0,0,c
  8795   003006                     l6228:
  8796   003006  5040               	movf	___fldiv@aexp^0,w,c
  8797   003008  B4D8               	btfsc	status,2,c
  8798   00300A  EF09  F018         	goto	u7121
  8799   00300E  EF0B  F018         	goto	u7120
  8800   003012                     u7121:
  8801   003012  EF20  F018         	goto	l6238
  8802   003016                     u7120:
  8803   003016  2840               	incf	___fldiv@aexp^0,w,c
  8804   003018  A4D8               	btfss	status,2,c
  8805   00301A  EF11  F018         	goto	u7131
  8806   00301E  EF13  F018         	goto	u7130
  8807   003022                     u7131:
  8808   003022  EF1B  F018         	goto	l6234
  8809   003026                     u7130:
  8810   003026  0E00               	movlw	0
  8811   003028  6E2C               	movwf	___fldiv@a^0,c
  8812   00302A  0E00               	movlw	0
  8813   00302C  6E2D               	movwf	(___fldiv@a+1)^0,c
  8814   00302E  0E00               	movlw	0
  8815   003030  6E2E               	movwf	(___fldiv@a+2)^0,c
  8816   003032  0E00               	movlw	0
  8817   003034  6E2F               	movwf	(___fldiv@a+3)^0,c
  8818   003036                     l6234:
  8819   003036  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  8820   003038  0E00               	movlw	0
  8821   00303A  6E2F               	movwf	(___fldiv@a+3)^0,c
  8822   00303C  EF28  F018         	goto	l6240
  8823   003040                     l6238:
  8824   003040  0E00               	movlw	0
  8825   003042  6E2C               	movwf	___fldiv@a^0,c
  8826   003044  0E00               	movlw	0
  8827   003046  6E2D               	movwf	(___fldiv@a+1)^0,c
  8828   003048  0E00               	movlw	0
  8829   00304A  6E2E               	movwf	(___fldiv@a+2)^0,c
  8830   00304C  0E00               	movlw	0
  8831   00304E  6E2F               	movwf	(___fldiv@a+3)^0,c
  8832   003050                     l6240:
  8833   003050  502C               	movf	___fldiv@a^0,w,c
  8834   003052  102D               	iorwf	(___fldiv@a+1)^0,w,c
  8835   003054  102E               	iorwf	(___fldiv@a+2)^0,w,c
  8836   003056  102F               	iorwf	(___fldiv@a+3)^0,w,c
  8837   003058  A4D8               	btfss	status,2,c
  8838   00305A  EF31  F018         	goto	u7141
  8839   00305E  EF33  F018         	goto	u7140
  8840   003062                     u7141:
  8841   003062  EF4B  F018         	goto	l6252
  8842   003066                     u7140:
  8843   003066  0E00               	movlw	0
  8844   003068  6E28               	movwf	___fldiv@b^0,c
  8845   00306A  0E00               	movlw	0
  8846   00306C  6E29               	movwf	(___fldiv@b+1)^0,c
  8847   00306E  0E00               	movlw	0
  8848   003070  6E2A               	movwf	(___fldiv@b+2)^0,c
  8849   003072  0E00               	movlw	0
  8850   003074  6E2B               	movwf	(___fldiv@b+3)^0,c
  8851   003076  0E80               	movlw	128
  8852   003078  122A               	iorwf	(___fldiv@b+2)^0,f,c
  8853   00307A  0E7F               	movlw	127
  8854   00307C  122B               	iorwf	(___fldiv@b+3)^0,f,c
  8855   00307E                     l6246:
  8856   00307E  5038               	movf	___fldiv@sign^0,w,c
  8857   003080  122B               	iorwf	(___fldiv@b+3)^0,f,c
  8858   003082  C028  F028         	movff	___fldiv@b,?___fldiv
  8859   003086  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  8860   00308A  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  8861   00308E  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  8862   003092  EF8E  F019         	goto	l899
  8863   003096                     l6252:
  8864   003096  503F               	movf	___fldiv@bexp^0,w,c
  8865   003098  A4D8               	btfss	status,2,c
  8866   00309A  EF51  F018         	goto	u7151
  8867   00309E  EF53  F018         	goto	u7150
  8868   0030A2                     u7151:
  8869   0030A2  EF5D  F018         	goto	l6260
  8870   0030A6                     u7150:
  8871   0030A6  0E00               	movlw	0
  8872   0030A8  6E28               	movwf	?___fldiv^0,c
  8873   0030AA  0E00               	movlw	0
  8874   0030AC  6E29               	movwf	(?___fldiv+1)^0,c
  8875   0030AE  0E00               	movlw	0
  8876   0030B0  6E2A               	movwf	(?___fldiv+2)^0,c
  8877   0030B2  0E00               	movlw	0
  8878   0030B4  6E2B               	movwf	(?___fldiv+3)^0,c
  8879   0030B6  EF8E  F019         	goto	l899
  8880   0030BA                     l6260:
  8881   0030BA  5040               	movf	___fldiv@aexp^0,w,c
  8882   0030BC  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  8883   0030C0  6A31               	clrf	(??___fldiv+1)^0,c
  8884   0030C2  5E30               	subwf	??___fldiv^0,f,c
  8885   0030C4  0E00               	movlw	0
  8886   0030C6  5A31               	subwfb	(??___fldiv+1)^0,f,c
  8887   0030C8  0E7F               	movlw	127
  8888   0030CA  2430               	addwf	??___fldiv^0,w,c
  8889   0030CC  6E39               	movwf	___fldiv@new_exp^0,c
  8890   0030CE  0E00               	movlw	0
  8891   0030D0  2031               	addwfc	(??___fldiv+1)^0,w,c
  8892   0030D2  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  8893   0030D4  C028  F034         	movff	___fldiv@b,___fldiv@rem
  8894   0030D8  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  8895   0030DC  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  8896   0030E0  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  8897   0030E4  0E00               	movlw	0
  8898   0030E6  6E28               	movwf	___fldiv@b^0,c
  8899   0030E8  0E00               	movlw	0
  8900   0030EA  6E29               	movwf	(___fldiv@b+1)^0,c
  8901   0030EC  0E00               	movlw	0
  8902   0030EE  6E2A               	movwf	(___fldiv@b+2)^0,c
  8903   0030F0  0E00               	movlw	0
  8904   0030F2  6E2B               	movwf	(___fldiv@b+3)^0,c
  8905   0030F4  0E00               	movlw	0
  8906   0030F6  6E3B               	movwf	___fldiv@grs^0,c
  8907   0030F8  0E00               	movlw	0
  8908   0030FA  6E3C               	movwf	(___fldiv@grs+1)^0,c
  8909   0030FC  0E00               	movlw	0
  8910   0030FE  6E3D               	movwf	(___fldiv@grs+2)^0,c
  8911   003100  0E00               	movlw	0
  8912   003102  6E3E               	movwf	(___fldiv@grs+3)^0,c
  8913   003104  0E00               	movlw	0
  8914   003106  6E40               	movwf	___fldiv@aexp^0,c
  8915   003108  EFBE  F018         	goto	l901
  8916   00310C                     l6270:
  8917   00310C  5040               	movf	___fldiv@aexp^0,w,c
  8918   00310E  B4D8               	btfsc	status,2,c
  8919   003110  EF8C  F018         	goto	u7161
  8920   003114  EF8E  F018         	goto	u7160
  8921   003118                     u7161:
  8922   003118  EFA5  F018         	goto	l6278
  8923   00311C                     u7160:
  8924   00311C  90D8               	bcf	status,0,c
  8925   00311E  3634               	rlcf	___fldiv@rem^0,f,c
  8926   003120  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  8927   003122  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  8928   003124  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  8929   003126  90D8               	bcf	status,0,c
  8930   003128  3628               	rlcf	___fldiv@b^0,f,c
  8931   00312A  3629               	rlcf	(___fldiv@b+1)^0,f,c
  8932   00312C  362A               	rlcf	(___fldiv@b+2)^0,f,c
  8933   00312E  362B               	rlcf	(___fldiv@b+3)^0,f,c
  8934   003130  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  8935   003132  EF9D  F018         	goto	u7171
  8936   003136  EF9F  F018         	goto	u7170
  8937   00313A                     u7171:
  8938   00313A  EFA0  F018         	goto	l904
  8939   00313E                     u7170:
  8940   00313E  8028               	bsf	___fldiv@b^0,0,c
  8941   003140                     l904:
  8942   003140  90D8               	bcf	status,0,c
  8943   003142  363B               	rlcf	___fldiv@grs^0,f,c
  8944   003144  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  8945   003146  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  8946   003148  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  8947   00314A                     l6278:
  8948   00314A  502C               	movf	___fldiv@a^0,w,c
  8949   00314C  5C34               	subwf	___fldiv@rem^0,w,c
  8950   00314E  502D               	movf	(___fldiv@a+1)^0,w,c
  8951   003150  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  8952   003152  502E               	movf	(___fldiv@a+2)^0,w,c
  8953   003154  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  8954   003156  502F               	movf	(___fldiv@a+3)^0,w,c
  8955   003158  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  8956   00315A  A0D8               	btfss	status,0,c
  8957   00315C  EFB2  F018         	goto	u7181
  8958   003160  EFB4  F018         	goto	u7180
  8959   003164                     u7181:
  8960   003164  EFBD  F018         	goto	l6284
  8961   003168                     u7180:
  8962   003168  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  8963   00316A  502C               	movf	___fldiv@a^0,w,c
  8964   00316C  5E34               	subwf	___fldiv@rem^0,f,c
  8965   00316E  502D               	movf	(___fldiv@a+1)^0,w,c
  8966   003170  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  8967   003172  502E               	movf	(___fldiv@a+2)^0,w,c
  8968   003174  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  8969   003176  502F               	movf	(___fldiv@a+3)^0,w,c
  8970   003178  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  8971   00317A                     l6284:
  8972   00317A  2A40               	incf	___fldiv@aexp^0,f,c
  8973   00317C                     l901:
  8974   00317C  0E19               	movlw	25
  8975   00317E  6440               	cpfsgt	___fldiv@aexp^0,c
  8976   003180  EFC4  F018         	goto	u7191
  8977   003184  EFC6  F018         	goto	u7190
  8978   003188                     u7191:
  8979   003188  EF86  F018         	goto	l6270
  8980   00318C                     u7190:
  8981   00318C  5034               	movf	___fldiv@rem^0,w,c
  8982   00318E  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  8983   003190  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  8984   003192  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  8985   003194  B4D8               	btfsc	status,2,c
  8986   003196  EFCF  F018         	goto	u7201
  8987   00319A  EFD1  F018         	goto	u7200
  8988   00319E                     u7201:
  8989   00319E  EFE9  F018         	goto	l6296
  8990   0031A2                     u7200:
  8991   0031A2  803B               	bsf	___fldiv@grs^0,0,c
  8992   0031A4  EFE9  F018         	goto	l6296
  8993   0031A8                     l6290:
  8994   0031A8  90D8               	bcf	status,0,c
  8995   0031AA  3628               	rlcf	___fldiv@b^0,f,c
  8996   0031AC  3629               	rlcf	(___fldiv@b+1)^0,f,c
  8997   0031AE  362A               	rlcf	(___fldiv@b+2)^0,f,c
  8998   0031B0  362B               	rlcf	(___fldiv@b+3)^0,f,c
  8999   0031B2  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  9000   0031B4  EFDE  F018         	goto	u7211
  9001   0031B8  EFE0  F018         	goto	u7210
  9002   0031BC                     u7211:
  9003   0031BC  EFE1  F018         	goto	l910
  9004   0031C0                     u7210:
  9005   0031C0  8028               	bsf	___fldiv@b^0,0,c
  9006   0031C2                     l910:
  9007   0031C2  90D8               	bcf	status,0,c
  9008   0031C4  363B               	rlcf	___fldiv@grs^0,f,c
  9009   0031C6  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  9010   0031C8  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  9011   0031CA  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  9012   0031CC  0639               	decf	___fldiv@new_exp^0,f,c
  9013   0031CE  A0D8               	btfss	status,0,c
  9014   0031D0  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  9015   0031D2                     l6296:
  9016   0031D2  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  9017   0031D4  EFEE  F018         	goto	u7221
  9018   0031D8  EFF0  F018         	goto	u7220
  9019   0031DC                     u7221:
  9020   0031DC  EFD4  F018         	goto	l6290
  9021   0031E0                     u7220:
  9022   0031E0  0E00               	movlw	0
  9023   0031E2  6E40               	movwf	___fldiv@aexp^0,c
  9024   0031E4  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  9025   0031E6  EFF7  F018         	goto	u7231
  9026   0031EA  EFF9  F018         	goto	u7230
  9027   0031EE                     u7231:
  9028   0031EE  EF1D  F019         	goto	l912
  9029   0031F2                     u7230:
  9030   0031F2  0EFF               	movlw	255
  9031   0031F4  143B               	andwf	___fldiv@grs^0,w,c
  9032   0031F6  6E30               	movwf	??___fldiv^0,c
  9033   0031F8  0EFF               	movlw	255
  9034   0031FA  143C               	andwf	(___fldiv@grs+1)^0,w,c
  9035   0031FC  6E31               	movwf	(??___fldiv+1)^0,c
  9036   0031FE  0EFF               	movlw	255
  9037   003200  143D               	andwf	(___fldiv@grs+2)^0,w,c
  9038   003202  6E32               	movwf	(??___fldiv+2)^0,c
  9039   003204  0E7F               	movlw	127
  9040   003206  143E               	andwf	(___fldiv@grs+3)^0,w,c
  9041   003208  6E33               	movwf	(??___fldiv+3)^0,c
  9042   00320A  5030               	movf	??___fldiv^0,w,c
  9043   00320C  1031               	iorwf	(??___fldiv+1)^0,w,c
  9044   00320E  1032               	iorwf	(??___fldiv+2)^0,w,c
  9045   003210  1033               	iorwf	(??___fldiv+3)^0,w,c
  9046   003212  B4D8               	btfsc	status,2,c
  9047   003214  EF0E  F019         	goto	u7241
  9048   003218  EF10  F019         	goto	u7240
  9049   00321C                     u7241:
  9050   00321C  EF14  F019         	goto	l913
  9051   003220                     u7240:
  9052   003220                     l6304:
  9053   003220  0E01               	movlw	1
  9054   003222  6E40               	movwf	___fldiv@aexp^0,c
  9055   003224  EF1D  F019         	goto	l912
  9056   003228                     l913:
  9057   003228  A028               	btfss	___fldiv@b^0,0,c
  9058   00322A  EF19  F019         	goto	u7251
  9059   00322E  EF1B  F019         	goto	u7250
  9060   003232                     u7251:
  9061   003232  EF1D  F019         	goto	l912
  9062   003236                     u7250:
  9063   003236  EF10  F019         	goto	l6304
  9064   00323A                     l912:
  9065   00323A  5040               	movf	___fldiv@aexp^0,w,c
  9066   00323C  B4D8               	btfsc	status,2,c
  9067   00323E  EF23  F019         	goto	u7261
  9068   003242  EF25  F019         	goto	u7260
  9069   003246                     u7261:
  9070   003246  EF49  F019         	goto	l6316
  9071   00324A                     u7260:
  9072   00324A  0E01               	movlw	1
  9073   00324C  2628               	addwf	___fldiv@b^0,f,c
  9074   00324E  0E00               	movlw	0
  9075   003250  2229               	addwfc	(___fldiv@b+1)^0,f,c
  9076   003252  222A               	addwfc	(___fldiv@b+2)^0,f,c
  9077   003254  222B               	addwfc	(___fldiv@b+3)^0,f,c
  9078   003256  A02B               	btfss	(___fldiv@b+3)^0,0,c
  9079   003258  EF30  F019         	goto	u7271
  9080   00325C  EF32  F019         	goto	u7270
  9081   003260                     u7271:
  9082   003260  EF49  F019         	goto	l6316
  9083   003264                     u7270:
  9084   003264  C028  F030         	movff	___fldiv@b,??___fldiv
  9085   003268  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  9086   00326C  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  9087   003270  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  9088   003274  3433               	rlcf	(??___fldiv+3)^0,w,c
  9089   003276  3233               	rrcf	(??___fldiv+3)^0,f,c
  9090   003278  3232               	rrcf	(??___fldiv+2)^0,f,c
  9091   00327A  3231               	rrcf	(??___fldiv+1)^0,f,c
  9092   00327C  3230               	rrcf	??___fldiv^0,f,c
  9093   00327E  C030  F028         	movff	??___fldiv,___fldiv@b
  9094   003282  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  9095   003286  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  9096   00328A  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  9097   00328E  4A39               	infsnz	___fldiv@new_exp^0,f,c
  9098   003290  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  9099   003292                     l6316:
  9100   003292  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9101   003294  EF54  F019         	goto	u7281
  9102   003298  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  9103   00329A  E108               	bnz	u7280
  9104   00329C  2839               	incf	___fldiv@new_exp^0,w,c
  9105   00329E  A0D8               	btfss	status,0,c
  9106   0032A0  EF54  F019         	goto	u7281
  9107   0032A4  EF56  F019         	goto	u7280
  9108   0032A8                     u7281:
  9109   0032A8  EF61  F019         	goto	l6320
  9110   0032AC                     u7280:
  9111   0032AC  0E00               	movlw	0
  9112   0032AE  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  9113   0032B0  6839               	setf	___fldiv@new_exp^0,c
  9114   0032B2  0E00               	movlw	0
  9115   0032B4  6E28               	movwf	___fldiv@b^0,c
  9116   0032B6  0E00               	movlw	0
  9117   0032B8  6E29               	movwf	(___fldiv@b+1)^0,c
  9118   0032BA  0E00               	movlw	0
  9119   0032BC  6E2A               	movwf	(___fldiv@b+2)^0,c
  9120   0032BE  0E00               	movlw	0
  9121   0032C0  6E2B               	movwf	(___fldiv@b+3)^0,c
  9122   0032C2                     l6320:
  9123   0032C2  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9124   0032C4  EF6E  F019         	goto	u7290
  9125   0032C8  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  9126   0032CA  E106               	bnz	u7291
  9127   0032CC  0439               	decf	___fldiv@new_exp^0,w,c
  9128   0032CE  B0D8               	btfsc	status,0,c
  9129   0032D0  EF6C  F019         	goto	u7291
  9130   0032D4  EF6E  F019         	goto	u7290
  9131   0032D8                     u7291:
  9132   0032D8  EF7C  F019         	goto	l6324
  9133   0032DC                     u7290:
  9134   0032DC  0E00               	movlw	0
  9135   0032DE  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  9136   0032E0  0E00               	movlw	0
  9137   0032E2  6E39               	movwf	___fldiv@new_exp^0,c
  9138   0032E4  0E00               	movlw	0
  9139   0032E6  6E28               	movwf	___fldiv@b^0,c
  9140   0032E8  0E00               	movlw	0
  9141   0032EA  6E29               	movwf	(___fldiv@b+1)^0,c
  9142   0032EC  0E00               	movlw	0
  9143   0032EE  6E2A               	movwf	(___fldiv@b+2)^0,c
  9144   0032F0  0E00               	movlw	0
  9145   0032F2  6E2B               	movwf	(___fldiv@b+3)^0,c
  9146   0032F4  0E00               	movlw	0
  9147   0032F6  6E38               	movwf	___fldiv@sign^0,c
  9148   0032F8                     l6324:
  9149   0032F8  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  9150   0032FC  A03F               	btfss	___fldiv@bexp^0,0,c
  9151   0032FE  EF83  F019         	goto	u7301
  9152   003302  EF85  F019         	goto	u7300
  9153   003306                     u7301:
  9154   003306  EF88  F019         	goto	l6330
  9155   00330A                     u7300:
  9156   00330A  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  9157   00330C  EF89  F019         	goto	l6332
  9158   003310                     l6330:
  9159   003310  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  9160   003312                     l6332:
  9161   003312  90D8               	bcf	status,0,c
  9162   003314  303F               	rrcf	___fldiv@bexp^0,w,c
  9163   003316  6E2B               	movwf	(___fldiv@b+3)^0,c
  9164   003318  EF3F  F018         	goto	l6246
  9165   00331C                     l899:
  9166   00331C  0012               	return		;funcret
  9167   00331E                     __end_of___fldiv:
  9168                           	callstack 0
  9169                           
  9170 ;; *************** function _lcd_puts *****************
  9171 ;; Defined at:
  9172 ;;		line 253 in file "newfile.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  s               2   37[COMRAM] PTR unsigned char 
  9175 ;;		 -> main@Buffer(32), 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      void 
  9180 ;; Registers used:
  9181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;Total ram usage:        2 bytes
  9192 ;; Hardware stack levels used: 1
  9193 ;; Hardware stack levels required when called: 8
  9194 ;; This function calls:
  9195 ;;		_lcd_putc
  9196 ;; This function is called by:
  9197 ;;		_main
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           	psect	text33
  9202   00568C                     __ptext33:
  9203                           	callstack 0
  9204   00568C                     _lcd_puts:
  9205                           	callstack 22
  9206   00568C                     
  9207                           ;newfile.c: 254:     while (*s) {
  9208   00568C  EF51  F02B         	goto	l5282
  9209   005690                     l5278:
  9210                           
  9211                           ;newfile.c: 255:         lcd_putc(*s);
  9212   005690  C026  FFD9         	movff	lcd_puts@s,fsr2l
  9213   005694  C027  FFDA         	movff	lcd_puts@s+1,fsr2h
  9214   005698  50DF               	movf	indf2,w,c
  9215   00569A  EC46  F027         	call	_lcd_putc
  9216   00569E                     
  9217                           ;newfile.c: 256:         s++;
  9218   00569E  4A26               	infsnz	lcd_puts@s^0,f,c
  9219   0056A0  2A27               	incf	(lcd_puts@s+1)^0,f,c
  9220   0056A2                     l5282:
  9221                           
  9222                           ;newfile.c: 254:     while (*s) {
  9223   0056A2  C026  FFD9         	movff	lcd_puts@s,fsr2l
  9224   0056A6  C027  FFDA         	movff	lcd_puts@s+1,fsr2h
  9225   0056AA  50DF               	movf	indf2,w,c
  9226   0056AC  A4D8               	btfss	status,2,c
  9227   0056AE  EF5B  F02B         	goto	u5921
  9228   0056B2  EF5D  F02B         	goto	u5920
  9229   0056B6                     u5921:
  9230   0056B6  EF48  F02B         	goto	l5278
  9231   0056BA                     u5920:
  9232   0056BA  0012               	return		;funcret
  9233   0056BC                     __end_of_lcd_puts:
  9234                           	callstack 0
  9235                           
  9236 ;; *************** function _lcd_putc *****************
  9237 ;; Defined at:
  9238 ;;		line 239 in file "newfile.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;  c               1    wreg     unsigned char 
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;  c               1   36[COMRAM] unsigned char 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg, status,2, status,0, cstack
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;Total ram usage:        3 bytes
  9257 ;; Hardware stack levels used: 1
  9258 ;; Hardware stack levels required when called: 7
  9259 ;; This function calls:
  9260 ;;		_delay_ms
  9261 ;;		_lcd_gotoxy
  9262 ;;		_lcd_send_byte
  9263 ;; This function is called by:
  9264 ;;		_lcd_puts
  9265 ;;		_main
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text34
  9270   004E8C                     __ptext34:
  9271                           	callstack 0
  9272   004E8C                     _lcd_putc:
  9273                           	callstack 22
  9274                           
  9275                           ;incstack = 0
  9276                           ;lcd_putc@c stored from wreg
  9277   004E8C  6E25               	movwf	lcd_putc@c^0,c
  9278   004E8E                     
  9279                           ;newfile.c: 240:     switch (c) {
  9280   004E8E  EF6B  F027         	goto	l4990
  9281   004E92                     l4980:
  9282   004E92  0E01               	movlw	1
  9283   004E94  6E1C               	movwf	lcd_send_byte@n^0,c
  9284   004E96  0E00               	movlw	0
  9285   004E98  EC0E  F029         	call	_lcd_send_byte
  9286                           
  9287                           ;newfile.c: 242:             delay_ms(2);
  9288   004E9C  0E00               	movlw	0
  9289   004E9E  6E15               	movwf	(delay_ms@n+1)^0,c
  9290   004EA0  0E02               	movlw	2
  9291   004EA2  6E14               	movwf	delay_ms@n^0,c
  9292   004EA4  EC2D  F02B         	call	_delay_ms	;wreg free
  9293                           
  9294                           ;newfile.c: 243:             break;
  9295   004EA8  EF84  F027         	goto	l158
  9296   004EAC                     l4982:
  9297   004EAC  0E02               	movlw	2
  9298   004EAE  6E1E               	movwf	lcd_gotoxy@y^0,c
  9299   004EB0  0E01               	movlw	1
  9300   004EB2  EC33  F028         	call	_lcd_gotoxy
  9301                           
  9302                           ;newfile.c: 245:             break;
  9303   004EB6  EF84  F027         	goto	l158
  9304   004EBA                     l4984:
  9305   004EBA  0E10               	movlw	16
  9306   004EBC  6E1C               	movwf	lcd_send_byte@n^0,c
  9307   004EBE  0E00               	movlw	0
  9308   004EC0  EC0E  F029         	call	_lcd_send_byte
  9309                           
  9310                           ;newfile.c: 247:             break;
  9311   004EC4  EF84  F027         	goto	l158
  9312   004EC8                     l4986:
  9313   004EC8  C025  F01C         	movff	lcd_putc@c,lcd_send_byte@n
  9314   004ECC  0E01               	movlw	1
  9315   004ECE  EC0E  F029         	call	_lcd_send_byte
  9316                           
  9317                           ;newfile.c: 249:             break;
  9318   004ED2  EF84  F027         	goto	l158
  9319   004ED6                     l4990:
  9320   004ED6  5025               	movf	lcd_putc@c^0,w,c
  9321   004ED8  6E23               	movwf	??_lcd_putc^0,c
  9322   004EDA  6A24               	clrf	(??_lcd_putc+1)^0,c
  9323                           
  9324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9325                           ; Switch size 1, requested type "simple"
  9326                           ; Number of cases is 1, Range of values is 0 to 0
  9327                           ; switch strategies available:
  9328                           ; Name         Instructions Cycles
  9329                           ; simple_byte            4     3 (average)
  9330                           ;	Chosen strategy is simple_byte
  9331   004EDC  5024               	movf	(??_lcd_putc+1)^0,w,c
  9332   004EDE  0A00               	xorlw	0	; case 0
  9333   004EE0  B4D8               	btfsc	status,2,c
  9334   004EE2  EF75  F027         	goto	l7712
  9335   004EE6  EF64  F027         	goto	l4986
  9336   004EEA                     l7712:
  9337                           
  9338                           ; Switch size 1, requested type "simple"
  9339                           ; Number of cases is 3, Range of values is 8 to 12
  9340                           ; switch strategies available:
  9341                           ; Name         Instructions Cycles
  9342                           ; simple_byte           10     6 (average)
  9343                           ;	Chosen strategy is simple_byte
  9344   004EEA  5023               	movf	??_lcd_putc^0,w,c
  9345   004EEC  0A08               	xorlw	8	; case 8
  9346   004EEE  B4D8               	btfsc	status,2,c
  9347   004EF0  EF5D  F027         	goto	l4984
  9348   004EF4  0A02               	xorlw	2	; case 10
  9349   004EF6  B4D8               	btfsc	status,2,c
  9350   004EF8  EF56  F027         	goto	l4982
  9351   004EFC  0A06               	xorlw	6	; case 12
  9352   004EFE  B4D8               	btfsc	status,2,c
  9353   004F00  EF49  F027         	goto	l4980
  9354   004F04  EF64  F027         	goto	l4986
  9355   004F08                     l158:
  9356   004F08  0012               	return		;funcret
  9357   004F0A                     __end_of_lcd_putc:
  9358                           	callstack 0
  9359                           
  9360 ;; *************** function _lcd_gotoxy *****************
  9361 ;; Defined at:
  9362 ;;		line 222 in file "newfile.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  x               1    wreg     unsigned char 
  9365 ;;  y               1   29[COMRAM] unsigned char 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  x               1   32[COMRAM] unsigned char 
  9368 ;;  address         1   33[COMRAM] unsigned char 
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0, cstack
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9378 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9381 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9382 ;;Total ram usage:        5 bytes
  9383 ;; Hardware stack levels used: 1
  9384 ;; Hardware stack levels required when called: 6
  9385 ;; This function calls:
  9386 ;;		_lcd_send_byte
  9387 ;; This function is called by:
  9388 ;;		_lcd_putc
  9389 ;;		_main
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           	psect	text35
  9394   005066                     __ptext35:
  9395                           	callstack 0
  9396   005066                     _lcd_gotoxy:
  9397                           	callstack 22
  9398                           
  9399                           ;incstack = 0
  9400                           ;lcd_gotoxy@x stored from wreg
  9401   005066  6E21               	movwf	lcd_gotoxy@x^0,c
  9402   005068                     
  9403                           ;newfile.c: 223:     unsigned char address;;newfile.c: 225:     switch (y) {
  9404   005068  EF46  F028         	goto	l4796
  9405   00506C                     l4786:
  9406   00506C  0E80               	movlw	128
  9407   00506E  6E22               	movwf	lcd_gotoxy@address^0,c
  9408                           
  9409                           ;newfile.c: 227:             break;
  9410   005070  EF63  F028         	goto	l4798
  9411   005074                     l4788:
  9412   005074  0EC0               	movlw	192
  9413   005076  6E22               	movwf	lcd_gotoxy@address^0,c
  9414                           
  9415                           ;newfile.c: 229:             break;
  9416   005078  EF63  F028         	goto	l4798
  9417   00507C                     l4790:
  9418   00507C  0E90               	movlw	144
  9419   00507E  6E22               	movwf	lcd_gotoxy@address^0,c
  9420                           
  9421                           ;newfile.c: 231:             break;
  9422   005080  EF63  F028         	goto	l4798
  9423   005084                     l4792:
  9424   005084  0ED0               	movlw	208
  9425   005086  6E22               	movwf	lcd_gotoxy@address^0,c
  9426                           
  9427                           ;newfile.c: 233:             break;
  9428   005088  EF63  F028         	goto	l4798
  9429   00508C                     l4796:
  9430   00508C  501E               	movf	lcd_gotoxy@y^0,w,c
  9431   00508E  6E1F               	movwf	??_lcd_gotoxy^0,c
  9432   005090  6A20               	clrf	(??_lcd_gotoxy+1)^0,c
  9433                           
  9434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9435                           ; Switch size 1, requested type "simple"
  9436                           ; Number of cases is 1, Range of values is 0 to 0
  9437                           ; switch strategies available:
  9438                           ; Name         Instructions Cycles
  9439                           ; simple_byte            4     3 (average)
  9440                           ;	Chosen strategy is simple_byte
  9441   005092  5020               	movf	(??_lcd_gotoxy+1)^0,w,c
  9442   005094  0A00               	xorlw	0	; case 0
  9443   005096  B4D8               	btfsc	status,2,c
  9444   005098  EF50  F028         	goto	l7714
  9445   00509C  EF63  F028         	goto	l4798
  9446   0050A0                     l7714:
  9447                           
  9448                           ; Switch size 1, requested type "simple"
  9449                           ; Number of cases is 4, Range of values is 1 to 4
  9450                           ; switch strategies available:
  9451                           ; Name         Instructions Cycles
  9452                           ; simple_byte           13     7 (average)
  9453                           ;	Chosen strategy is simple_byte
  9454   0050A0  501F               	movf	??_lcd_gotoxy^0,w,c
  9455   0050A2  0A01               	xorlw	1	; case 1
  9456   0050A4  B4D8               	btfsc	status,2,c
  9457   0050A6  EF36  F028         	goto	l4786
  9458   0050AA  0A03               	xorlw	3	; case 2
  9459   0050AC  B4D8               	btfsc	status,2,c
  9460   0050AE  EF3A  F028         	goto	l4788
  9461   0050B2  0A01               	xorlw	1	; case 3
  9462   0050B4  B4D8               	btfsc	status,2,c
  9463   0050B6  EF3E  F028         	goto	l4790
  9464   0050BA  0A07               	xorlw	7	; case 4
  9465   0050BC  B4D8               	btfsc	status,2,c
  9466   0050BE  EF42  F028         	goto	l4792
  9467   0050C2  EF63  F028         	goto	l4798
  9468   0050C6                     l4798:
  9469                           
  9470                           ;newfile.c: 235:     address += x - 1;
  9471   0050C6  0421               	decf	lcd_gotoxy@x^0,w,c
  9472   0050C8  2622               	addwf	lcd_gotoxy@address^0,f,c
  9473   0050CA                     
  9474                           ;newfile.c: 236:     lcd_send_byte(0, (unsigned char) (0x80 | address));
  9475   0050CA  5022               	movf	lcd_gotoxy@address^0,w,c
  9476   0050CC  0980               	iorlw	128
  9477   0050CE  6E1C               	movwf	lcd_send_byte@n^0,c
  9478   0050D0  0E00               	movlw	0
  9479   0050D2  EC0E  F029         	call	_lcd_send_byte
  9480   0050D6  0012               	return		;funcret
  9481   0050D8                     __end_of_lcd_gotoxy:
  9482                           	callstack 0
  9483                           
  9484 ;; *************** function _lcd_init *****************
  9485 ;; Defined at:
  9486 ;;		line 207 in file "newfile.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;		None
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;  i               1   29[COMRAM] unsigned char 
  9491 ;; Return value:  Size  Location     Type
  9492 ;;                  1    wreg      void 
  9493 ;; Registers used:
  9494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9504 ;;Total ram usage:        1 bytes
  9505 ;; Hardware stack levels used: 1
  9506 ;; Hardware stack levels required when called: 6
  9507 ;; This function calls:
  9508 ;;		_delay_ms
  9509 ;;		_lcd_send_byte
  9510 ;;		_lcd_send_nibble
  9511 ;; This function is called by:
  9512 ;;		_main
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text36
  9517   00514A                     __ptext36:
  9518                           	callstack 0
  9519   00514A                     _lcd_init:
  9520                           	callstack 24
  9521   00514A                     
  9522                           ;newfile.c: 208:     unsigned char i;;newfile.c: 209:     PORTEbits.RE2 = 0;
  9523   00514A  9484               	bcf	132,2,c	;volatile
  9524                           
  9525                           ;newfile.c: 210:     PORTEbits.RE1 = 0;
  9526   00514C  9284               	bcf	132,1,c	;volatile
  9527   00514E                     
  9528                           ;newfile.c: 212:     delay_ms(25);
  9529   00514E  0E00               	movlw	0
  9530   005150  6E15               	movwf	(delay_ms@n+1)^0,c
  9531   005152  0E19               	movlw	25
  9532   005154  6E14               	movwf	delay_ms@n^0,c
  9533   005156  EC2D  F02B         	call	_delay_ms	;wreg free
  9534   00515A                     
  9535                           ;newfile.c: 213:     for (i = 1; i <= 3; ++i) {
  9536   00515A  0E01               	movlw	1
  9537   00515C  6E1E               	movwf	lcd_init@i^0,c
  9538   00515E                     l5256:
  9539                           
  9540                           ;newfile.c: 214:         lcd_send_nibble(3);
  9541   00515E  0E03               	movlw	3
  9542   005160  EC9A  F02B         	call	_lcd_send_nibble
  9543                           
  9544                           ;newfile.c: 215:         delay_ms(6);
  9545   005164  0E00               	movlw	0
  9546   005166  6E15               	movwf	(delay_ms@n+1)^0,c
  9547   005168  0E06               	movlw	6
  9548   00516A  6E14               	movwf	delay_ms@n^0,c
  9549   00516C  EC2D  F02B         	call	_delay_ms	;wreg free
  9550   005170                     
  9551                           ;newfile.c: 216:     }
  9552   005170  2A1E               	incf	lcd_init@i^0,f,c
  9553   005172  0E03               	movlw	3
  9554   005174  641E               	cpfsgt	lcd_init@i^0,c
  9555   005176  EFBF  F028         	goto	u5901
  9556   00517A  EFC1  F028         	goto	u5900
  9557   00517E                     u5901:
  9558   00517E  EFAF  F028         	goto	l5256
  9559   005182                     u5900:
  9560   005182                     
  9561                           ;newfile.c: 218:     lcd_send_nibble(2);
  9562   005182  0E02               	movlw	2
  9563   005184  EC9A  F02B         	call	_lcd_send_nibble
  9564   005188                     
  9565                           ;newfile.c: 219:     for (i = 0; i <= 3; ++i) lcd_send_byte(0, LCD_INIT_STRING[i]);
  9566   005188  0E00               	movlw	0
  9567   00518A  6E1E               	movwf	lcd_init@i^0,c
  9568   00518C                     l5270:
  9569   00518C  0EF1               	movlw	low _LCD_INIT_STRING
  9570   00518E  241E               	addwf	lcd_init@i^0,w,c
  9571   005190  6ED9               	movwf	fsr2l,c
  9572   005192  6ADA               	clrf	fsr2h,c
  9573   005194  0E00               	movlw	high _LCD_INIT_STRING
  9574   005196  22DA               	addwfc	fsr2h,f,c
  9575   005198  50DF               	movf	indf2,w,c
  9576   00519A  6E1C               	movwf	lcd_send_byte@n^0,c
  9577   00519C  0E00               	movlw	0
  9578   00519E  EC0E  F029         	call	_lcd_send_byte
  9579   0051A2  2A1E               	incf	lcd_init@i^0,f,c
  9580   0051A4  0E03               	movlw	3
  9581   0051A6  641E               	cpfsgt	lcd_init@i^0,c
  9582   0051A8  EFD8  F028         	goto	u5911
  9583   0051AC  EFDA  F028         	goto	u5910
  9584   0051B0                     u5911:
  9585   0051B0  EFC6  F028         	goto	l5270
  9586   0051B4                     u5910:
  9587   0051B4  0012               	return		;funcret
  9588   0051B6                     __end_of_lcd_init:
  9589                           	callstack 0
  9590                           
  9591 ;; *************** function _lcd_send_byte *****************
  9592 ;; Defined at:
  9593 ;;		line 196 in file "newfile.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  cm_data         1    wreg     unsigned char 
  9596 ;;  n               1   27[COMRAM] unsigned char 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  cm_data         1   28[COMRAM] unsigned char 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2, status,0, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9608 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;Total ram usage:        2 bytes
  9613 ;; Hardware stack levels used: 1
  9614 ;; Hardware stack levels required when called: 5
  9615 ;; This function calls:
  9616 ;;		_delay_cycles
  9617 ;;		_delay_ms
  9618 ;;		_lcd_send_nibble
  9619 ;; This function is called by:
  9620 ;;		_lcd_init
  9621 ;;		_lcd_gotoxy
  9622 ;;		_lcd_putc
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text37
  9627   00521C                     __ptext37:
  9628                           	callstack 0
  9629   00521C                     _lcd_send_byte:
  9630                           	callstack 23
  9631                           
  9632                           ;incstack = 0
  9633                           ;lcd_send_byte@cm_data stored from wreg
  9634   00521C  6E1D               	movwf	lcd_send_byte@cm_data^0,c
  9635   00521E                     
  9636                           ;newfile.c: 197:     PORTEbits.RE2 = cm_data;
  9637   00521E  B01D               	btfsc	lcd_send_byte@cm_data^0,0,c
  9638   005220  D002               	bra	u4745
  9639   005222  9484               	bcf	132,2,c	;volatile
  9640   005224  D001               	bra	u4746
  9641   005226                     u4745:
  9642   005226  8484               	bsf	132,2,c	;volatile
  9643   005228                     u4746:
  9644   005228                     
  9645                           ;newfile.c: 198:     delay_cycles(1);
  9646   005228  0E01               	movlw	1
  9647   00522A  ECF4  F02A         	call	_delay_cycles
  9648   00522E                     
  9649                           ;newfile.c: 199:     delay_cycles(1);
  9650   00522E  0E01               	movlw	1
  9651   005230  ECF4  F02A         	call	_delay_cycles
  9652   005234                     
  9653                           ;newfile.c: 200:     PORTEbits.RE1 = 0;
  9654   005234  9284               	bcf	132,1,c	;volatile
  9655   005236                     
  9656                           ;newfile.c: 201:     lcd_send_nibble(n >> 4);
  9657   005236  381C               	swapf	lcd_send_byte@n^0,w,c
  9658   005238  0B0F               	andlw	15
  9659   00523A  EC9A  F02B         	call	_lcd_send_nibble
  9660   00523E                     
  9661                           ;newfile.c: 202:     lcd_send_nibble(n & 0x0f);
  9662   00523E  501C               	movf	lcd_send_byte@n^0,w,c
  9663   005240  0B0F               	andlw	15
  9664   005242  EC9A  F02B         	call	_lcd_send_nibble
  9665   005246                     
  9666                           ;newfile.c: 203:     if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0))
      +                          );
  9667   005246  501D               	movf	lcd_send_byte@cm_data^0,w,c
  9668   005248  B4D8               	btfsc	status,2,c
  9669   00524A  EF29  F029         	goto	u4751
  9670   00524E  EF2B  F029         	goto	u4750
  9671   005252                     u4751:
  9672   005252  EF31  F029         	goto	l4394
  9673   005256                     u4750:
  9674   005256  0E32               	movlw	50
  9675   005258                     u9247:
  9676   005258  0004               	clrwdt	
  9677   00525A  2EE8               	decfsz	wreg,f,c
  9678   00525C  D7FD               	bra	u9247
  9679   00525E  EF37  F029         	goto	l133
  9680   005262                     l4394:
  9681   005262  0E00               	movlw	0
  9682   005264  6E15               	movwf	(delay_ms@n+1)^0,c
  9683   005266  0E02               	movlw	2
  9684   005268  6E14               	movwf	delay_ms@n^0,c
  9685   00526A  EC2D  F02B         	call	_delay_ms	;wreg free
  9686   00526E                     l133:
  9687   00526E  0012               	return		;funcret
  9688   005270                     __end_of_lcd_send_byte:
  9689                           	callstack 0
  9690                           
  9691 ;; *************** function _lcd_send_nibble *****************
  9692 ;; Defined at:
  9693 ;;		line 188 in file "newfile.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  n               1    wreg     unsigned char 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  n               1   26[COMRAM] unsigned char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  1    wreg      void 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0, cstack
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9711 ;;Total ram usage:        2 bytes
  9712 ;; Hardware stack levels used: 1
  9713 ;; Hardware stack levels required when called: 4
  9714 ;; This function calls:
  9715 ;;		_delay_cycles
  9716 ;; This function is called by:
  9717 ;;		_lcd_send_byte
  9718 ;;		_lcd_init
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text38
  9723   005734                     __ptext38:
  9724                           	callstack 0
  9725   005734                     _lcd_send_nibble:
  9726                           	callstack 23
  9727                           
  9728                           ;incstack = 0
  9729                           ;lcd_send_nibble@n stored from wreg
  9730   005734  6E1B               	movwf	lcd_send_nibble@n^0,c
  9731   005736                     
  9732                           ;newfile.c: 189:     lcd.data = n;
  9733   005736  C01B  F01A         	movff	lcd_send_nibble@n,??_lcd_send_nibble
  9734   00573A  3A1A               	swapf	??_lcd_send_nibble^0,f,c
  9735   00573C  5083               	movf	131,w,c
  9736   00573E  181A               	xorwf	??_lcd_send_nibble^0,w,c
  9737   005740  0B0F               	andlw	-241
  9738   005742  181A               	xorwf	??_lcd_send_nibble^0,w,c
  9739   005744  6E83               	movwf	131,c
  9740   005746                     
  9741                           ;newfile.c: 190:     delay_cycles(1);
  9742   005746  0E01               	movlw	1
  9743   005748  ECF4  F02A         	call	_delay_cycles
  9744   00574C                     
  9745                           ;newfile.c: 191:     PORTEbits.RE1 = 1;
  9746   00574C  8284               	bsf	132,1,c	;volatile
  9747   00574E                     
  9748                           ;newfile.c: 192:     _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
  9749   00574E  0004               	clrwdt	
  9750   005750  F000               	nop		;2 cycle nop
  9751   005752                     
  9752                           ;newfile.c: 193:     PORTEbits.RE1 = 0;
  9753   005752  9284               	bcf	132,1,c	;volatile
  9754   005754  0012               	return		;funcret
  9755   005756                     __end_of_lcd_send_nibble:
  9756                           	callstack 0
  9757                           
  9758 ;; *************** function _delay_cycles *****************
  9759 ;; Defined at:
  9760 ;;		line 116 in file "newfile.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;  n               1    wreg     unsigned char 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;  n               1   22[COMRAM] unsigned char 
  9765 ;;  x               2   23[COMRAM] int 
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9776 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9777 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;Total ram usage:        6 bytes
  9780 ;; Hardware stack levels used: 1
  9781 ;; Hardware stack levels required when called: 3
  9782 ;; This function calls:
  9783 ;;		Nothing
  9784 ;; This function is called by:
  9785 ;;		_lcd_send_nibble
  9786 ;;		_lcd_send_byte
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           	psect	text39
  9791   0055E8                     __ptext39:
  9792                           	callstack 0
  9793   0055E8                     _delay_cycles:
  9794                           	callstack 23
  9795                           
  9796                           ;incstack = 0
  9797                           ;delay_cycles@n stored from wreg
  9798   0055E8  6E17               	movwf	delay_cycles@n^0,c
  9799   0055EA                     
  9800                           ;newfile.c: 117:     int x;;newfile.c: 118:     for (x = 0; x <= n; x++) __asm(" clrwdt"
      +                          );
  9801   0055EA  0E00               	movlw	0
  9802   0055EC  6E19               	movwf	(delay_cycles@x+1)^0,c
  9803   0055EE  0E00               	movlw	0
  9804   0055F0  6E18               	movwf	delay_cycles@x^0,c
  9805   0055F2  EFFE  F02A         	goto	l3582
  9806   0055F6                     l100:
  9807   0055F6  0004               	clrwdt		;# 
  9808   0055F8  4A18               	infsnz	delay_cycles@x^0,f,c
  9809   0055FA  2A19               	incf	(delay_cycles@x+1)^0,f,c
  9810   0055FC                     l3582:
  9811   0055FC  5017               	movf	delay_cycles@n^0,w,c
  9812   0055FE  6E14               	movwf	??_delay_cycles^0,c
  9813   005600  6A15               	clrf	(??_delay_cycles+1)^0,c
  9814   005602  5018               	movf	delay_cycles@x^0,w,c
  9815   005604  5C14               	subwf	??_delay_cycles^0,w,c
  9816   005606  5015               	movf	(??_delay_cycles+1)^0,w,c
  9817   005608  0A80               	xorlw	128
  9818   00560A  6E16               	movwf	(??_delay_cycles+2)^0,c
  9819   00560C  5019               	movf	(delay_cycles@x+1)^0,w,c
  9820   00560E  0A80               	xorlw	128
  9821   005610  5816               	subwfb	(??_delay_cycles+2)^0,w,c
  9822   005612  B0D8               	btfsc	status,0,c
  9823   005614  EF0E  F02B         	goto	u3301
  9824   005618  EF10  F02B         	goto	u3300
  9825   00561C                     u3301:
  9826   00561C  EFFB  F02A         	goto	l100
  9827   005620                     u3300:
  9828   005620  0012               	return		;funcret
  9829   005622                     __end_of_delay_cycles:
  9830                           	callstack 0
  9831                           
  9832 ;; *************** function _init_adc_no_lib *****************
  9833 ;; Defined at:
  9834 ;;		line 164 in file "newfile.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;		None
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;		None
  9839 ;; Return value:  Size  Location     Type
  9840 ;;                  1    wreg      void 
  9841 ;; Registers used:
  9842 ;;		wreg, status,2
  9843 ;; Tracked objects:
  9844 ;;		On entry : 0/0
  9845 ;;		On exit  : 0/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9852 ;;Total ram usage:        0 bytes
  9853 ;; Hardware stack levels used: 1
  9854 ;; Hardware stack levels required when called: 3
  9855 ;; This function calls:
  9856 ;;		Nothing
  9857 ;; This function is called by:
  9858 ;;		_main
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           	psect	text40
  9863   005756                     __ptext40:
  9864                           	callstack 0
  9865   005756                     _init_adc_no_lib:
  9866                           	callstack 27
  9867   005756                     
  9868                           ;newfile.c: 165:     ADCON0 = 0;
  9869   005756  0E00               	movlw	0
  9870   005758  6EC2               	movwf	194,c	;volatile
  9871   00575A                     
  9872                           ;newfile.c: 166:     ADCON0bits.ADON = 1;
  9873   00575A  80C2               	bsf	194,0,c	;volatile
  9874                           
  9875                           ;newfile.c: 167:     ADCON2 = 0b10001001;
  9876   00575C  0E89               	movlw	137
  9877   00575E  6EC0               	movwf	192,c	;volatile
  9878   005760  0012               	return		;funcret
  9879   005762                     __end_of_init_adc_no_lib:
  9880                           	callstack 0
  9881                           
  9882 ;; *************** function _init *****************
  9883 ;; Defined at:
  9884 ;;		line 260 in file "newfile.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;		None
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, status,2, cstack
  9893 ;; Tracked objects:
  9894 ;;		On entry : 0/0
  9895 ;;		On exit  : 0/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9902 ;;Total ram usage:        0 bytes
  9903 ;; Hardware stack levels used: 1
  9904 ;; Hardware stack levels required when called: 4
  9905 ;; This function calls:
  9906 ;;		_restartTimer0
  9907 ;; This function is called by:
  9908 ;;		_main
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           	psect	text41
  9913   004F0A                     __ptext41:
  9914                           	callstack 0
  9915   004F0A                     _init:
  9916                           	callstack 26
  9917   004F0A                     
  9918                           ;newfile.c: 263:     ADCON0 = 0x00;
  9919   004F0A  0E00               	movlw	0
  9920   004F0C  6EC2               	movwf	194,c	;volatile
  9921                           
  9922                           ;newfile.c: 264:     ADCON1 = 0x0C;
  9923   004F0E  0E0C               	movlw	12
  9924   004F10  6EC1               	movwf	193,c	;volatile
  9925   004F12                     
  9926                           ;newfile.c: 265:     TRISA = 0xFF;
  9927   004F12  6892               	setf	146,c	;volatile
  9928   004F14                     
  9929                           ;newfile.c: 266:     TRISB = 0xFF;
  9930   004F14  6893               	setf	147,c	;volatile
  9931                           
  9932                           ;newfile.c: 267:     TRISC = 0x80;
  9933   004F16  0E80               	movlw	128
  9934   004F18  6E94               	movwf	148,c	;volatile
  9935                           
  9936                           ;newfile.c: 268:     TRISD = 0x00;
  9937   004F1A  0E00               	movlw	0
  9938   004F1C  6E95               	movwf	149,c	;volatile
  9939                           
  9940                           ;newfile.c: 269:     TRISE = 0x00;
  9941   004F1E  0E00               	movlw	0
  9942   004F20  6E96               	movwf	150,c	;volatile
  9943                           
  9944                           ;newfile.c: 270:     PORTD = 0;
  9945   004F22  0E00               	movlw	0
  9946   004F24  6E83               	movwf	131,c	;volatile
  9947                           
  9948                           ;newfile.c: 271:     PIE1 = 0;
  9949   004F26  0E00               	movlw	0
  9950   004F28  6E9D               	movwf	157,c	;volatile
  9951   004F2A                     
  9952                           ;newfile.c: 274:     INTCONbits.GIEH = 1;
  9953   004F2A  8EF2               	bsf	242,7,c	;volatile
  9954   004F2C                     
  9955                           ;newfile.c: 275:     INTCONbits.GIEL = 1;
  9956   004F2C  8CF2               	bsf	242,6,c	;volatile
  9957                           
  9958                           ;newfile.c: 276:     INTCON2 = 0;
  9959   004F2E  0E00               	movlw	0
  9960   004F30  6EF1               	movwf	241,c	;volatile
  9961                           
  9962                           ;newfile.c: 277:     INTCON3 = 0;
  9963   004F32  0E00               	movlw	0
  9964   004F34  6EF0               	movwf	240,c	;volatile
  9965   004F36                     
  9966                           ;newfile.c: 278:     INTCON2bits.INTEDG0 = 1;
  9967   004F36  8CF1               	bsf	241,6,c	;volatile
  9968   004F38                     
  9969                           ;newfile.c: 279:     INTCON2bits.INTEDG1 = 1;
  9970   004F38  8AF1               	bsf	241,5,c	;volatile
  9971   004F3A                     
  9972                           ;newfile.c: 280:     INTCON2bits.INTEDG2 = 1;
  9973   004F3A  88F1               	bsf	241,4,c	;volatile
  9974   004F3C                     
  9975                           ;newfile.c: 281:     INTCON3bits.INT1IE = 1;
  9976   004F3C  86F0               	bsf	240,3,c	;volatile
  9977   004F3E                     
  9978                           ;newfile.c: 282:     INTCON3bits.INT2IE = 1;
  9979   004F3E  88F0               	bsf	240,4,c	;volatile
  9980   004F40                     
  9981                           ;newfile.c: 283:     RCONbits.IPEN = 0;
  9982   004F40  9ED0               	bcf	208,7,c	;volatile
  9983   004F42                     
  9984                           ;newfile.c: 284:     INTCONbits.INT0IE = 1;
  9985   004F42  88F2               	bsf	242,4,c	;volatile
  9986   004F44                     
  9987                           ;newfile.c: 285:     PORTCbits.RC5 = 0;
  9988   004F44  9A82               	bcf	130,5,c	;volatile
  9989                           
  9990                           ;newfile.c: 288:     seconds = 0;
  9991   004F46  0E00               	movlw	0
  9992   004F48  0101               	movlb	1	; () banked
  9993   004F4A  6F0D               	movwf	(_seconds+1)& (0+255),b
  9994   004F4C  0E00               	movlw	0
  9995   004F4E  6F0C               	movwf	_seconds& (0+255),b
  9996                           
  9997                           ;newfile.c: 289:     minutes = 0;
  9998   004F50  0E00               	movlw	0
  9999   004F52  6E68               	movwf	(_minutes+1)^0,c
 10000   004F54  0E00               	movlw	0
 10001   004F56  6E67               	movwf	_minutes^0,c
 10002                           
 10003                           ;newfile.c: 290:     hours = 0;
 10004   004F58  0E00               	movlw	0
 10005   004F5A  6E66               	movwf	(_hours+1)^0,c
 10006   004F5C  0E00               	movlw	0
 10007   004F5E  6E65               	movwf	_hours^0,c
 10008                           
 10009                           ;newfile.c: 291:     Mode = 0;
 10010   004F60  0E00               	movlw	0
 10011   004F62  6E64               	movwf	(_Mode+1)^0,c
 10012   004F64  0E00               	movlw	0
 10013   004F66  6E63               	movwf	_Mode^0,c
 10014                           
 10015                           ;newfile.c: 294:     T0CON = 0;
 10016   004F68  0E00               	movlw	0
 10017   004F6A  6ED5               	movwf	213,c	;volatile
 10018   004F6C                     
 10019                           ; BSR set to: 1
 10020                           ;newfile.c: 295:     T0CONbits.T0PS0 = 1;
 10021   004F6C  80D5               	bsf	213,0,c	;volatile
 10022   004F6E                     
 10023                           ; BSR set to: 1
 10024                           ;newfile.c: 296:     T0CONbits.T0PS1 = 1;
 10025   004F6E  82D5               	bsf	213,1,c	;volatile
 10026   004F70                     
 10027                           ; BSR set to: 1
 10028                           ;newfile.c: 297:     T0CONbits.T0PS2 = 0;
 10029   004F70  94D5               	bcf	213,2,c	;volatile
 10030   004F72                     
 10031                           ; BSR set to: 1
 10032                           ;newfile.c: 298:     T0CONbits.TMR0ON = 1;
 10033   004F72  8ED5               	bsf	213,7,c	;volatile
 10034   004F74                     
 10035                           ; BSR set to: 1
 10036                           ;newfile.c: 299:     INTCONbits.TMR0IE = 1;
 10037   004F74  8AF2               	bsf	242,5,c	;volatile
 10038   004F76                     
 10039                           ; BSR set to: 1
 10040                           ;newfile.c: 300:     T0CONbits.TMR0ON = 1;
 10041   004F76  8ED5               	bsf	213,7,c	;volatile
 10042   004F78                     
 10043                           ; BSR set to: 1
 10044                           ;newfile.c: 301:     restartTimer0();
 10045   004F78  ECBD  F02B         	call	_restartTimer0	;wreg free
 10046   004F7C  0012               	return		;funcret
 10047   004F7E                     __end_of_init:
 10048                           	callstack 0
 10049                           
 10050 ;; *************** function _restartTimer0 *****************
 10051 ;; Defined at:
 10052 ;;		line 121 in file "newfile.c"
 10053 ;; Parameters:    Size  Location     Type
 10054 ;;		None
 10055 ;; Auto vars:     Size  Location     Type
 10056 ;;		None
 10057 ;; Return value:  Size  Location     Type
 10058 ;;                  1    wreg      void 
 10059 ;; Registers used:
 10060 ;;		wreg, status,2
 10061 ;; Tracked objects:
 10062 ;;		On entry : 0/0
 10063 ;;		On exit  : 0/0
 10064 ;;		Unchanged: 0/0
 10065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10070 ;;Total ram usage:        0 bytes
 10071 ;; Hardware stack levels used: 1
 10072 ;; Hardware stack levels required when called: 3
 10073 ;; This function calls:
 10074 ;;		Nothing
 10075 ;; This function is called by:
 10076 ;;		_init
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           
 10080                           	psect	text42
 10081   00577A                     __ptext42:
 10082                           	callstack 0
 10083   00577A                     _restartTimer0:
 10084                           	callstack 26
 10085   00577A                     
 10086                           ;newfile.c: 122:     TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 10087   00577A  0E0B               	movlw	11
 10088   00577C  6ED7               	movwf	215,c	;volatile
 10089                           
 10090                           ;newfile.c: 123:     TMR0L = (unsigned char) (3036 & 0x00FF);
 10091   00577E  0EDC               	movlw	220
 10092   005780  6ED6               	movwf	214,c	;volatile
 10093   005782  0012               	return		;funcret
 10094   005784                     __end_of_restartTimer0:
 10095                           	callstack 0
 10096                           
 10097 ;; *************** function _incrementClock *****************
 10098 ;; Defined at:
 10099 ;;		line 326 in file "newfile.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;		None
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;		None
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  1    wreg      void 
 10106 ;; Registers used:
 10107 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;Total ram usage:        4 bytes
 10118 ;; Hardware stack levels used: 1
 10119 ;; Hardware stack levels required when called: 4
 10120 ;; This function calls:
 10121 ;;		___awdiv
 10122 ;;		___lwdiv
 10123 ;;		___wmul
 10124 ;; This function is called by:
 10125 ;;		_main
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           	psect	text43
 10130   0035D2                     __ptext43:
 10131                           	callstack 0
 10132   0035D2                     _incrementClock:
 10133                           	callstack 26
 10134   0035D2                     
 10135                           ;newfile.c: 327:     if (state == 0) {
 10136   0035D2  506A               	movf	_state^0,w,c
 10137   0035D4  106B               	iorwf	(_state+1)^0,w,c
 10138   0035D6  A4D8               	btfss	status,2,c
 10139   0035D8  EFF0  F01A         	goto	u8791
 10140   0035DC  EFF2  F01A         	goto	u8790
 10141   0035E0                     u8791:
 10142   0035E0  EF40  F01B         	goto	l7266
 10143   0035E4                     u8790:
 10144   0035E4                     
 10145                           ;newfile.c: 328:         if (Mode == 0) {
 10146   0035E4  5063               	movf	_Mode^0,w,c
 10147   0035E6  1064               	iorwf	(_Mode+1)^0,w,c
 10148   0035E8  A4D8               	btfss	status,2,c
 10149   0035EA  EFF9  F01A         	goto	u8801
 10150   0035EE  EFFB  F01A         	goto	u8800
 10151   0035F2                     u8801:
 10152   0035F2  EFFF  F01A         	goto	l7248
 10153   0035F6                     u8800:
 10154   0035F6                     
 10155                           ;newfile.c: 329:             total_time++;
 10156   0035F6  4A5F               	infsnz	_total_time^0,f,c
 10157   0035F8  2A60               	incf	(_total_time+1)^0,f,c
 10158                           
 10159                           ;newfile.c: 330:         } else if (Mode == 1) {
 10160   0035FA  EFCD  F01B         	goto	l7308
 10161   0035FE                     l7248:
 10162   0035FE  0463               	decf	_Mode^0,w,c
 10163   003600  1064               	iorwf	(_Mode+1)^0,w,c
 10164   003602  A4D8               	btfss	status,2,c
 10165   003604  EF06  F01B         	goto	u8811
 10166   003608  EF08  F01B         	goto	u8810
 10167   00360C                     u8811:
 10168   00360C  EF0E  F01B         	goto	l7252
 10169   003610                     u8810:
 10170   003610                     
 10171                           ;newfile.c: 331:             total_time += 10;
 10172   003610  0E0A               	movlw	10
 10173   003612  265F               	addwf	_total_time^0,f,c
 10174   003614  0E00               	movlw	0
 10175   003616  2260               	addwfc	(_total_time+1)^0,f,c
 10176                           
 10177                           ;newfile.c: 332:         } else if (Mode == 2) {
 10178   003618  EFCD  F01B         	goto	l7308
 10179   00361C                     l7252:
 10180   00361C  0E02               	movlw	2
 10181   00361E  1863               	xorwf	_Mode^0,w,c
 10182   003620  1064               	iorwf	(_Mode+1)^0,w,c
 10183   003622  A4D8               	btfss	status,2,c
 10184   003624  EF16  F01B         	goto	u8821
 10185   003628  EF18  F01B         	goto	u8820
 10186   00362C                     u8821:
 10187   00362C  EF1E  F01B         	goto	l7256
 10188   003630                     u8820:
 10189   003630                     
 10190                           ;newfile.c: 333:             total_time += 60;
 10191   003630  0E3C               	movlw	60
 10192   003632  265F               	addwf	_total_time^0,f,c
 10193   003634  0E00               	movlw	0
 10194   003636  2260               	addwfc	(_total_time+1)^0,f,c
 10195                           
 10196                           ;newfile.c: 334:         } else if (Mode == 3) {
 10197   003638  EFCD  F01B         	goto	l7308
 10198   00363C                     l7256:
 10199   00363C  0E03               	movlw	3
 10200   00363E  1863               	xorwf	_Mode^0,w,c
 10201   003640  1064               	iorwf	(_Mode+1)^0,w,c
 10202   003642  A4D8               	btfss	status,2,c
 10203   003644  EF26  F01B         	goto	u8831
 10204   003648  EF28  F01B         	goto	u8830
 10205   00364C                     u8831:
 10206   00364C  EF2E  F01B         	goto	l7260
 10207   003650                     u8830:
 10208   003650                     
 10209                           ;newfile.c: 335:             total_time += 600;
 10210   003650  0E58               	movlw	88
 10211   003652  265F               	addwf	_total_time^0,f,c
 10212   003654  0E02               	movlw	2
 10213   003656  2260               	addwfc	(_total_time+1)^0,f,c
 10214                           
 10215                           ;newfile.c: 336:         } else if (Mode == 4) {
 10216   003658  EFCD  F01B         	goto	l7308
 10217   00365C                     l7260:
 10218   00365C  0E04               	movlw	4
 10219   00365E  1863               	xorwf	_Mode^0,w,c
 10220   003660  1064               	iorwf	(_Mode+1)^0,w,c
 10221   003662  A4D8               	btfss	status,2,c
 10222   003664  EF36  F01B         	goto	u8841
 10223   003668  EF38  F01B         	goto	u8840
 10224   00366C                     u8841:
 10225   00366C  EF3E  F01B         	goto	l191
 10226   003670                     u8840:
 10227   003670                     
 10228                           ;newfile.c: 337:             total_time += 3600;
 10229   003670  0E10               	movlw	16
 10230   003672  265F               	addwf	_total_time^0,f,c
 10231   003674  0E0E               	movlw	14
 10232   003676  2260               	addwfc	(_total_time+1)^0,f,c
 10233   003678  EFCD  F01B         	goto	l7308
 10234   00367C                     l191:
 10235   00367C  EFCD  F01B         	goto	l7308
 10236   003680                     l7266:
 10237   003680  046A               	decf	_state^0,w,c
 10238   003682  106B               	iorwf	(_state+1)^0,w,c
 10239   003684  A4D8               	btfss	status,2,c
 10240   003686  EF47  F01B         	goto	u8851
 10241   00368A  EF49  F01B         	goto	u8850
 10242   00368E                     u8851:
 10243   00368E  EFCD  F01B         	goto	l7308
 10244   003692                     u8850:
 10245   003692                     
 10246                           ;newfile.c: 347:         if (Mode == 0) {
 10247   003692  5063               	movf	_Mode^0,w,c
 10248   003694  1064               	iorwf	(_Mode+1)^0,w,c
 10249   003696  A4D8               	btfss	status,2,c
 10250   003698  EF50  F01B         	goto	u8861
 10251   00369C  EF52  F01B         	goto	u8860
 10252   0036A0                     u8861:
 10253   0036A0  EF56  F01B         	goto	l7272
 10254   0036A4                     u8860:
 10255   0036A4                     
 10256                           ;newfile.c: 348:             snd++;
 10257   0036A4  4A5D               	infsnz	_snd^0,f,c
 10258   0036A6  2A5E               	incf	(_snd+1)^0,f,c
 10259                           
 10260                           ;newfile.c: 350:         } else if (Mode == 1) {
 10261   0036A8  EF92  F01B         	goto	l7288
 10262   0036AC                     l7272:
 10263   0036AC  0463               	decf	_Mode^0,w,c
 10264   0036AE  1064               	iorwf	(_Mode+1)^0,w,c
 10265   0036B0  A4D8               	btfss	status,2,c
 10266   0036B2  EF5D  F01B         	goto	u8871
 10267   0036B6  EF5F  F01B         	goto	u8870
 10268   0036BA                     u8871:
 10269   0036BA  EF65  F01B         	goto	l7276
 10270   0036BE                     u8870:
 10271   0036BE                     
 10272                           ;newfile.c: 351:             snd += 10;
 10273   0036BE  0E0A               	movlw	10
 10274   0036C0  265D               	addwf	_snd^0,f,c
 10275   0036C2  0E00               	movlw	0
 10276   0036C4  225E               	addwfc	(_snd+1)^0,f,c
 10277                           
 10278                           ;newfile.c: 353:         } else if (Mode == 2) {
 10279   0036C6  EF92  F01B         	goto	l7288
 10280   0036CA                     l7276:
 10281   0036CA  0E02               	movlw	2
 10282   0036CC  1863               	xorwf	_Mode^0,w,c
 10283   0036CE  1064               	iorwf	(_Mode+1)^0,w,c
 10284   0036D0  A4D8               	btfss	status,2,c
 10285   0036D2  EF6D  F01B         	goto	u8881
 10286   0036D6  EF6F  F01B         	goto	u8880
 10287   0036DA                     u8881:
 10288   0036DA  EF73  F01B         	goto	l7280
 10289   0036DE                     u8880:
 10290   0036DE                     
 10291                           ;newfile.c: 354:             min += 1;
 10292   0036DE  4A5B               	infsnz	_min^0,f,c
 10293   0036E0  2A5C               	incf	(_min+1)^0,f,c
 10294                           
 10295                           ;newfile.c: 355:         } else if (Mode == 3) {
 10296   0036E2  EF92  F01B         	goto	l7288
 10297   0036E6                     l7280:
 10298   0036E6  0E03               	movlw	3
 10299   0036E8  1863               	xorwf	_Mode^0,w,c
 10300   0036EA  1064               	iorwf	(_Mode+1)^0,w,c
 10301   0036EC  A4D8               	btfss	status,2,c
 10302   0036EE  EF7B  F01B         	goto	u8891
 10303   0036F2  EF7D  F01B         	goto	u8890
 10304   0036F6                     u8891:
 10305   0036F6  EF83  F01B         	goto	l7284
 10306   0036FA                     u8890:
 10307   0036FA                     
 10308                           ;newfile.c: 356:             min += 10;
 10309   0036FA  0E0A               	movlw	10
 10310   0036FC  265B               	addwf	_min^0,f,c
 10311   0036FE  0E00               	movlw	0
 10312   003700  225C               	addwfc	(_min+1)^0,f,c
 10313                           
 10314                           ;newfile.c: 357:         } else if (Mode == 4) {
 10315   003702  EF92  F01B         	goto	l7288
 10316   003706                     l7284:
 10317   003706  0E04               	movlw	4
 10318   003708  1863               	xorwf	_Mode^0,w,c
 10319   00370A  1064               	iorwf	(_Mode+1)^0,w,c
 10320   00370C  A4D8               	btfss	status,2,c
 10321   00370E  EF8B  F01B         	goto	u8901
 10322   003712  EF8D  F01B         	goto	u8900
 10323   003716                     u8901:
 10324   003716  EF92  F01B         	goto	l203
 10325   00371A                     u8900:
 10326   00371A                     
 10327                           ;newfile.c: 358:             hr += 1;
 10328   00371A  0101               	movlb	1	; () banked
 10329   00371C  4B08               	infsnz	_hr& (0+255),f,b
 10330   00371E  2B09               	incf	(_hr+1)& (0+255),f,b
 10331   003720  EF92  F01B         	goto	l7288
 10332   003724                     l203:
 10333   003724                     l7288:
 10334                           
 10335                           ;newfile.c: 361:         if(snd >= 60){
 10336   003724  505E               	movf	(_snd+1)^0,w,c
 10337   003726  E109               	bnz	u8910
 10338   003728  0E3C               	movlw	60
 10339   00372A  5C5D               	subwf	_snd^0,w,c
 10340   00372C  A0D8               	btfss	status,0,c
 10341   00372E  EF9B  F01B         	goto	u8911
 10342   003732  EF9D  F01B         	goto	u8910
 10343   003736                     u8911:
 10344   003736  EFA3  F01B         	goto	l7294
 10345   00373A                     u8910:
 10346   00373A                     
 10347                           ;newfile.c: 362:             snd -=60;
 10348   00373A  0E3C               	movlw	60
 10349   00373C  5E5D               	subwf	_snd^0,f,c
 10350   00373E  0E00               	movlw	0
 10351   003740  5A5E               	subwfb	(_snd+1)^0,f,c
 10352   003742                     
 10353                           ;newfile.c: 363:             min++;
 10354   003742  4A5B               	infsnz	_min^0,f,c
 10355   003744  2A5C               	incf	(_min+1)^0,f,c
 10356   003746                     l7294:
 10357                           
 10358                           ;newfile.c: 365:         if(min >= 60){
 10359   003746  505C               	movf	(_min+1)^0,w,c
 10360   003748  E109               	bnz	u8920
 10361   00374A  0E3C               	movlw	60
 10362   00374C  5C5B               	subwf	_min^0,w,c
 10363   00374E  A0D8               	btfss	status,0,c
 10364   003750  EFAC  F01B         	goto	u8921
 10365   003754  EFAE  F01B         	goto	u8920
 10366   003758                     u8921:
 10367   003758  EFB5  F01B         	goto	l7300
 10368   00375C                     u8920:
 10369   00375C                     
 10370                           ;newfile.c: 366:             min -= 60;
 10371   00375C  0E3C               	movlw	60
 10372   00375E  5E5B               	subwf	_min^0,f,c
 10373   003760  0E00               	movlw	0
 10374   003762  5A5C               	subwfb	(_min+1)^0,f,c
 10375   003764                     
 10376                           ;newfile.c: 367:             hr++;
 10377   003764  0101               	movlb	1	; () banked
 10378   003766  4B08               	infsnz	_hr& (0+255),f,b
 10379   003768  2B09               	incf	(_hr+1)& (0+255),f,b
 10380   00376A                     l7300:
 10381                           
 10382                           ;newfile.c: 369:         if(hr >= 23){
 10383   00376A  0101               	movlb	1	; () banked
 10384   00376C  5109               	movf	(_hr+1)& (0+255),w,b
 10385   00376E  E109               	bnz	u8930
 10386   003770  0E17               	movlw	23
 10387   003772  5D08               	subwf	_hr& (0+255),w,b
 10388   003774  A0D8               	btfss	status,0,c
 10389   003776  EFBF  F01B         	goto	u8931
 10390   00377A  EFC1  F01B         	goto	u8930
 10391   00377E                     u8931:
 10392   00377E  EFCD  F01B         	goto	l7308
 10393   003782                     u8930:
 10394   003782                     
 10395                           ; BSR set to: 1
 10396                           ;newfile.c: 370:             hr -= 23;
 10397   003782  0E17               	movlw	23
 10398   003784  5F08               	subwf	_hr& (0+255),f,b
 10399   003786  0E00               	movlw	0
 10400   003788  5B09               	subwfb	(_hr+1)& (0+255),f,b
 10401   00378A                     
 10402                           ; BSR set to: 1
 10403                           ;newfile.c: 371:             min=0;
 10404   00378A  0E00               	movlw	0
 10405   00378C  6E5C               	movwf	(_min+1)^0,c
 10406   00378E  0E00               	movlw	0
 10407   003790  6E5B               	movwf	_min^0,c
 10408   003792                     
 10409                           ; BSR set to: 1
 10410                           ;newfile.c: 372:             snd=0;
 10411   003792  0E00               	movlw	0
 10412   003794  6E5E               	movwf	(_snd+1)^0,c
 10413   003796  0E00               	movlw	0
 10414   003798  6E5D               	movwf	_snd^0,c
 10415   00379A                     l7308:
 10416                           
 10417                           ;newfile.c: 379:     hours = total_time / 3600;
 10418   00379A  C05F  F014         	movff	_total_time,___awdiv@dividend
 10419   00379E  C060  F015         	movff	_total_time+1,___awdiv@dividend+1
 10420   0037A2  0E0E               	movlw	14
 10421   0037A4  6E17               	movwf	(___awdiv@divisor+1)^0,c
 10422   0037A6  0E10               	movlw	16
 10423   0037A8  6E16               	movwf	___awdiv@divisor^0,c
 10424   0037AA  EC53  F025         	call	___awdiv	;wreg free
 10425   0037AE  C014  F065         	movff	?___awdiv,_hours
 10426   0037B2  C015  F066         	movff	?___awdiv+1,_hours+1
 10427   0037B6                     
 10428                           ;newfile.c: 380:     minutes = (total_time - hours * 3600) / 60;
 10429   0037B6  C065  F014         	movff	_hours,___wmul@multiplier
 10430   0037BA  C066  F015         	movff	_hours+1,___wmul@multiplier+1
 10431   0037BE  0EF1               	movlw	241
 10432   0037C0  6E17               	movwf	(___wmul@multiplicand+1)^0,c
 10433   0037C2  0EF0               	movlw	240
 10434   0037C4  6E16               	movwf	___wmul@multiplicand^0,c
 10435   0037C6  EC74  F02B         	call	___wmul	;wreg free
 10436   0037CA  505F               	movf	_total_time^0,w,c
 10437   0037CC  2414               	addwf	?___wmul^0,w,c
 10438   0037CE  6E1A               	movwf	___lwdiv@dividend^0,c
 10439   0037D0  5060               	movf	(_total_time+1)^0,w,c
 10440   0037D2  2015               	addwfc	(?___wmul+1)^0,w,c
 10441   0037D4  6E1B               	movwf	(___lwdiv@dividend+1)^0,c
 10442   0037D6  0E00               	movlw	0
 10443   0037D8  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
 10444   0037DA  0E3C               	movlw	60
 10445   0037DC  6E1C               	movwf	___lwdiv@divisor^0,c
 10446   0037DE  ECBF  F027         	call	___lwdiv	;wreg free
 10447   0037E2  C01A  F067         	movff	?___lwdiv,_minutes
 10448   0037E6  C01B  F068         	movff	?___lwdiv+1,_minutes+1
 10449   0037EA                     
 10450                           ;newfile.c: 381:     seconds = total_time - hours * 3600 - minutes * 60;
 10451   0037EA  C065  F014         	movff	_hours,___wmul@multiplier
 10452   0037EE  C066  F015         	movff	_hours+1,___wmul@multiplier+1
 10453   0037F2  0EF1               	movlw	241
 10454   0037F4  6E17               	movwf	(___wmul@multiplicand+1)^0,c
 10455   0037F6  0EF0               	movlw	240
 10456   0037F8  6E16               	movwf	___wmul@multiplicand^0,c
 10457   0037FA  EC74  F02B         	call	___wmul	;wreg free
 10458   0037FE  C014  F021         	movff	?___wmul,??_incrementClock
 10459   003802  C015  F022         	movff	?___wmul+1,??_incrementClock+1
 10460   003806  C067  F014         	movff	_minutes,___wmul@multiplier
 10461   00380A  C068  F015         	movff	_minutes+1,___wmul@multiplier+1
 10462   00380E  0EFF               	movlw	255
 10463   003810  6E17               	movwf	(___wmul@multiplicand+1)^0,c
 10464   003812  0EC4               	movlw	196
 10465   003814  6E16               	movwf	___wmul@multiplicand^0,c
 10466   003816  EC74  F02B         	call	___wmul	;wreg free
 10467   00381A  5014               	movf	?___wmul^0,w,c
 10468   00381C  2421               	addwf	??_incrementClock^0,w,c
 10469   00381E  6E23               	movwf	(??_incrementClock+2)^0,c
 10470   003820  5015               	movf	(?___wmul+1)^0,w,c
 10471   003822  2022               	addwfc	(??_incrementClock+1)^0,w,c
 10472   003824  6E24               	movwf	(??_incrementClock+3)^0,c
 10473   003826  505F               	movf	_total_time^0,w,c
 10474   003828  2423               	addwf	(??_incrementClock+2)^0,w,c
 10475   00382A  0101               	movlb	1	; () banked
 10476   00382C  6F0C               	movwf	_seconds& (0+255),b
 10477   00382E  5060               	movf	(_total_time+1)^0,w,c
 10478   003830  2024               	addwfc	(??_incrementClock+3)^0,w,c
 10479   003832  6F0D               	movwf	(_seconds+1)& (0+255),b
 10480   003834                     
 10481                           ; BSR set to: 1
 10482   003834  0012               	return		;funcret
 10483   003836                     __end_of_incrementClock:
 10484                           	callstack 0
 10485                           
 10486 ;; *************** function _decrementClock *****************
 10487 ;; Defined at:
 10488 ;;		line 386 in file "newfile.c"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;		None
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;		None
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  1    wreg      void 
 10495 ;; Registers used:
 10496 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10506 ;;Total ram usage:        4 bytes
 10507 ;; Hardware stack levels used: 1
 10508 ;; Hardware stack levels required when called: 4
 10509 ;; This function calls:
 10510 ;;		___awdiv
 10511 ;;		___lwdiv
 10512 ;;		___wmul
 10513 ;; This function is called by:
 10514 ;;		_main
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text44
 10519   00407A                     __ptext44:
 10520                           	callstack 0
 10521   00407A                     _decrementClock:
 10522                           	callstack 26
 10523   00407A                     
 10524                           ;newfile.c: 387:     if (Mode == 0) {
 10525   00407A  5063               	movf	_Mode^0,w,c
 10526   00407C  1064               	iorwf	(_Mode+1)^0,w,c
 10527   00407E  A4D8               	btfss	status,2,c
 10528   004080  EF44  F020         	goto	u8941
 10529   004084  EF46  F020         	goto	u8940
 10530   004088                     u8941:
 10531   004088  EF4B  F020         	goto	l7318
 10532   00408C                     u8940:
 10533   00408C                     
 10534                           ;newfile.c: 388:         total_time--;
 10535   00408C  065F               	decf	_total_time^0,f,c
 10536   00408E  A0D8               	btfss	status,0,c
 10537   004090  0660               	decf	(_total_time+1)^0,f,c
 10538                           
 10539                           ;newfile.c: 389:     } else if (Mode == 1) {
 10540   004092  EF8A  F020         	goto	l216
 10541   004096                     l7318:
 10542   004096  0463               	decf	_Mode^0,w,c
 10543   004098  1064               	iorwf	(_Mode+1)^0,w,c
 10544   00409A  A4D8               	btfss	status,2,c
 10545   00409C  EF52  F020         	goto	u8951
 10546   0040A0  EF54  F020         	goto	u8950
 10547   0040A4                     u8951:
 10548   0040A4  EF5A  F020         	goto	l7322
 10549   0040A8                     u8950:
 10550   0040A8                     
 10551                           ;newfile.c: 390:         total_time -= 10;
 10552   0040A8  0EF6               	movlw	246
 10553   0040AA  265F               	addwf	_total_time^0,f,c
 10554   0040AC  0EFF               	movlw	255
 10555   0040AE  2260               	addwfc	(_total_time+1)^0,f,c
 10556                           
 10557                           ;newfile.c: 391:     } else if (Mode == 2) {
 10558   0040B0  EF8A  F020         	goto	l216
 10559   0040B4                     l7322:
 10560   0040B4  0E02               	movlw	2
 10561   0040B6  1863               	xorwf	_Mode^0,w,c
 10562   0040B8  1064               	iorwf	(_Mode+1)^0,w,c
 10563   0040BA  A4D8               	btfss	status,2,c
 10564   0040BC  EF62  F020         	goto	u8961
 10565   0040C0  EF64  F020         	goto	u8960
 10566   0040C4                     u8961:
 10567   0040C4  EF6A  F020         	goto	l7326
 10568   0040C8                     u8960:
 10569   0040C8                     
 10570                           ;newfile.c: 392:         total_time -= 60;
 10571   0040C8  0EC4               	movlw	196
 10572   0040CA  265F               	addwf	_total_time^0,f,c
 10573   0040CC  0EFF               	movlw	255
 10574   0040CE  2260               	addwfc	(_total_time+1)^0,f,c
 10575                           
 10576                           ;newfile.c: 393:     } else if (Mode == 3) {
 10577   0040D0  EF8A  F020         	goto	l216
 10578   0040D4                     l7326:
 10579   0040D4  0E03               	movlw	3
 10580   0040D6  1863               	xorwf	_Mode^0,w,c
 10581   0040D8  1064               	iorwf	(_Mode+1)^0,w,c
 10582   0040DA  A4D8               	btfss	status,2,c
 10583   0040DC  EF72  F020         	goto	u8971
 10584   0040E0  EF74  F020         	goto	u8970
 10585   0040E4                     u8971:
 10586   0040E4  EF7A  F020         	goto	l7330
 10587   0040E8                     u8970:
 10588   0040E8                     
 10589                           ;newfile.c: 394:         total_time -= 600;
 10590   0040E8  0EA8               	movlw	168
 10591   0040EA  265F               	addwf	_total_time^0,f,c
 10592   0040EC  0EFD               	movlw	253
 10593   0040EE  2260               	addwfc	(_total_time+1)^0,f,c
 10594                           
 10595                           ;newfile.c: 395:     } else if (Mode == 4) {
 10596   0040F0  EF8A  F020         	goto	l216
 10597   0040F4                     l7330:
 10598   0040F4  0E04               	movlw	4
 10599   0040F6  1863               	xorwf	_Mode^0,w,c
 10600   0040F8  1064               	iorwf	(_Mode+1)^0,w,c
 10601   0040FA  A4D8               	btfss	status,2,c
 10602   0040FC  EF82  F020         	goto	u8981
 10603   004100  EF84  F020         	goto	u8980
 10604   004104                     u8981:
 10605   004104  EF8A  F020         	goto	l220
 10606   004108                     u8980:
 10607   004108                     
 10608                           ;newfile.c: 396:         total_time -= 3600;
 10609   004108  0EF0               	movlw	240
 10610   00410A  265F               	addwf	_total_time^0,f,c
 10611   00410C  0EF1               	movlw	241
 10612   00410E  2260               	addwfc	(_total_time+1)^0,f,c
 10613   004110  EF8A  F020         	goto	l216
 10614   004114                     l220:
 10615   004114                     l216:
 10616                           
 10617                           ;newfile.c: 399:     if (total_time < 0) {
 10618   004114  BE60               	btfsc	(_total_time+1)^0,7,c
 10619   004116  EF91  F020         	goto	u8990
 10620   00411A  EF8F  F020         	goto	u8991
 10621   00411E                     u8991:
 10622   00411E  EF95  F020         	goto	l7336
 10623   004122                     u8990:
 10624   004122                     
 10625                           ;newfile.c: 400:         total_time = 0;
 10626   004122  0E00               	movlw	0
 10627   004124  6E60               	movwf	(_total_time+1)^0,c
 10628   004126  0E00               	movlw	0
 10629   004128  6E5F               	movwf	_total_time^0,c
 10630   00412A                     l7336:
 10631                           
 10632                           ;newfile.c: 402:     hours = total_time / 3600;
 10633   00412A  C05F  F014         	movff	_total_time,___awdiv@dividend
 10634   00412E  C060  F015         	movff	_total_time+1,___awdiv@dividend+1
 10635   004132  0E0E               	movlw	14
 10636   004134  6E17               	movwf	(___awdiv@divisor+1)^0,c
 10637   004136  0E10               	movlw	16
 10638   004138  6E16               	movwf	___awdiv@divisor^0,c
 10639   00413A  EC53  F025         	call	___awdiv	;wreg free
 10640   00413E  C014  F065         	movff	?___awdiv,_hours
 10641   004142  C015  F066         	movff	?___awdiv+1,_hours+1
 10642   004146                     
 10643                           ;newfile.c: 403:     minutes = (total_time - hours * 3600) / 60;
 10644   004146  C065  F014         	movff	_hours,___wmul@multiplier
 10645   00414A  C066  F015         	movff	_hours+1,___wmul@multiplier+1
 10646   00414E  0EF1               	movlw	241
 10647   004150  6E17               	movwf	(___wmul@multiplicand+1)^0,c
 10648   004152  0EF0               	movlw	240
 10649   004154  6E16               	movwf	___wmul@multiplicand^0,c
 10650   004156  EC74  F02B         	call	___wmul	;wreg free
 10651   00415A  505F               	movf	_total_time^0,w,c
 10652   00415C  2414               	addwf	?___wmul^0,w,c
 10653   00415E  6E1A               	movwf	___lwdiv@dividend^0,c
 10654   004160  5060               	movf	(_total_time+1)^0,w,c
 10655   004162  2015               	addwfc	(?___wmul+1)^0,w,c
 10656   004164  6E1B               	movwf	(___lwdiv@dividend+1)^0,c
 10657   004166  0E00               	movlw	0
 10658   004168  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
 10659   00416A  0E3C               	movlw	60
 10660   00416C  6E1C               	movwf	___lwdiv@divisor^0,c
 10661   00416E  ECBF  F027         	call	___lwdiv	;wreg free
 10662   004172  C01A  F067         	movff	?___lwdiv,_minutes
 10663   004176  C01B  F068         	movff	?___lwdiv+1,_minutes+1
 10664   00417A                     
 10665                           ;newfile.c: 404:     seconds = total_time - hours * 3600 - minutes * 60;
 10666   00417A  C065  F014         	movff	_hours,___wmul@multiplier
 10667   00417E  C066  F015         	movff	_hours+1,___wmul@multiplier+1
 10668   004182  0EF1               	movlw	241
 10669   004184  6E17               	movwf	(___wmul@multiplicand+1)^0,c
 10670   004186  0EF0               	movlw	240
 10671   004188  6E16               	movwf	___wmul@multiplicand^0,c
 10672   00418A  EC74  F02B         	call	___wmul	;wreg free
 10673   00418E  C014  F021         	movff	?___wmul,??_decrementClock
 10674   004192  C015  F022         	movff	?___wmul+1,??_decrementClock+1
 10675   004196  C067  F014         	movff	_minutes,___wmul@multiplier
 10676   00419A  C068  F015         	movff	_minutes+1,___wmul@multiplier+1
 10677   00419E  0EFF               	movlw	255
 10678   0041A0  6E17               	movwf	(___wmul@multiplicand+1)^0,c
 10679   0041A2  0EC4               	movlw	196
 10680   0041A4  6E16               	movwf	___wmul@multiplicand^0,c
 10681   0041A6  EC74  F02B         	call	___wmul	;wreg free
 10682   0041AA  5014               	movf	?___wmul^0,w,c
 10683   0041AC  2421               	addwf	??_decrementClock^0,w,c
 10684   0041AE  6E23               	movwf	(??_decrementClock+2)^0,c
 10685   0041B0  5015               	movf	(?___wmul+1)^0,w,c
 10686   0041B2  2022               	addwfc	(??_decrementClock+1)^0,w,c
 10687   0041B4  6E24               	movwf	(??_decrementClock+3)^0,c
 10688   0041B6  505F               	movf	_total_time^0,w,c
 10689   0041B8  2423               	addwf	(??_decrementClock+2)^0,w,c
 10690   0041BA  0101               	movlb	1	; () banked
 10691   0041BC  6F0C               	movwf	_seconds& (0+255),b
 10692   0041BE  5060               	movf	(_total_time+1)^0,w,c
 10693   0041C0  2024               	addwfc	(??_decrementClock+3)^0,w,c
 10694   0041C2  6F0D               	movwf	(_seconds+1)& (0+255),b
 10695   0041C4                     
 10696                           ; BSR set to: 1
 10697   0041C4  0012               	return		;funcret
 10698   0041C6                     __end_of_decrementClock:
 10699                           	callstack 0
 10700                           
 10701 ;; *************** function ___wmul *****************
 10702 ;; Defined at:
 10703 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  multiplier      2   19[COMRAM] unsigned int 
 10706 ;;  multiplicand    2   21[COMRAM] unsigned int 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;  product         2   23[COMRAM] unsigned int 
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  2   19[COMRAM] unsigned int 
 10711 ;; Registers used:
 10712 ;;		wreg, status,2, status,0, prodl, prodh
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10722 ;;Total ram usage:        6 bytes
 10723 ;; Hardware stack levels used: 1
 10724 ;; Hardware stack levels required when called: 3
 10725 ;; This function calls:
 10726 ;;		Nothing
 10727 ;; This function is called by:
 10728 ;;		_read_adc_voltage
 10729 ;;		_incrementClock
 10730 ;;		_decrementClock
 10731 ;;		_atoi
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           	psect	text45
 10736   0056E8                     __ptext45:
 10737                           	callstack 0
 10738   0056E8                     ___wmul:
 10739                           	callstack 23
 10740   0056E8  5014               	movf	___wmul@multiplier^0,w,c
 10741   0056EA  0216               	mulwf	___wmul@multiplicand^0,c
 10742   0056EC  CFF3 F018          	movff	prodl,___wmul@product
 10743   0056F0  CFF4 F019          	movff	prodh,___wmul@product+1
 10744   0056F4  5014               	movf	___wmul@multiplier^0,w,c
 10745   0056F6  0217               	mulwf	(___wmul@multiplicand+1)^0,c
 10746   0056F8  50F3               	movf	243,w,c
 10747   0056FA  2619               	addwf	(___wmul@product+1)^0,f,c
 10748   0056FC  5015               	movf	(___wmul@multiplier+1)^0,w,c
 10749   0056FE  0216               	mulwf	___wmul@multiplicand^0,c
 10750   005700  50F3               	movf	243,w,c
 10751   005702  2619               	addwf	(___wmul@product+1)^0,f,c
 10752   005704  C018  F014         	movff	___wmul@product,?___wmul
 10753   005708  C019  F015         	movff	___wmul@product+1,?___wmul+1
 10754   00570C  0012               	return		;funcret
 10755   00570E                     __end_of___wmul:
 10756                           	callstack 0
 10757                           
 10758 ;; *************** function ___lwdiv *****************
 10759 ;; Defined at:
 10760 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;  dividend        2   25[COMRAM] unsigned int 
 10763 ;;  divisor         2   27[COMRAM] unsigned int 
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;  quotient        2   29[COMRAM] unsigned int 
 10766 ;;  counter         1   31[COMRAM] unsigned char 
 10767 ;; Return value:  Size  Location     Type
 10768 ;;                  2   25[COMRAM] unsigned int 
 10769 ;; Registers used:
 10770 ;;		wreg, status,2, status,0
 10771 ;; Tracked objects:
 10772 ;;		On entry : 0/0
 10773 ;;		On exit  : 0/0
 10774 ;;		Unchanged: 0/0
 10775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10777 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10779 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10780 ;;Total ram usage:        7 bytes
 10781 ;; Hardware stack levels used: 1
 10782 ;; Hardware stack levels required when called: 3
 10783 ;; This function calls:
 10784 ;;		Nothing
 10785 ;; This function is called by:
 10786 ;;		_incrementClock
 10787 ;;		_decrementClock
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text46
 10792   004F7E                     __ptext46:
 10793                           	callstack 0
 10794   004F7E                     ___lwdiv:
 10795                           	callstack 26
 10796   004F7E  0E00               	movlw	0
 10797   004F80  6E1F               	movwf	(___lwdiv@quotient+1)^0,c
 10798   004F82  0E00               	movlw	0
 10799   004F84  6E1E               	movwf	___lwdiv@quotient^0,c
 10800   004F86  501C               	movf	___lwdiv@divisor^0,w,c
 10801   004F88  101D               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10802   004F8A  B4D8               	btfsc	status,2,c
 10803   004F8C  EFCA  F027         	goto	u5641
 10804   004F90  EFCC  F027         	goto	u5640
 10805   004F94                     u5641:
 10806   004F94  EFF4  F027         	goto	l808
 10807   004F98                     u5640:
 10808   004F98  0E01               	movlw	1
 10809   004F9A  6E20               	movwf	___lwdiv@counter^0,c
 10810   004F9C  EFD4  F027         	goto	l5048
 10811   004FA0                     l5046:
 10812   004FA0  90D8               	bcf	status,0,c
 10813   004FA2  361C               	rlcf	___lwdiv@divisor^0,f,c
 10814   004FA4  361D               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10815   004FA6  2A20               	incf	___lwdiv@counter^0,f,c
 10816   004FA8                     l5048:
 10817   004FA8  AE1D               	btfss	(___lwdiv@divisor+1)^0,7,c
 10818   004FAA  EFD9  F027         	goto	u5651
 10819   004FAE  EFDB  F027         	goto	u5650
 10820   004FB2                     u5651:
 10821   004FB2  EFD0  F027         	goto	l5046
 10822   004FB6                     u5650:
 10823   004FB6                     l5050:
 10824   004FB6  90D8               	bcf	status,0,c
 10825   004FB8  361E               	rlcf	___lwdiv@quotient^0,f,c
 10826   004FBA  361F               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10827   004FBC  501C               	movf	___lwdiv@divisor^0,w,c
 10828   004FBE  5C1A               	subwf	___lwdiv@dividend^0,w,c
 10829   004FC0  501D               	movf	(___lwdiv@divisor+1)^0,w,c
 10830   004FC2  581B               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10831   004FC4  A0D8               	btfss	status,0,c
 10832   004FC6  EFE7  F027         	goto	u5661
 10833   004FCA  EFE9  F027         	goto	u5660
 10834   004FCE                     u5661:
 10835   004FCE  EFEE  F027         	goto	l5058
 10836   004FD2                     u5660:
 10837   004FD2  501C               	movf	___lwdiv@divisor^0,w,c
 10838   004FD4  5E1A               	subwf	___lwdiv@dividend^0,f,c
 10839   004FD6  501D               	movf	(___lwdiv@divisor+1)^0,w,c
 10840   004FD8  5A1B               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10841   004FDA  801E               	bsf	___lwdiv@quotient^0,0,c
 10842   004FDC                     l5058:
 10843   004FDC  90D8               	bcf	status,0,c
 10844   004FDE  321D               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10845   004FE0  321C               	rrcf	___lwdiv@divisor^0,f,c
 10846   004FE2  2E20               	decfsz	___lwdiv@counter^0,f,c
 10847   004FE4  EFDB  F027         	goto	l5050
 10848   004FE8                     l808:
 10849   004FE8  C01E  F01A         	movff	___lwdiv@quotient,?___lwdiv
 10850   004FEC  C01F  F01B         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10851   004FF0  0012               	return		;funcret
 10852   004FF2                     __end_of___lwdiv:
 10853                           	callstack 0
 10854                           
 10855 ;; *************** function ___awdiv *****************
 10856 ;; Defined at:
 10857 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
 10858 ;; Parameters:    Size  Location     Type
 10859 ;;  dividend        2   19[COMRAM] int 
 10860 ;;  divisor         2   21[COMRAM] int 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;  quotient        2   25[COMRAM] int 
 10863 ;;  sign            1   24[COMRAM] unsigned char 
 10864 ;;  counter         1   23[COMRAM] unsigned char 
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  2   19[COMRAM] int 
 10867 ;; Registers used:
 10868 ;;		wreg, status,2, status,0
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10875 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10877 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10878 ;;Total ram usage:        8 bytes
 10879 ;; Hardware stack levels used: 1
 10880 ;; Hardware stack levels required when called: 3
 10881 ;; This function calls:
 10882 ;;		Nothing
 10883 ;; This function is called by:
 10884 ;;		_incrementClock
 10885 ;;		_decrementClock
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text47
 10890   004AA6                     __ptext47:
 10891                           	callstack 0
 10892   004AA6                     ___awdiv:
 10893                           	callstack 26
 10894   004AA6  0E00               	movlw	0
 10895   004AA8  6E19               	movwf	___awdiv@sign^0,c
 10896   004AAA  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 10897   004AAC  EF5C  F025         	goto	u5580
 10898   004AB0  EF5A  F025         	goto	u5581
 10899   004AB4                     u5581:
 10900   004AB4  EF62  F025         	goto	l5004
 10901   004AB8                     u5580:
 10902   004AB8  6C16               	negf	___awdiv@divisor^0,c
 10903   004ABA  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 10904   004ABC  B0D8               	btfsc	status,0,c
 10905   004ABE  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 10906   004AC0  0E01               	movlw	1
 10907   004AC2  6E19               	movwf	___awdiv@sign^0,c
 10908   004AC4                     l5004:
 10909   004AC4  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 10910   004AC6  EF69  F025         	goto	u5590
 10911   004ACA  EF67  F025         	goto	u5591
 10912   004ACE                     u5591:
 10913   004ACE  EF6F  F025         	goto	l5010
 10914   004AD2                     u5590:
 10915   004AD2  6C14               	negf	___awdiv@dividend^0,c
 10916   004AD4  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 10917   004AD6  B0D8               	btfsc	status,0,c
 10918   004AD8  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 10919   004ADA  0E01               	movlw	1
 10920   004ADC  1A19               	xorwf	___awdiv@sign^0,f,c
 10921   004ADE                     l5010:
 10922   004ADE  0E00               	movlw	0
 10923   004AE0  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 10924   004AE2  0E00               	movlw	0
 10925   004AE4  6E1A               	movwf	___awdiv@quotient^0,c
 10926   004AE6  5016               	movf	___awdiv@divisor^0,w,c
 10927   004AE8  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 10928   004AEA  B4D8               	btfsc	status,2,c
 10929   004AEC  EF7A  F025         	goto	u5601
 10930   004AF0  EF7C  F025         	goto	u5600
 10931   004AF4                     u5601:
 10932   004AF4  EFA4  F025         	goto	l5032
 10933   004AF8                     u5600:
 10934   004AF8  0E01               	movlw	1
 10935   004AFA  6E18               	movwf	___awdiv@counter^0,c
 10936   004AFC  EF84  F025         	goto	l5018
 10937   004B00                     l5016:
 10938   004B00  90D8               	bcf	status,0,c
 10939   004B02  3616               	rlcf	___awdiv@divisor^0,f,c
 10940   004B04  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 10941   004B06  2A18               	incf	___awdiv@counter^0,f,c
 10942   004B08                     l5018:
 10943   004B08  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 10944   004B0A  EF89  F025         	goto	u5611
 10945   004B0E  EF8B  F025         	goto	u5610
 10946   004B12                     u5611:
 10947   004B12  EF80  F025         	goto	l5016
 10948   004B16                     u5610:
 10949   004B16                     l5020:
 10950   004B16  90D8               	bcf	status,0,c
 10951   004B18  361A               	rlcf	___awdiv@quotient^0,f,c
 10952   004B1A  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 10953   004B1C  5016               	movf	___awdiv@divisor^0,w,c
 10954   004B1E  5C14               	subwf	___awdiv@dividend^0,w,c
 10955   004B20  5017               	movf	(___awdiv@divisor+1)^0,w,c
 10956   004B22  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 10957   004B24  A0D8               	btfss	status,0,c
 10958   004B26  EF97  F025         	goto	u5621
 10959   004B2A  EF99  F025         	goto	u5620
 10960   004B2E                     u5621:
 10961   004B2E  EF9E  F025         	goto	l5028
 10962   004B32                     u5620:
 10963   004B32  5016               	movf	___awdiv@divisor^0,w,c
 10964   004B34  5E14               	subwf	___awdiv@dividend^0,f,c
 10965   004B36  5017               	movf	(___awdiv@divisor+1)^0,w,c
 10966   004B38  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 10967   004B3A  801A               	bsf	___awdiv@quotient^0,0,c
 10968   004B3C                     l5028:
 10969   004B3C  90D8               	bcf	status,0,c
 10970   004B3E  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 10971   004B40  3216               	rrcf	___awdiv@divisor^0,f,c
 10972   004B42  2E18               	decfsz	___awdiv@counter^0,f,c
 10973   004B44  EF8B  F025         	goto	l5020
 10974   004B48                     l5032:
 10975   004B48  5019               	movf	___awdiv@sign^0,w,c
 10976   004B4A  B4D8               	btfsc	status,2,c
 10977   004B4C  EFAA  F025         	goto	u5631
 10978   004B50  EFAC  F025         	goto	u5630
 10979   004B54                     u5631:
 10980   004B54  EFB0  F025         	goto	l5036
 10981   004B58                     u5630:
 10982   004B58  6C1A               	negf	___awdiv@quotient^0,c
 10983   004B5A  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 10984   004B5C  B0D8               	btfsc	status,0,c
 10985   004B5E  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 10986   004B60                     l5036:
 10987   004B60  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 10988   004B64  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 10989   004B68  0012               	return		;funcret
 10990   004B6A                     __end_of___awdiv:
 10991                           	callstack 0
 10992                           
 10993 ;; *************** function _controlingTemp *****************
 10994 ;; Defined at:
 10995 ;;		line 409 in file "newfile.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;		None
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;		None
 11000 ;; Return value:  Size  Location     Type
 11001 ;;                  1    wreg      void 
 11002 ;; Registers used:
 11003 ;;		wreg, status,2, status,0, cstack
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11013 ;;Total ram usage:        0 bytes
 11014 ;; Hardware stack levels used: 1
 11015 ;; Hardware stack levels required when called: 4
 11016 ;; This function calls:
 11017 ;;		___fladd
 11018 ;;		___flge
 11019 ;; This function is called by:
 11020 ;;		_main
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024                           	psect	text48
 11025   0049DE                     __ptext48:
 11026                           	callstack 0
 11027   0049DE                     _controlingTemp:
 11028                           	callstack 26
 11029   0049DE                     
 11030                           ;newfile.c: 410:     if (oven == 1) {
 11031   0049DE  0461               	decf	_oven^0,w,c
 11032   0049E0  1062               	iorwf	(_oven+1)^0,w,c
 11033   0049E2  A4D8               	btfss	status,2,c
 11034   0049E4  EFF6  F024         	goto	u9001
 11035   0049E8  EFF8  F024         	goto	u9000
 11036   0049EC                     u9001:
 11037   0049EC  EF52  F025         	goto	l232
 11038   0049F0                     u9000:
 11039   0049F0                     
 11040                           ;newfile.c: 411:         if (t < (sp - 1)) {
 11041   0049F0  C104  F02D         	movff	_t,___flge@ff1
 11042   0049F4  C105  F02E         	movff	_t+1,___flge@ff1+1
 11043   0049F8  C106  F02F         	movff	_t+2,___flge@ff1+2
 11044   0049FC  C107  F030         	movff	_t+3,___flge@ff1+3
 11045   004A00  0E00               	movlw	0
 11046   004A02  6E18               	movwf	___fladd@a^0,c
 11047   004A04  0E00               	movlw	0
 11048   004A06  6E19               	movwf	(___fladd@a+1)^0,c
 11049   004A08  0E80               	movlw	128
 11050   004A0A  6E1A               	movwf	(___fladd@a+2)^0,c
 11051   004A0C  0EBF               	movlw	191
 11052   004A0E  6E1B               	movwf	(___fladd@a+3)^0,c
 11053   004A10  C100  F014         	movff	_sp,___fladd@b
 11054   004A14  C101  F015         	movff	_sp+1,___fladd@b+1
 11055   004A18  C102  F016         	movff	_sp+2,___fladd@b+2
 11056   004A1C  C103  F017         	movff	_sp+3,___fladd@b+3
 11057   004A20  EC4D  F013         	call	___fladd	;wreg free
 11058   004A24  C014  F031         	movff	?___fladd,___flge@ff2
 11059   004A28  C015  F032         	movff	?___fladd+1,___flge@ff2+1
 11060   004A2C  C016  F033         	movff	?___fladd+2,___flge@ff2+2
 11061   004A30  C017  F034         	movff	?___fladd+3,___flge@ff2+3
 11062   004A34  ECA8  F022         	call	___flge	;wreg free
 11063   004A38  B0D8               	btfsc	status,0,c
 11064   004A3A  EF21  F025         	goto	u9011
 11065   004A3E  EF23  F025         	goto	u9010
 11066   004A42                     u9011:
 11067   004A42  EF26  F025         	goto	l7348
 11068   004A46                     u9010:
 11069   004A46                     
 11070                           ;newfile.c: 412:             PORTCbits.RC5 = 1;
 11071   004A46  8A82               	bsf	130,5,c	;volatile
 11072                           
 11073                           ;newfile.c: 413:         } else if (t > (sp + 1)) {
 11074   004A48  EF52  F025         	goto	l232
 11075   004A4C                     l7348:
 11076   004A4C  0E00               	movlw	0
 11077   004A4E  6E18               	movwf	___fladd@a^0,c
 11078   004A50  0E00               	movlw	0
 11079   004A52  6E19               	movwf	(___fladd@a+1)^0,c
 11080   004A54  0E80               	movlw	128
 11081   004A56  6E1A               	movwf	(___fladd@a+2)^0,c
 11082   004A58  0E3F               	movlw	63
 11083   004A5A  6E1B               	movwf	(___fladd@a+3)^0,c
 11084   004A5C  C100  F014         	movff	_sp,___fladd@b
 11085   004A60  C101  F015         	movff	_sp+1,___fladd@b+1
 11086   004A64  C102  F016         	movff	_sp+2,___fladd@b+2
 11087   004A68  C103  F017         	movff	_sp+3,___fladd@b+3
 11088   004A6C  EC4D  F013         	call	___fladd	;wreg free
 11089   004A70  C014  F02D         	movff	?___fladd,___flge@ff1
 11090   004A74  C015  F02E         	movff	?___fladd+1,___flge@ff1+1
 11091   004A78  C016  F02F         	movff	?___fladd+2,___flge@ff1+2
 11092   004A7C  C017  F030         	movff	?___fladd+3,___flge@ff1+3
 11093   004A80  C104  F031         	movff	_t,___flge@ff2
 11094   004A84  C105  F032         	movff	_t+1,___flge@ff2+1
 11095   004A88  C106  F033         	movff	_t+2,___flge@ff2+2
 11096   004A8C  C107  F034         	movff	_t+3,___flge@ff2+3
 11097   004A90  ECA8  F022         	call	___flge	;wreg free
 11098   004A94  B0D8               	btfsc	status,0,c
 11099   004A96  EF4F  F025         	goto	u9021
 11100   004A9A  EF51  F025         	goto	u9020
 11101   004A9E                     u9021:
 11102   004A9E  EF52  F025         	goto	l232
 11103   004AA2                     u9020:
 11104   004AA2                     
 11105                           ;newfile.c: 414:             PORTCbits.RC5 = 0;
 11106   004AA2  9A82               	bcf	130,5,c	;volatile
 11107   004AA4                     l232:
 11108   004AA4  0012               	return		;funcret
 11109   004AA6                     __end_of_controlingTemp:
 11110                           	callstack 0
 11111                           
 11112 ;; *************** function ___flge *****************
 11113 ;; Defined at:
 11114 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  ff1             4   44[COMRAM] void 
 11117 ;;  ff2             4   48[COMRAM] void 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;		None               void
 11122 ;; Registers used:
 11123 ;;		wreg, status,2, status,0
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11129 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11131 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11132 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11133 ;;Total ram usage:       12 bytes
 11134 ;; Hardware stack levels used: 1
 11135 ;; Hardware stack levels required when called: 3
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		_controlingTemp
 11140 ;;		_efgtoa
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           	psect	text49
 11145   004550                     __ptext49:
 11146                           	callstack 0
 11147   004550                     ___flge:
 11148                           	callstack 23
 11149   004550  0E00               	movlw	0
 11150   004552  142D               	andwf	___flge@ff1^0,w,c
 11151   004554  6E35               	movwf	??___flge^0,c
 11152   004556  0E00               	movlw	0
 11153   004558  142E               	andwf	(___flge@ff1+1)^0,w,c
 11154   00455A  6E36               	movwf	(??___flge+1)^0,c
 11155   00455C  0E80               	movlw	128
 11156   00455E  142F               	andwf	(___flge@ff1+2)^0,w,c
 11157   004560  6E37               	movwf	(??___flge+2)^0,c
 11158   004562  0E7F               	movlw	127
 11159   004564  1430               	andwf	(___flge@ff1+3)^0,w,c
 11160   004566  6E38               	movwf	(??___flge+3)^0,c
 11161   004568  5035               	movf	??___flge^0,w,c
 11162   00456A  1036               	iorwf	(??___flge+1)^0,w,c
 11163   00456C  1037               	iorwf	(??___flge+2)^0,w,c
 11164   00456E  1038               	iorwf	(??___flge+3)^0,w,c
 11165   004570  A4D8               	btfss	status,2,c
 11166   004572  EFBD  F022         	goto	u7531
 11167   004576  EFBF  F022         	goto	u7530
 11168   00457A                     u7531:
 11169   00457A  EFC7  F022         	goto	l6496
 11170   00457E                     u7530:
 11171   00457E  0E00               	movlw	0
 11172   004580  6E2D               	movwf	___flge@ff1^0,c
 11173   004582  0E00               	movlw	0
 11174   004584  6E2E               	movwf	(___flge@ff1+1)^0,c
 11175   004586  0E00               	movlw	0
 11176   004588  6E2F               	movwf	(___flge@ff1+2)^0,c
 11177   00458A  0E00               	movlw	0
 11178   00458C  6E30               	movwf	(___flge@ff1+3)^0,c
 11179   00458E                     l6496:
 11180   00458E  0E00               	movlw	0
 11181   004590  1431               	andwf	___flge@ff2^0,w,c
 11182   004592  6E35               	movwf	??___flge^0,c
 11183   004594  0E00               	movlw	0
 11184   004596  1432               	andwf	(___flge@ff2+1)^0,w,c
 11185   004598  6E36               	movwf	(??___flge+1)^0,c
 11186   00459A  0E80               	movlw	128
 11187   00459C  1433               	andwf	(___flge@ff2+2)^0,w,c
 11188   00459E  6E37               	movwf	(??___flge+2)^0,c
 11189   0045A0  0E7F               	movlw	127
 11190   0045A2  1434               	andwf	(___flge@ff2+3)^0,w,c
 11191   0045A4  6E38               	movwf	(??___flge+3)^0,c
 11192   0045A6  5035               	movf	??___flge^0,w,c
 11193   0045A8  1036               	iorwf	(??___flge+1)^0,w,c
 11194   0045AA  1037               	iorwf	(??___flge+2)^0,w,c
 11195   0045AC  1038               	iorwf	(??___flge+3)^0,w,c
 11196   0045AE  A4D8               	btfss	status,2,c
 11197   0045B0  EFDC  F022         	goto	u7541
 11198   0045B4  EFDE  F022         	goto	u7540
 11199   0045B8                     u7541:
 11200   0045B8  EFE6  F022         	goto	l6500
 11201   0045BC                     u7540:
 11202   0045BC  0E00               	movlw	0
 11203   0045BE  6E31               	movwf	___flge@ff2^0,c
 11204   0045C0  0E00               	movlw	0
 11205   0045C2  6E32               	movwf	(___flge@ff2+1)^0,c
 11206   0045C4  0E00               	movlw	0
 11207   0045C6  6E33               	movwf	(___flge@ff2+2)^0,c
 11208   0045C8  0E00               	movlw	0
 11209   0045CA  6E34               	movwf	(___flge@ff2+3)^0,c
 11210   0045CC                     l6500:
 11211   0045CC  AE30               	btfss	(___flge@ff1+3)^0,7,c
 11212   0045CE  EFEB  F022         	goto	u7551
 11213   0045D2  EFED  F022         	goto	u7550
 11214   0045D6                     u7551:
 11215   0045D6  EFF6  F022         	goto	l6504
 11216   0045DA                     u7550:
 11217   0045DA  6C2D               	negf	___flge@ff1^0,c
 11218   0045DC  1E2E               	comf	(___flge@ff1+1)^0,f,c
 11219   0045DE  B0D8               	btfsc	status,0,c
 11220   0045E0  2A2E               	incf	(___flge@ff1+1)^0,f,c
 11221   0045E2  1E2F               	comf	(___flge@ff1+2)^0,f,c
 11222   0045E4  B0D8               	btfsc	status,0,c
 11223   0045E6  2A2F               	incf	(___flge@ff1+2)^0,f,c
 11224   0045E8  0E80               	movlw	128
 11225   0045EA  5630               	subfwb	(___flge@ff1+3)^0,f,c
 11226   0045EC                     l6504:
 11227   0045EC  AE34               	btfss	(___flge@ff2+3)^0,7,c
 11228   0045EE  EFFB  F022         	goto	u7561
 11229   0045F2  EFFD  F022         	goto	u7560
 11230   0045F6                     u7561:
 11231   0045F6  EF06  F023         	goto	l582
 11232   0045FA                     u7560:
 11233   0045FA  6C31               	negf	___flge@ff2^0,c
 11234   0045FC  1E32               	comf	(___flge@ff2+1)^0,f,c
 11235   0045FE  B0D8               	btfsc	status,0,c
 11236   004600  2A32               	incf	(___flge@ff2+1)^0,f,c
 11237   004602  1E33               	comf	(___flge@ff2+2)^0,f,c
 11238   004604  B0D8               	btfsc	status,0,c
 11239   004606  2A33               	incf	(___flge@ff2+2)^0,f,c
 11240   004608  0E80               	movlw	128
 11241   00460A  5634               	subfwb	(___flge@ff2+3)^0,f,c
 11242   00460C                     l582:
 11243   00460C  0E00               	movlw	0
 11244   00460E  1A2D               	xorwf	___flge@ff1^0,f,c
 11245   004610  0E00               	movlw	0
 11246   004612  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 11247   004614  0E00               	movlw	0
 11248   004616  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 11249   004618  0E80               	movlw	128
 11250   00461A  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 11251   00461C  0E00               	movlw	0
 11252   00461E  1A31               	xorwf	___flge@ff2^0,f,c
 11253   004620  0E00               	movlw	0
 11254   004622  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 11255   004624  0E00               	movlw	0
 11256   004626  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 11257   004628  0E80               	movlw	128
 11258   00462A  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 11259   00462C  5031               	movf	___flge@ff2^0,w,c
 11260   00462E  5C2D               	subwf	___flge@ff1^0,w,c
 11261   004630  5032               	movf	(___flge@ff2+1)^0,w,c
 11262   004632  582E               	subwfb	(___flge@ff1+1)^0,w,c
 11263   004634  5033               	movf	(___flge@ff2+2)^0,w,c
 11264   004636  582F               	subwfb	(___flge@ff1+2)^0,w,c
 11265   004638  5034               	movf	(___flge@ff2+3)^0,w,c
 11266   00463A  5830               	subwfb	(___flge@ff1+3)^0,w,c
 11267   00463C  B0D8               	btfsc	status,0,c
 11268   00463E  EF23  F023         	goto	u7571
 11269   004642  EF25  F023         	goto	u7570
 11270   004646                     u7571:
 11271   004646  EF28  F023         	goto	l6510
 11272   00464A                     u7570:
 11273   00464A  90D8               	bcf	status,0,c
 11274   00464C  EF29  F023         	goto	l587
 11275   004650                     l6510:
 11276   004650  80D8               	bsf	status,0,c
 11277   004652                     l587:
 11278   004652  0012               	return		;funcret
 11279   004654                     __end_of___flge:
 11280                           	callstack 0
 11281                           
 11282 ;; *************** function ___fladd *****************
 11283 ;; Defined at:
 11284 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;  b               4   19[COMRAM] void 
 11287 ;;  a               4   23[COMRAM] void 
 11288 ;; Auto vars:     Size  Location     Type
 11289 ;;  grs             1   34[COMRAM] unsigned char 
 11290 ;;  bexp            1   33[COMRAM] unsigned char 
 11291 ;;  aexp            1   32[COMRAM] unsigned char 
 11292 ;;  signs           1   31[COMRAM] unsigned char 
 11293 ;; Return value:  Size  Location     Type
 11294 ;;                  4   19[COMRAM] unsigned char 
 11295 ;; Registers used:
 11296 ;;		wreg, status,2, status,0
 11297 ;; Tracked objects:
 11298 ;;		On entry : 0/0
 11299 ;;		On exit  : 0/0
 11300 ;;		Unchanged: 0/0
 11301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11302 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11303 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11305 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11306 ;;Total ram usage:       16 bytes
 11307 ;; Hardware stack levels used: 1
 11308 ;; Hardware stack levels required when called: 3
 11309 ;; This function calls:
 11310 ;;		Nothing
 11311 ;; This function is called by:
 11312 ;;		_controlingTemp
 11313 ;;		___flsub
 11314 ;;		_efgtoa
 11315 ;; This function uses a non-reentrant model
 11316 ;;
 11317                           
 11318                           	psect	text50
 11319   00269A                     __ptext50:
 11320                           	callstack 0
 11321   00269A                     ___fladd:
 11322                           	callstack 22
 11323   00269A  5017               	movf	(___fladd@b+3)^0,w,c
 11324   00269C  0B80               	andlw	128
 11325   00269E  6E20               	movwf	___fladd@signs^0,c
 11326   0026A0  5017               	movf	(___fladd@b+3)^0,w,c
 11327   0026A2  2417               	addwf	(___fladd@b+3)^0,w,c
 11328   0026A4  6E22               	movwf	___fladd@bexp^0,c
 11329   0026A6  AE16               	btfss	(___fladd@b+2)^0,7,c
 11330   0026A8  EF58  F013         	goto	u6551
 11331   0026AC  EF5A  F013         	goto	u6550
 11332   0026B0                     u6551:
 11333   0026B0  EF5B  F013         	goto	l5912
 11334   0026B4                     u6550:
 11335   0026B4  8022               	bsf	___fladd@bexp^0,0,c
 11336   0026B6                     l5912:
 11337   0026B6  5022               	movf	___fladd@bexp^0,w,c
 11338   0026B8  B4D8               	btfsc	status,2,c
 11339   0026BA  EF61  F013         	goto	u6561
 11340   0026BE  EF63  F013         	goto	u6560
 11341   0026C2                     u6561:
 11342   0026C2  EF78  F013         	goto	l5922
 11343   0026C6                     u6560:
 11344   0026C6  2822               	incf	___fladd@bexp^0,w,c
 11345   0026C8  A4D8               	btfss	status,2,c
 11346   0026CA  EF69  F013         	goto	u6571
 11347   0026CE  EF6B  F013         	goto	u6570
 11348   0026D2                     u6571:
 11349   0026D2  EF73  F013         	goto	l5918
 11350   0026D6                     u6570:
 11351   0026D6  0E00               	movlw	0
 11352   0026D8  6E14               	movwf	___fladd@b^0,c
 11353   0026DA  0E00               	movlw	0
 11354   0026DC  6E15               	movwf	(___fladd@b+1)^0,c
 11355   0026DE  0E00               	movlw	0
 11356   0026E0  6E16               	movwf	(___fladd@b+2)^0,c
 11357   0026E2  0E00               	movlw	0
 11358   0026E4  6E17               	movwf	(___fladd@b+3)^0,c
 11359   0026E6                     l5918:
 11360   0026E6  8E16               	bsf	(___fladd@b+2)^0,7,c
 11361   0026E8  0E00               	movlw	0
 11362   0026EA  6E17               	movwf	(___fladd@b+3)^0,c
 11363   0026EC  EF80  F013         	goto	l5924
 11364   0026F0                     l5922:
 11365   0026F0  0E00               	movlw	0
 11366   0026F2  6E14               	movwf	___fladd@b^0,c
 11367   0026F4  0E00               	movlw	0
 11368   0026F6  6E15               	movwf	(___fladd@b+1)^0,c
 11369   0026F8  0E00               	movlw	0
 11370   0026FA  6E16               	movwf	(___fladd@b+2)^0,c
 11371   0026FC  0E00               	movlw	0
 11372   0026FE  6E17               	movwf	(___fladd@b+3)^0,c
 11373   002700                     l5924:
 11374   002700  501B               	movf	(___fladd@a+3)^0,w,c
 11375   002702  0B80               	andlw	128
 11376   002704  6E21               	movwf	___fladd@aexp^0,c
 11377   002706  5020               	movf	___fladd@signs^0,w,c
 11378   002708  1821               	xorwf	___fladd@aexp^0,w,c
 11379   00270A  B4D8               	btfsc	status,2,c
 11380   00270C  EF8A  F013         	goto	u6581
 11381   002710  EF8C  F013         	goto	u6580
 11382   002714                     u6581:
 11383   002714  EF8D  F013         	goto	l5930
 11384   002718                     u6580:
 11385   002718  8C20               	bsf	___fladd@signs^0,6,c
 11386   00271A                     l5930:
 11387   00271A  501B               	movf	(___fladd@a+3)^0,w,c
 11388   00271C  241B               	addwf	(___fladd@a+3)^0,w,c
 11389   00271E  6E21               	movwf	___fladd@aexp^0,c
 11390   002720  AE1A               	btfss	(___fladd@a+2)^0,7,c
 11391   002722  EF95  F013         	goto	u6591
 11392   002726  EF97  F013         	goto	u6590
 11393   00272A                     u6591:
 11394   00272A  EF98  F013         	goto	l5936
 11395   00272E                     u6590:
 11396   00272E  8021               	bsf	___fladd@aexp^0,0,c
 11397   002730                     l5936:
 11398   002730  5021               	movf	___fladd@aexp^0,w,c
 11399   002732  B4D8               	btfsc	status,2,c
 11400   002734  EF9E  F013         	goto	u6601
 11401   002738  EFA0  F013         	goto	u6600
 11402   00273C                     u6601:
 11403   00273C  EFB5  F013         	goto	l5946
 11404   002740                     u6600:
 11405   002740  2821               	incf	___fladd@aexp^0,w,c
 11406   002742  A4D8               	btfss	status,2,c
 11407   002744  EFA6  F013         	goto	u6611
 11408   002748  EFA8  F013         	goto	u6610
 11409   00274C                     u6611:
 11410   00274C  EFB0  F013         	goto	l5942
 11411   002750                     u6610:
 11412   002750  0E00               	movlw	0
 11413   002752  6E18               	movwf	___fladd@a^0,c
 11414   002754  0E00               	movlw	0
 11415   002756  6E19               	movwf	(___fladd@a+1)^0,c
 11416   002758  0E00               	movlw	0
 11417   00275A  6E1A               	movwf	(___fladd@a+2)^0,c
 11418   00275C  0E00               	movlw	0
 11419   00275E  6E1B               	movwf	(___fladd@a+3)^0,c
 11420   002760                     l5942:
 11421   002760  8E1A               	bsf	(___fladd@a+2)^0,7,c
 11422   002762  0E00               	movlw	0
 11423   002764  6E1B               	movwf	(___fladd@a+3)^0,c
 11424   002766  EFBD  F013         	goto	l5948
 11425   00276A                     l5946:
 11426   00276A  0E00               	movlw	0
 11427   00276C  6E18               	movwf	___fladd@a^0,c
 11428   00276E  0E00               	movlw	0
 11429   002770  6E19               	movwf	(___fladd@a+1)^0,c
 11430   002772  0E00               	movlw	0
 11431   002774  6E1A               	movwf	(___fladd@a+2)^0,c
 11432   002776  0E00               	movlw	0
 11433   002778  6E1B               	movwf	(___fladd@a+3)^0,c
 11434   00277A                     l5948:
 11435   00277A  5022               	movf	___fladd@bexp^0,w,c
 11436   00277C  5C21               	subwf	___fladd@aexp^0,w,c
 11437   00277E  B0D8               	btfsc	status,0,c
 11438   002780  EFC4  F013         	goto	u6621
 11439   002784  EFC6  F013         	goto	u6620
 11440   002788                     u6621:
 11441   002788  EFED  F013         	goto	l5984
 11442   00278C                     u6620:
 11443   00278C  AC20               	btfss	___fladd@signs^0,6,c
 11444   00278E  EFCB  F013         	goto	u6631
 11445   002792  EFCD  F013         	goto	u6630
 11446   002796                     u6631:
 11447   002796  EFCF  F013         	goto	l5954
 11448   00279A                     u6630:
 11449   00279A  0E80               	movlw	128
 11450   00279C  1A20               	xorwf	___fladd@signs^0,f,c
 11451   00279E                     l5954:
 11452   00279E  C022  F023         	movff	___fladd@bexp,___fladd@grs
 11453   0027A2  C021  F022         	movff	___fladd@aexp,___fladd@bexp
 11454   0027A6  C023  F021         	movff	___fladd@grs,___fladd@aexp
 11455   0027AA  C014  F023         	movff	___fladd@b,___fladd@grs
 11456   0027AE  C018  F014         	movff	___fladd@a,___fladd@b
 11457   0027B2  C023  F018         	movff	___fladd@grs,___fladd@a
 11458   0027B6  C015  F023         	movff	___fladd@b+1,___fladd@grs
 11459   0027BA  C019  F015         	movff	___fladd@a+1,___fladd@b+1
 11460   0027BE  C023  F019         	movff	___fladd@grs,___fladd@a+1
 11461   0027C2  C016  F023         	movff	___fladd@b+2,___fladd@grs
 11462   0027C6  C01A  F016         	movff	___fladd@a+2,___fladd@b+2
 11463   0027CA  C023  F01A         	movff	___fladd@grs,___fladd@a+2
 11464   0027CE  C017  F023         	movff	___fladd@b+3,___fladd@grs
 11465   0027D2  C01B  F017         	movff	___fladd@a+3,___fladd@b+3
 11466   0027D6  C023  F01B         	movff	___fladd@grs,___fladd@a+3
 11467   0027DA                     l5984:
 11468   0027DA  0E00               	movlw	0
 11469   0027DC  6E23               	movwf	___fladd@grs^0,c
 11470   0027DE  5022               	movf	___fladd@bexp^0,w,c
 11471   0027E0  C021  F01C         	movff	___fladd@aexp,??___fladd
 11472   0027E4  6A1D               	clrf	(??___fladd+1)^0,c
 11473   0027E6  5E1C               	subwf	??___fladd^0,f,c
 11474   0027E8  0E00               	movlw	0
 11475   0027EA  5A1D               	subwfb	(??___fladd+1)^0,f,c
 11476   0027EC  BE1D               	btfsc	(??___fladd+1)^0,7,c
 11477   0027EE  EF02  F014         	goto	u6641
 11478   0027F2  501D               	movf	(??___fladd+1)^0,w,c
 11479   0027F4  E109               	bnz	u6640
 11480   0027F6  0E1A               	movlw	26
 11481   0027F8  5C1C               	subwf	??___fladd^0,w,c
 11482   0027FA  A0D8               	btfss	status,0,c
 11483   0027FC  EF02  F014         	goto	u6641
 11484   002800  EF04  F014         	goto	u6640
 11485   002804                     u6641:
 11486   002804  EF3B  F014         	goto	l846
 11487   002808                     u6640:
 11488   002808  5014               	movf	___fladd@b^0,w,c
 11489   00280A  1015               	iorwf	(___fladd@b+1)^0,w,c
 11490   00280C  1016               	iorwf	(___fladd@b+2)^0,w,c
 11491   00280E  1017               	iorwf	(___fladd@b+3)^0,w,c
 11492   002810  A4D8               	btfss	status,2,c
 11493   002812  EF0D  F014         	goto	u6651
 11494   002816  EF10  F014         	goto	u6650
 11495   00281A                     u6651:
 11496   00281A  0E01               	movlw	1
 11497   00281C  EF11  F014         	goto	u6660
 11498   002820                     u6650:
 11499   002820  0E00               	movlw	0
 11500   002822                     u6660:
 11501   002822  6E23               	movwf	___fladd@grs^0,c
 11502   002824  0E00               	movlw	0
 11503   002826  6E14               	movwf	___fladd@b^0,c
 11504   002828  0E00               	movlw	0
 11505   00282A  6E15               	movwf	(___fladd@b+1)^0,c
 11506   00282C  0E00               	movlw	0
 11507   00282E  6E16               	movwf	(___fladd@b+2)^0,c
 11508   002830  0E00               	movlw	0
 11509   002832  6E17               	movwf	(___fladd@b+3)^0,c
 11510   002834  C021  F022         	movff	___fladd@aexp,___fladd@bexp
 11511   002838  EF44  F014         	goto	l845
 11512   00283C                     l847:
 11513   00283C  A023               	btfss	___fladd@grs^0,0,c
 11514   00283E  EF23  F014         	goto	u6671
 11515   002842  EF25  F014         	goto	u6670
 11516   002846                     u6671:
 11517   002846  EF2B  F014         	goto	l5996
 11518   00284A                     u6670:
 11519   00284A  90D8               	bcf	status,0,c
 11520   00284C  3023               	rrcf	___fladd@grs^0,w,c
 11521   00284E  0901               	iorlw	1
 11522   002850  6E23               	movwf	___fladd@grs^0,c
 11523   002852  EF2D  F014         	goto	l5998
 11524   002856                     l5996:
 11525   002856  90D8               	bcf	status,0,c
 11526   002858  3223               	rrcf	___fladd@grs^0,f,c
 11527   00285A                     l5998:
 11528   00285A  A014               	btfss	___fladd@b^0,0,c
 11529   00285C  EF32  F014         	goto	u6681
 11530   002860  EF34  F014         	goto	u6680
 11531   002864                     u6681:
 11532   002864  EF35  F014         	goto	l6002
 11533   002868                     u6680:
 11534   002868  8E23               	bsf	___fladd@grs^0,7,c
 11535   00286A                     l6002:
 11536   00286A  3417               	rlcf	(___fladd@b+3)^0,w,c
 11537   00286C  3217               	rrcf	(___fladd@b+3)^0,f,c
 11538   00286E  3216               	rrcf	(___fladd@b+2)^0,f,c
 11539   002870  3215               	rrcf	(___fladd@b+1)^0,f,c
 11540   002872  3214               	rrcf	___fladd@b^0,f,c
 11541   002874  2A22               	incf	___fladd@bexp^0,f,c
 11542   002876                     l846:
 11543   002876  5021               	movf	___fladd@aexp^0,w,c
 11544   002878  5C22               	subwf	___fladd@bexp^0,w,c
 11545   00287A  A0D8               	btfss	status,0,c
 11546   00287C  EF42  F014         	goto	u6691
 11547   002880  EF44  F014         	goto	u6690
 11548   002884                     u6691:
 11549   002884  EF1E  F014         	goto	l847
 11550   002888                     u6690:
 11551   002888                     l845:
 11552   002888  BC20               	btfsc	___fladd@signs^0,6,c
 11553   00288A  EF49  F014         	goto	u6701
 11554   00288E  EF4B  F014         	goto	u6700
 11555   002892                     u6701:
 11556   002892  EF8B  F014         	goto	l6030
 11557   002896                     u6700:
 11558   002896  5022               	movf	___fladd@bexp^0,w,c
 11559   002898  A4D8               	btfss	status,2,c
 11560   00289A  EF51  F014         	goto	u6711
 11561   00289E  EF53  F014         	goto	u6710
 11562   0028A2                     u6711:
 11563   0028A2  EF5D  F014         	goto	l6012
 11564   0028A6                     u6710:
 11565   0028A6  0E00               	movlw	0
 11566   0028A8  6E14               	movwf	?___fladd^0,c
 11567   0028AA  0E00               	movlw	0
 11568   0028AC  6E15               	movwf	(?___fladd+1)^0,c
 11569   0028AE  0E00               	movlw	0
 11570   0028B0  6E16               	movwf	(?___fladd+2)^0,c
 11571   0028B2  0E00               	movlw	0
 11572   0028B4  6E17               	movwf	(?___fladd+3)^0,c
 11573   0028B6  EFAC  F015         	goto	l854
 11574   0028BA                     l6012:
 11575   0028BA  5018               	movf	___fladd@a^0,w,c
 11576   0028BC  2614               	addwf	___fladd@b^0,f,c
 11577   0028BE  5019               	movf	(___fladd@a+1)^0,w,c
 11578   0028C0  2215               	addwfc	(___fladd@b+1)^0,f,c
 11579   0028C2  501A               	movf	(___fladd@a+2)^0,w,c
 11580   0028C4  2216               	addwfc	(___fladd@b+2)^0,f,c
 11581   0028C6  501B               	movf	(___fladd@a+3)^0,w,c
 11582   0028C8  2217               	addwfc	(___fladd@b+3)^0,f,c
 11583   0028CA  A017               	btfss	(___fladd@b+3)^0,0,c
 11584   0028CC  EF6A  F014         	goto	u6721
 11585   0028D0  EF6C  F014         	goto	u6720
 11586   0028D4                     u6721:
 11587   0028D4  EF18  F015         	goto	l6066
 11588   0028D8                     u6720:
 11589   0028D8  A023               	btfss	___fladd@grs^0,0,c
 11590   0028DA  EF71  F014         	goto	u6731
 11591   0028DE  EF73  F014         	goto	u6730
 11592   0028E2                     u6731:
 11593   0028E2  EF79  F014         	goto	l6020
 11594   0028E6                     u6730:
 11595   0028E6  90D8               	bcf	status,0,c
 11596   0028E8  3023               	rrcf	___fladd@grs^0,w,c
 11597   0028EA  0901               	iorlw	1
 11598   0028EC  6E23               	movwf	___fladd@grs^0,c
 11599   0028EE  EF7B  F014         	goto	l6022
 11600   0028F2                     l6020:
 11601   0028F2  90D8               	bcf	status,0,c
 11602   0028F4  3223               	rrcf	___fladd@grs^0,f,c
 11603   0028F6                     l6022:
 11604   0028F6  A014               	btfss	___fladd@b^0,0,c
 11605   0028F8  EF80  F014         	goto	u6741
 11606   0028FC  EF82  F014         	goto	u6740
 11607   002900                     u6741:
 11608   002900  EF83  F014         	goto	l6026
 11609   002904                     u6740:
 11610   002904  8E23               	bsf	___fladd@grs^0,7,c
 11611   002906                     l6026:
 11612   002906  3417               	rlcf	(___fladd@b+3)^0,w,c
 11613   002908  3217               	rrcf	(___fladd@b+3)^0,f,c
 11614   00290A  3216               	rrcf	(___fladd@b+2)^0,f,c
 11615   00290C  3215               	rrcf	(___fladd@b+1)^0,f,c
 11616   00290E  3214               	rrcf	___fladd@b^0,f,c
 11617   002910  2A22               	incf	___fladd@bexp^0,f,c
 11618   002912  EF18  F015         	goto	l6066
 11619   002916                     l6030:
 11620   002916  5018               	movf	___fladd@a^0,w,c
 11621   002918  5C14               	subwf	___fladd@b^0,w,c
 11622   00291A  5019               	movf	(___fladd@a+1)^0,w,c
 11623   00291C  5815               	subwfb	(___fladd@b+1)^0,w,c
 11624   00291E  501A               	movf	(___fladd@a+2)^0,w,c
 11625   002920  5816               	subwfb	(___fladd@b+2)^0,w,c
 11626   002922  5017               	movf	(___fladd@b+3)^0,w,c
 11627   002924  0A80               	xorlw	128
 11628   002926  6E1C               	movwf	??___fladd^0,c
 11629   002928  501B               	movf	(___fladd@a+3)^0,w,c
 11630   00292A  0A80               	xorlw	128
 11631   00292C  581C               	subwfb	??___fladd^0,w,c
 11632   00292E  B0D8               	btfsc	status,0,c
 11633   002930  EF9C  F014         	goto	u6751
 11634   002934  EF9E  F014         	goto	u6750
 11635   002938                     u6751:
 11636   002938  EFC9  F014         	goto	l6040
 11637   00293C                     u6750:
 11638   00293C  5014               	movf	___fladd@b^0,w,c
 11639   00293E  5C18               	subwf	___fladd@a^0,w,c
 11640   002940  6E1C               	movwf	??___fladd^0,c
 11641   002942  5015               	movf	(___fladd@b+1)^0,w,c
 11642   002944  5819               	subwfb	(___fladd@a+1)^0,w,c
 11643   002946  6E1D               	movwf	(??___fladd+1)^0,c
 11644   002948  5016               	movf	(___fladd@b+2)^0,w,c
 11645   00294A  581A               	subwfb	(___fladd@a+2)^0,w,c
 11646   00294C  6E1E               	movwf	(??___fladd+2)^0,c
 11647   00294E  5017               	movf	(___fladd@b+3)^0,w,c
 11648   002950  581B               	subwfb	(___fladd@a+3)^0,w,c
 11649   002952  6E1F               	movwf	(??___fladd+3)^0,c
 11650   002954  0EFF               	movlw	255
 11651   002956  241C               	addwf	??___fladd^0,w,c
 11652   002958  6E14               	movwf	___fladd@b^0,c
 11653   00295A  0EFF               	movlw	255
 11654   00295C  201D               	addwfc	(??___fladd+1)^0,w,c
 11655   00295E  6E15               	movwf	(___fladd@b+1)^0,c
 11656   002960  0EFF               	movlw	255
 11657   002962  201E               	addwfc	(??___fladd+2)^0,w,c
 11658   002964  6E16               	movwf	(___fladd@b+2)^0,c
 11659   002966  0EFF               	movlw	255
 11660   002968  201F               	addwfc	(??___fladd+3)^0,w,c
 11661   00296A  6E17               	movwf	(___fladd@b+3)^0,c
 11662   00296C  0E80               	movlw	128
 11663   00296E  1A20               	xorwf	___fladd@signs^0,f,c
 11664   002970  6C23               	negf	___fladd@grs^0,c
 11665   002972  5023               	movf	___fladd@grs^0,w,c
 11666   002974  A4D8               	btfss	status,2,c
 11667   002976  EFBF  F014         	goto	u6761
 11668   00297A  EFC1  F014         	goto	u6760
 11669   00297E                     u6761:
 11670   00297E  EFD1  F014         	goto	l862
 11671   002982                     u6760:
 11672   002982  0E01               	movlw	1
 11673   002984  2614               	addwf	___fladd@b^0,f,c
 11674   002986  0E00               	movlw	0
 11675   002988  2215               	addwfc	(___fladd@b+1)^0,f,c
 11676   00298A  2216               	addwfc	(___fladd@b+2)^0,f,c
 11677   00298C  2217               	addwfc	(___fladd@b+3)^0,f,c
 11678   00298E  EFD1  F014         	goto	l862
 11679   002992                     l6040:
 11680   002992  5018               	movf	___fladd@a^0,w,c
 11681   002994  5E14               	subwf	___fladd@b^0,f,c
 11682   002996  5019               	movf	(___fladd@a+1)^0,w,c
 11683   002998  5A15               	subwfb	(___fladd@b+1)^0,f,c
 11684   00299A  501A               	movf	(___fladd@a+2)^0,w,c
 11685   00299C  5A16               	subwfb	(___fladd@b+2)^0,f,c
 11686   00299E  501B               	movf	(___fladd@a+3)^0,w,c
 11687   0029A0  5A17               	subwfb	(___fladd@b+3)^0,f,c
 11688   0029A2                     l862:
 11689   0029A2  5014               	movf	___fladd@b^0,w,c
 11690   0029A4  1015               	iorwf	(___fladd@b+1)^0,w,c
 11691   0029A6  1016               	iorwf	(___fladd@b+2)^0,w,c
 11692   0029A8  1017               	iorwf	(___fladd@b+3)^0,w,c
 11693   0029AA  A4D8               	btfss	status,2,c
 11694   0029AC  EFDA  F014         	goto	u6771
 11695   0029B0  EFDC  F014         	goto	u6770
 11696   0029B4                     u6771:
 11697   0029B4  EF11  F015         	goto	l6064
 11698   0029B8                     u6770:
 11699   0029B8  5023               	movf	___fladd@grs^0,w,c
 11700   0029BA  A4D8               	btfss	status,2,c
 11701   0029BC  EFE2  F014         	goto	u6781
 11702   0029C0  EFE4  F014         	goto	u6780
 11703   0029C4                     u6781:
 11704   0029C4  EF11  F015         	goto	l6064
 11705   0029C8                     u6780:
 11706   0029C8  0E00               	movlw	0
 11707   0029CA  6E14               	movwf	?___fladd^0,c
 11708   0029CC  0E00               	movlw	0
 11709   0029CE  6E15               	movwf	(?___fladd+1)^0,c
 11710   0029D0  0E00               	movlw	0
 11711   0029D2  6E16               	movwf	(?___fladd+2)^0,c
 11712   0029D4  0E00               	movlw	0
 11713   0029D6  6E17               	movwf	(?___fladd+3)^0,c
 11714   0029D8  EFAC  F015         	goto	l854
 11715   0029DC                     l6048:
 11716   0029DC  90D8               	bcf	status,0,c
 11717   0029DE  3614               	rlcf	___fladd@b^0,f,c
 11718   0029E0  3615               	rlcf	(___fladd@b+1)^0,f,c
 11719   0029E2  3616               	rlcf	(___fladd@b+2)^0,f,c
 11720   0029E4  3617               	rlcf	(___fladd@b+3)^0,f,c
 11721   0029E6  AE23               	btfss	___fladd@grs^0,7,c
 11722   0029E8  EFF8  F014         	goto	u6791
 11723   0029EC  EFFA  F014         	goto	u6790
 11724   0029F0                     u6791:
 11725   0029F0  EFFB  F014         	goto	l6054
 11726   0029F4                     u6790:
 11727   0029F4  8014               	bsf	___fladd@b^0,0,c
 11728   0029F6                     l6054:
 11729   0029F6  A023               	btfss	___fladd@grs^0,0,c
 11730   0029F8  EF00  F015         	goto	u6801
 11731   0029FC  EF02  F015         	goto	u6800
 11732   002A00                     u6801:
 11733   002A00  EF06  F015         	goto	l6058
 11734   002A04                     u6800:
 11735   002A04  80D8               	bsf	status,0,c
 11736   002A06  3623               	rlcf	___fladd@grs^0,f,c
 11737   002A08  EF08  F015         	goto	l6060
 11738   002A0C                     l6058:
 11739   002A0C  90D8               	bcf	status,0,c
 11740   002A0E  3623               	rlcf	___fladd@grs^0,f,c
 11741   002A10                     l6060:
 11742   002A10  5022               	movf	___fladd@bexp^0,w,c
 11743   002A12  B4D8               	btfsc	status,2,c
 11744   002A14  EF0E  F015         	goto	u6811
 11745   002A18  EF10  F015         	goto	u6810
 11746   002A1C                     u6811:
 11747   002A1C  EF11  F015         	goto	l6064
 11748   002A20                     u6810:
 11749   002A20  0622               	decf	___fladd@bexp^0,f,c
 11750   002A22                     l6064:
 11751   002A22  AE16               	btfss	(___fladd@b+2)^0,7,c
 11752   002A24  EF16  F015         	goto	u6821
 11753   002A28  EF18  F015         	goto	u6820
 11754   002A2C                     u6821:
 11755   002A2C  EFEE  F014         	goto	l6048
 11756   002A30                     u6820:
 11757   002A30                     l6066:
 11758   002A30  0E00               	movlw	0
 11759   002A32  6E21               	movwf	___fladd@aexp^0,c
 11760   002A34  AE23               	btfss	___fladd@grs^0,7,c
 11761   002A36  EF1F  F015         	goto	u6831
 11762   002A3A  EF21  F015         	goto	u6830
 11763   002A3E                     u6831:
 11764   002A3E  EF39  F015         	goto	l871
 11765   002A42                     u6830:
 11766   002A42  C023  F01C         	movff	___fladd@grs,??___fladd
 11767   002A46  0E7F               	movlw	127
 11768   002A48  161C               	andwf	??___fladd^0,f,c
 11769   002A4A  B4D8               	btfsc	status,2,c
 11770   002A4C  EF2A  F015         	goto	u6841
 11771   002A50  EF2C  F015         	goto	u6840
 11772   002A54                     u6841:
 11773   002A54  EF30  F015         	goto	l872
 11774   002A58                     u6840:
 11775   002A58                     l6072:
 11776   002A58  0E01               	movlw	1
 11777   002A5A  6E21               	movwf	___fladd@aexp^0,c
 11778   002A5C  EF39  F015         	goto	l871
 11779   002A60                     l872:
 11780   002A60  A014               	btfss	___fladd@b^0,0,c
 11781   002A62  EF35  F015         	goto	u6851
 11782   002A66  EF37  F015         	goto	u6850
 11783   002A6A                     u6851:
 11784   002A6A  EF39  F015         	goto	l871
 11785   002A6E                     u6850:
 11786   002A6E  EF2C  F015         	goto	l6072
 11787   002A72                     l871:
 11788   002A72  5021               	movf	___fladd@aexp^0,w,c
 11789   002A74  B4D8               	btfsc	status,2,c
 11790   002A76  EF3F  F015         	goto	u6861
 11791   002A7A  EF41  F015         	goto	u6860
 11792   002A7E                     u6861:
 11793   002A7E  EF6C  F015         	goto	l6084
 11794   002A82                     u6860:
 11795   002A82  0E01               	movlw	1
 11796   002A84  2614               	addwf	___fladd@b^0,f,c
 11797   002A86  0E00               	movlw	0
 11798   002A88  2215               	addwfc	(___fladd@b+1)^0,f,c
 11799   002A8A  2216               	addwfc	(___fladd@b+2)^0,f,c
 11800   002A8C  2217               	addwfc	(___fladd@b+3)^0,f,c
 11801   002A8E  A017               	btfss	(___fladd@b+3)^0,0,c
 11802   002A90  EF4C  F015         	goto	u6871
 11803   002A94  EF4E  F015         	goto	u6870
 11804   002A98                     u6871:
 11805   002A98  EF6C  F015         	goto	l6084
 11806   002A9C                     u6870:
 11807   002A9C  C014  F01C         	movff	___fladd@b,??___fladd
 11808   002AA0  C015  F01D         	movff	___fladd@b+1,??___fladd+1
 11809   002AA4  C016  F01E         	movff	___fladd@b+2,??___fladd+2
 11810   002AA8  C017  F01F         	movff	___fladd@b+3,??___fladd+3
 11811   002AAC  341F               	rlcf	(??___fladd+3)^0,w,c
 11812   002AAE  321F               	rrcf	(??___fladd+3)^0,f,c
 11813   002AB0  321E               	rrcf	(??___fladd+2)^0,f,c
 11814   002AB2  321D               	rrcf	(??___fladd+1)^0,f,c
 11815   002AB4  321C               	rrcf	??___fladd^0,f,c
 11816   002AB6  C01C  F014         	movff	??___fladd,___fladd@b
 11817   002ABA  C01D  F015         	movff	??___fladd+1,___fladd@b+1
 11818   002ABE  C01E  F016         	movff	??___fladd+2,___fladd@b+2
 11819   002AC2  C01F  F017         	movff	??___fladd+3,___fladd@b+3
 11820   002AC6  2822               	incf	___fladd@bexp^0,w,c
 11821   002AC8  B4D8               	btfsc	status,2,c
 11822   002ACA  EF69  F015         	goto	u6881
 11823   002ACE  EF6B  F015         	goto	u6880
 11824   002AD2                     u6881:
 11825   002AD2  EF6C  F015         	goto	l6084
 11826   002AD6                     u6880:
 11827   002AD6  2A22               	incf	___fladd@bexp^0,f,c
 11828   002AD8                     l6084:
 11829   002AD8  2822               	incf	___fladd@bexp^0,w,c
 11830   002ADA  B4D8               	btfsc	status,2,c
 11831   002ADC  EF72  F015         	goto	u6891
 11832   002AE0  EF74  F015         	goto	u6890
 11833   002AE4                     u6891:
 11834   002AE4  EF7C  F015         	goto	l6088
 11835   002AE8                     u6890:
 11836   002AE8  5022               	movf	___fladd@bexp^0,w,c
 11837   002AEA  A4D8               	btfss	status,2,c
 11838   002AEC  EF7A  F015         	goto	u6901
 11839   002AF0  EF7C  F015         	goto	u6900
 11840   002AF4                     u6901:
 11841   002AF4  EF8E  F015         	goto	l6092
 11842   002AF8                     u6900:
 11843   002AF8                     l6088:
 11844   002AF8  0E00               	movlw	0
 11845   002AFA  6E14               	movwf	___fladd@b^0,c
 11846   002AFC  0E00               	movlw	0
 11847   002AFE  6E15               	movwf	(___fladd@b+1)^0,c
 11848   002B00  0E00               	movlw	0
 11849   002B02  6E16               	movwf	(___fladd@b+2)^0,c
 11850   002B04  0E00               	movlw	0
 11851   002B06  6E17               	movwf	(___fladd@b+3)^0,c
 11852   002B08  5022               	movf	___fladd@bexp^0,w,c
 11853   002B0A  A4D8               	btfss	status,2,c
 11854   002B0C  EF8A  F015         	goto	u6911
 11855   002B10  EF8C  F015         	goto	u6910
 11856   002B14                     u6911:
 11857   002B14  EF8E  F015         	goto	l6092
 11858   002B18                     u6910:
 11859   002B18  0E00               	movlw	0
 11860   002B1A  6E20               	movwf	___fladd@signs^0,c
 11861   002B1C                     l6092:
 11862   002B1C  A022               	btfss	___fladd@bexp^0,0,c
 11863   002B1E  EF93  F015         	goto	u6921
 11864   002B22  EF95  F015         	goto	u6920
 11865   002B26                     u6921:
 11866   002B26  EF98  F015         	goto	l6096
 11867   002B2A                     u6920:
 11868   002B2A  8E16               	bsf	(___fladd@b+2)^0,7,c
 11869   002B2C  EF99  F015         	goto	l6098
 11870   002B30                     l6096:
 11871   002B30  9E16               	bcf	(___fladd@b+2)^0,7,c
 11872   002B32                     l6098:
 11873   002B32  90D8               	bcf	status,0,c
 11874   002B34  3022               	rrcf	___fladd@bexp^0,w,c
 11875   002B36  6E17               	movwf	(___fladd@b+3)^0,c
 11876   002B38  AE20               	btfss	___fladd@signs^0,7,c
 11877   002B3A  EFA1  F015         	goto	u6931
 11878   002B3E  EFA3  F015         	goto	u6930
 11879   002B42                     u6931:
 11880   002B42  EFA4  F015         	goto	l6104
 11881   002B46                     u6930:
 11882   002B46  8E17               	bsf	(___fladd@b+3)^0,7,c
 11883   002B48                     l6104:
 11884   002B48  C014  F014         	movff	___fladd@b,?___fladd
 11885   002B4C  C015  F015         	movff	___fladd@b+1,?___fladd+1
 11886   002B50  C016  F016         	movff	___fladd@b+2,?___fladd+2
 11887   002B54  C017  F017         	movff	___fladd@b+3,?___fladd+3
 11888   002B58                     l854:
 11889   002B58  0012               	return		;funcret
 11890   002B5A                     __end_of___fladd:
 11891                           	callstack 0
 11892                           
 11893 ;; *************** function _buzzerF *****************
 11894 ;; Defined at:
 11895 ;;		line 126 in file "newfile.c"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;		None
 11898 ;; Auto vars:     Size  Location     Type
 11899 ;;		None
 11900 ;; Return value:  Size  Location     Type
 11901 ;;                  1    wreg      void 
 11902 ;; Registers used:
 11903 ;;		wreg, status,2, status,0, cstack
 11904 ;; Tracked objects:
 11905 ;;		On entry : 0/0
 11906 ;;		On exit  : 0/0
 11907 ;;		Unchanged: 0/0
 11908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11913 ;;Total ram usage:        0 bytes
 11914 ;; Hardware stack levels used: 1
 11915 ;; Hardware stack levels required when called: 4
 11916 ;; This function calls:
 11917 ;;		_delay_ms
 11918 ;; This function is called by:
 11919 ;;		_main
 11920 ;; This function uses a non-reentrant model
 11921 ;;
 11922                           
 11923                           	psect	text51
 11924   0050D8                     __ptext51:
 11925                           	callstack 0
 11926   0050D8                     _buzzerF:
 11927                           	callstack 26
 11928   0050D8                     
 11929                           ;newfile.c: 127:     PORTCbits.RC1 = 1;
 11930   0050D8  8282               	bsf	130,1,c	;volatile
 11931   0050DA                     
 11932                           ;newfile.c: 128:     delay_ms(1000);
 11933   0050DA  0E03               	movlw	3
 11934   0050DC  6E15               	movwf	(delay_ms@n+1)^0,c
 11935   0050DE  0EE8               	movlw	232
 11936   0050E0  6E14               	movwf	delay_ms@n^0,c
 11937   0050E2  EC2D  F02B         	call	_delay_ms	;wreg free
 11938   0050E6                     
 11939                           ;newfile.c: 129:     PORTCbits.RC1 = 0;
 11940   0050E6  9282               	bcf	130,1,c	;volatile
 11941                           
 11942                           ;newfile.c: 130:     delay_ms(1000);
 11943   0050E8  0E03               	movlw	3
 11944   0050EA  6E15               	movwf	(delay_ms@n+1)^0,c
 11945   0050EC  0EE8               	movlw	232
 11946   0050EE  6E14               	movwf	delay_ms@n^0,c
 11947   0050F0  EC2D  F02B         	call	_delay_ms	;wreg free
 11948   0050F4                     
 11949                           ;newfile.c: 131:     PORTCbits.RC1 = 1;
 11950   0050F4  8282               	bsf	130,1,c	;volatile
 11951                           
 11952                           ;newfile.c: 132:     delay_ms(1000);
 11953   0050F6  0E03               	movlw	3
 11954   0050F8  6E15               	movwf	(delay_ms@n+1)^0,c
 11955   0050FA  0EE8               	movlw	232
 11956   0050FC  6E14               	movwf	delay_ms@n^0,c
 11957   0050FE  EC2D  F02B         	call	_delay_ms	;wreg free
 11958   005102                     
 11959                           ;newfile.c: 133:     PORTCbits.RC1 = 0;
 11960   005102  9282               	bcf	130,1,c	;volatile
 11961                           
 11962                           ;newfile.c: 134:     delay_ms(1000);
 11963   005104  0E03               	movlw	3
 11964   005106  6E15               	movwf	(delay_ms@n+1)^0,c
 11965   005108  0EE8               	movlw	232
 11966   00510A  6E14               	movwf	delay_ms@n^0,c
 11967   00510C  EC2D  F02B         	call	_delay_ms	;wreg free
 11968   005110                     
 11969                           ;newfile.c: 135:     PORTCbits.RC1 = 1;
 11970   005110  8282               	bsf	130,1,c	;volatile
 11971                           
 11972                           ;newfile.c: 136:     delay_ms(1000);
 11973   005112  0E03               	movlw	3
 11974   005114  6E15               	movwf	(delay_ms@n+1)^0,c
 11975   005116  0EE8               	movlw	232
 11976   005118  6E14               	movwf	delay_ms@n^0,c
 11977   00511A  EC2D  F02B         	call	_delay_ms	;wreg free
 11978   00511E                     
 11979                           ;newfile.c: 137:     PORTCbits.RC1 = 0;
 11980   00511E  9282               	bcf	130,1,c	;volatile
 11981                           
 11982                           ;newfile.c: 138:     delay_ms(1000);
 11983   005120  0E03               	movlw	3
 11984   005122  6E15               	movwf	(delay_ms@n+1)^0,c
 11985   005124  0EE8               	movlw	232
 11986   005126  6E14               	movwf	delay_ms@n^0,c
 11987   005128  EC2D  F02B         	call	_delay_ms	;wreg free
 11988   00512C                     
 11989                           ;newfile.c: 139:     PORTCbits.RC1 = 1;
 11990   00512C  8282               	bsf	130,1,c	;volatile
 11991                           
 11992                           ;newfile.c: 140:     delay_ms(1000);
 11993   00512E  0E03               	movlw	3
 11994   005130  6E15               	movwf	(delay_ms@n+1)^0,c
 11995   005132  0EE8               	movlw	232
 11996   005134  6E14               	movwf	delay_ms@n^0,c
 11997   005136  EC2D  F02B         	call	_delay_ms	;wreg free
 11998   00513A                     
 11999                           ;newfile.c: 141:     PORTCbits.RC1 = 0;
 12000   00513A  9282               	bcf	130,1,c	;volatile
 12001                           
 12002                           ;newfile.c: 142:     delay_ms(1000);
 12003   00513C  0E03               	movlw	3
 12004   00513E  6E15               	movwf	(delay_ms@n+1)^0,c
 12005   005140  0EE8               	movlw	232
 12006   005142  6E14               	movwf	delay_ms@n^0,c
 12007   005144  EC2D  F02B         	call	_delay_ms	;wreg free
 12008   005148  0012               	return		;funcret
 12009   00514A                     __end_of_buzzerF:
 12010                           	callstack 0
 12011                           
 12012 ;; *************** function _delay_ms *****************
 12013 ;; Defined at:
 12014 ;;		line 111 in file "newfile.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;  n               2   19[COMRAM] unsigned int 
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;  i               2   21[COMRAM] int 
 12019 ;; Return value:  Size  Location     Type
 12020 ;;                  1    wreg      void 
 12021 ;; Registers used:
 12022 ;;		wreg, status,2, status,0
 12023 ;; Tracked objects:
 12024 ;;		On entry : 0/0
 12025 ;;		On exit  : 0/0
 12026 ;;		Unchanged: 0/0
 12027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12032 ;;Total ram usage:        4 bytes
 12033 ;; Hardware stack levels used: 1
 12034 ;; Hardware stack levels required when called: 3
 12035 ;; This function calls:
 12036 ;;		Nothing
 12037 ;; This function is called by:
 12038 ;;		_buzzerF
 12039 ;;		_lcd_send_byte
 12040 ;;		_lcd_init
 12041 ;;		_lcd_putc
 12042 ;;		_main
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           	psect	text52
 12047   00565A                     __ptext52:
 12048                           	callstack 0
 12049   00565A                     _delay_ms:
 12050                           	callstack 24
 12051   00565A                     
 12052                           ;newfile.c: 112:     int i;;newfile.c: 113:     for (i = 0; i < n; i++) _delaywdt((unsig
      +                          ned long)((1)*(4000000UL/4000.0)));
 12053   00565A  0E00               	movlw	0
 12054   00565C  6E17               	movwf	(delay_ms@i+1)^0,c
 12055   00565E  0E00               	movlw	0
 12056   005660  6E16               	movwf	delay_ms@i^0,c
 12057   005662  EF3A  F02B         	goto	l93
 12058   005666                     l3796:
 12059   005666  0EC8               	movlw	200
 12060   005668                     u9257:
 12061   005668  0004               	clrwdt	
 12062   00566A  0004               	clrwdt	
 12063   00566C  2EE8               	decfsz	wreg,f,c
 12064   00566E  D7FC               	bra	u9257
 12065   005670  4A16               	infsnz	delay_ms@i^0,f,c
 12066   005672  2A17               	incf	(delay_ms@i+1)^0,f,c
 12067   005674                     l93:
 12068   005674  5014               	movf	delay_ms@n^0,w,c
 12069   005676  5C16               	subwf	delay_ms@i^0,w,c
 12070   005678  5015               	movf	(delay_ms@n+1)^0,w,c
 12071   00567A  5817               	subwfb	(delay_ms@i+1)^0,w,c
 12072   00567C  A0D8               	btfss	status,0,c
 12073   00567E  EF43  F02B         	goto	u3711
 12074   005682  EF45  F02B         	goto	u3710
 12075   005686                     u3711:
 12076   005686  EF33  F02B         	goto	l3796
 12077   00568A                     u3710:
 12078   00568A  0012               	return		;funcret
 12079   00568C                     __end_of_delay_ms:
 12080                           	callstack 0
 12081                           
 12082 ;; *************** function _highIsr *****************
 12083 ;; Defined at:
 12084 ;;		line 425 in file "newfile.c"
 12085 ;; Parameters:    Size  Location     Type
 12086 ;;		None
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;		None
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  1    wreg      void 
 12091 ;; Registers used:
 12092 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12101 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12102 ;;Total ram usage:        2 bytes
 12103 ;; Hardware stack levels used: 1
 12104 ;; Hardware stack levels required when called: 2
 12105 ;; This function calls:
 12106 ;;		_changeClockMode
 12107 ;;		_changeOnOff
 12108 ;;		_clockDecreminting
 12109 ;;		_reloadTimer0
 12110 ;; This function is called by:
 12111 ;;		Interrupt level 2
 12112 ;; This function uses a non-reentrant model
 12113 ;;
 12114                           
 12115                           	psect	intcode
 12116   000008                     __pintcode:
 12117                           	callstack 0
 12118   000008                     _highIsr:
 12119                           	callstack 20
 12120                           
 12121                           ;incstack = 0
 12122   000008  826C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12123   00000A  EDA9  F023         	call	int_func,f	;refresh shadow registers
 12124                           
 12125                           	psect	intcode_body
 12126   004752                     __pintcode_body:
 12127                           	callstack 20
 12128   004752                     int_func:
 12129                           	callstack 20
 12130   004752  0006               	pop		; remove dummy address from shadow register refresh
 12131   004754  CFF3 F012          	movff	prodl,??_highIsr
 12132   004758  CFF4 F013          	movff	prodh,??_highIsr+1
 12133   00475C                     
 12134                           ;newfile.c: 426:     if (INTCONbits.TMR0IF) {
 12135   00475C  A4F2               	btfss	242,2,c	;volatile
 12136   00475E  EFB3  F023         	goto	i2u623_41
 12137   004762  EFB5  F023         	goto	i2u623_40
 12138   004766                     i2u623_41:
 12139   004766  EFF0  F023         	goto	i2l240
 12140   00476A                     i2u623_40:
 12141   00476A                     
 12142                           ;newfile.c: 427:         clockDecreminting();
 12143   00476A  EC88  F021         	call	_clockDecreminting	;wreg free
 12144   00476E                     
 12145                           ;newfile.c: 429:         snd++;
 12146   00476E  4A5D               	infsnz	_snd^0,f,c
 12147   004770  2A5E               	incf	(_snd+1)^0,f,c
 12148   004772                     
 12149                           ;newfile.c: 430:         if (snd >= 60) {
 12150   004772  505E               	movf	(_snd+1)^0,w,c
 12151   004774  E109               	bnz	i2u624_40
 12152   004776  0E3C               	movlw	60
 12153   004778  5C5D               	subwf	_snd^0,w,c
 12154   00477A  A0D8               	btfss	status,0,c
 12155   00477C  EFC2  F023         	goto	i2u624_41
 12156   004780  EFC4  F023         	goto	i2u624_40
 12157   004784                     i2u624_41:
 12158   004784  EFCA  F023         	goto	i2l5492
 12159   004788                     i2u624_40:
 12160   004788                     
 12161                           ;newfile.c: 431:             snd = 0;
 12162   004788  0E00               	movlw	0
 12163   00478A  6E5E               	movwf	(_snd+1)^0,c
 12164   00478C  0E00               	movlw	0
 12165   00478E  6E5D               	movwf	_snd^0,c
 12166   004790                     
 12167                           ;newfile.c: 432:             min++;
 12168   004790  4A5B               	infsnz	_min^0,f,c
 12169   004792  2A5C               	incf	(_min+1)^0,f,c
 12170   004794                     i2l5492:
 12171                           
 12172                           ;newfile.c: 434:         if (min >= 60) {
 12173   004794  505C               	movf	(_min+1)^0,w,c
 12174   004796  E109               	bnz	i2u625_40
 12175   004798  0E3C               	movlw	60
 12176   00479A  5C5B               	subwf	_min^0,w,c
 12177   00479C  A0D8               	btfss	status,0,c
 12178   00479E  EFD3  F023         	goto	i2u625_41
 12179   0047A2  EFD5  F023         	goto	i2u625_40
 12180   0047A6                     i2u625_41:
 12181   0047A6  EFDC  F023         	goto	i2l5498
 12182   0047AA                     i2u625_40:
 12183   0047AA                     
 12184                           ;newfile.c: 435:             min = 0;
 12185   0047AA  0E00               	movlw	0
 12186   0047AC  6E5C               	movwf	(_min+1)^0,c
 12187   0047AE  0E00               	movlw	0
 12188   0047B0  6E5B               	movwf	_min^0,c
 12189   0047B2                     
 12190                           ;newfile.c: 436:             hr++;
 12191   0047B2  0101               	movlb	1	; () banked
 12192   0047B4  4B08               	infsnz	_hr& (0+255),f,b
 12193   0047B6  2B09               	incf	(_hr+1)& (0+255),f,b
 12194   0047B8                     i2l5498:
 12195                           
 12196                           ;newfile.c: 438:         if (hr >= 24) {
 12197   0047B8  0101               	movlb	1	; () banked
 12198   0047BA  5109               	movf	(_hr+1)& (0+255),w,b
 12199   0047BC  E109               	bnz	i2u626_40
 12200   0047BE  0E18               	movlw	24
 12201   0047C0  5D08               	subwf	_hr& (0+255),w,b
 12202   0047C2  A0D8               	btfss	status,0,c
 12203   0047C4  EFE6  F023         	goto	i2u626_41
 12204   0047C8  EFE8  F023         	goto	i2u626_40
 12205   0047CC                     i2u626_41:
 12206   0047CC  EFEC  F023         	goto	i2l5502
 12207   0047D0                     i2u626_40:
 12208   0047D0                     
 12209                           ; BSR set to: 1
 12210                           ;newfile.c: 439:             hr = 0;
 12211   0047D0  0E00               	movlw	0
 12212   0047D2  6F09               	movwf	(_hr+1)& (0+255),b
 12213   0047D4  0E00               	movlw	0
 12214   0047D6  6F08               	movwf	_hr& (0+255),b
 12215   0047D8                     i2l5502:
 12216                           
 12217                           ; BSR set to: 1
 12218                           ;newfile.c: 441:         reloadTimer0();
 12219   0047D8  ECB1  F02B         	call	_reloadTimer0	;wreg free
 12220                           
 12221                           ;newfile.c: 442:     } else if (INTCONbits.INT0IF) {
 12222   0047DC  EF15  F024         	goto	i2l250
 12223   0047E0                     i2l240:
 12224   0047E0  A2F2               	btfss	242,1,c	;volatile
 12225   0047E2  EFF5  F023         	goto	i2u627_41
 12226   0047E6  EFF7  F023         	goto	i2u627_40
 12227   0047EA                     i2u627_41:
 12228   0047EA  EFFB  F023         	goto	i2l245
 12229   0047EE                     i2u627_40:
 12230   0047EE                     
 12231                           ;newfile.c: 443:         changeClockMode();
 12232   0047EE  ECC1  F026         	call	_changeClockMode	;wreg free
 12233                           
 12234                           ;newfile.c: 444:     } else if (INTCON3bits.INT1IF) {
 12235   0047F2  EF15  F024         	goto	i2l250
 12236   0047F6                     i2l245:
 12237   0047F6  A0F0               	btfss	240,0,c	;volatile
 12238   0047F8  EF00  F024         	goto	i2u628_41
 12239   0047FC  EF02  F024         	goto	i2u628_40
 12240   004800                     i2u628_41:
 12241   004800  EF06  F024         	goto	i2l247
 12242   004804                     i2u628_40:
 12243   004804                     
 12244                           ;newfile.c: 445:         changeOnOff();
 12245   004804  EC03  F02A         	call	_changeOnOff	;wreg free
 12246                           
 12247                           ;newfile.c: 446:     } else if (INTCON3bits.INT2IF) {
 12248   004808  EF15  F024         	goto	i2l250
 12249   00480C                     i2l247:
 12250   00480C  A2F0               	btfss	240,1,c	;volatile
 12251   00480E  EF0B  F024         	goto	i2u629_41
 12252   004812  EF0D  F024         	goto	i2u629_40
 12253   004816                     i2u629_41:
 12254   004816  EF15  F024         	goto	i2l246
 12255   00481A                     i2u629_40:
 12256   00481A                     
 12257                           ;newfile.c: 447:         INTCON3bits.INT2IF = 0;
 12258   00481A  92F0               	bcf	240,1,c	;volatile
 12259   00481C                     
 12260                           ;newfile.c: 448:         oven = 0;
 12261   00481C  0E00               	movlw	0
 12262   00481E  6E62               	movwf	(_oven+1)^0,c
 12263   004820  0E00               	movlw	0
 12264   004822  6E61               	movwf	_oven^0,c
 12265   004824                     
 12266                           ;newfile.c: 449:         PORTCbits.RC5 = 0;
 12267   004824  9A82               	bcf	130,5,c	;volatile
 12268   004826  EF15  F024         	goto	i2l250
 12269   00482A                     i2l246:
 12270   00482A                     i2l250:
 12271   00482A  C013  FFF4         	movff	??_highIsr+1,prodh
 12272   00482E  C012  FFF3         	movff	??_highIsr,prodl
 12273   004832  926C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12274   004834  0011               	retfie		f
 12275   004836                     __end_of_highIsr:
 12276                           	callstack 0
 12277                           
 12278 ;; *************** function _reloadTimer0 *****************
 12279 ;; Defined at:
 12280 ;;		line 419 in file "newfile.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;		None
 12283 ;; Auto vars:     Size  Location     Type
 12284 ;;		None
 12285 ;; Return value:  Size  Location     Type
 12286 ;;                  1    wreg      void 
 12287 ;; Registers used:
 12288 ;;		wreg, status,2
 12289 ;; Tracked objects:
 12290 ;;		On entry : 0/0
 12291 ;;		On exit  : 0/0
 12292 ;;		Unchanged: 0/0
 12293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12298 ;;Total ram usage:        0 bytes
 12299 ;; Hardware stack levels used: 1
 12300 ;; This function calls:
 12301 ;;		Nothing
 12302 ;; This function is called by:
 12303 ;;		_highIsr
 12304 ;; This function uses a non-reentrant model
 12305 ;;
 12306                           
 12307                           	psect	text54
 12308   005762                     __ptext54:
 12309                           	callstack 0
 12310   005762                     _reloadTimer0:
 12311                           	callstack 21
 12312   005762                     
 12313                           ;newfile.c: 420:     TMR0H = 0x0B;
 12314   005762  0E0B               	movlw	11
 12315   005764  6ED7               	movwf	215,c	;volatile
 12316                           
 12317                           ;newfile.c: 421:     TMR0L = 0xDC;
 12318   005766  0EDC               	movlw	220
 12319   005768  6ED6               	movwf	214,c	;volatile
 12320   00576A                     
 12321                           ;newfile.c: 422:     INTCONbits.TMR0IF = 0;
 12322   00576A  94F2               	bcf	242,2,c	;volatile
 12323   00576C  0012               	return		;funcret
 12324   00576E                     __end_of_reloadTimer0:
 12325                           	callstack 0
 12326                           
 12327 ;; *************** function _clockDecreminting *****************
 12328 ;; Defined at:
 12329 ;;		line 146 in file "newfile.c"
 12330 ;; Parameters:    Size  Location     Type
 12331 ;;		None
 12332 ;; Auto vars:     Size  Location     Type
 12333 ;;		None
 12334 ;; Return value:  Size  Location     Type
 12335 ;;                  1    wreg      void 
 12336 ;; Registers used:
 12337 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12338 ;; Tracked objects:
 12339 ;;		On entry : 0/0
 12340 ;;		On exit  : 0/0
 12341 ;;		Unchanged: 0/0
 12342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12345 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12346 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;Total ram usage:        4 bytes
 12348 ;; Hardware stack levels used: 1
 12349 ;; Hardware stack levels required when called: 1
 12350 ;; This function calls:
 12351 ;;		i2___awdiv
 12352 ;;		i2___lwdiv
 12353 ;;		i2___wmul
 12354 ;;		i2_restartTimer0
 12355 ;; This function is called by:
 12356 ;;		_highIsr
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360                           	psect	text55
 12361   004310                     __ptext55:
 12362                           	callstack 0
 12363   004310                     _clockDecreminting:
 12364                           	callstack 20
 12365   004310                     
 12366                           ;newfile.c: 147:     INTCONbits.TMR0IF = 0;
 12367   004310  94F2               	bcf	242,2,c	;volatile
 12368   004312                     
 12369                           ;newfile.c: 148:     total_time = seconds + 60 * minutes + 60 * 60 * hours;
 12370   004312  C065  F001         	movff	_hours,i2___wmul@multiplier
 12371   004316  C066  F002         	movff	_hours+1,i2___wmul@multiplier+1
 12372   00431A  0E0E               	movlw	14
 12373   00431C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 12374   00431E  0E10               	movlw	16
 12375   004320  6E03               	movwf	i2___wmul@multiplicand^0,c
 12376   004322  EC87  F02B         	call	i2___wmul	;wreg free
 12377   004326  C001  F00E         	movff	?i2___wmul,??_clockDecreminting
 12378   00432A  C002  F00F         	movff	?i2___wmul+1,??_clockDecreminting+1
 12379   00432E  C067  F001         	movff	_minutes,i2___wmul@multiplier
 12380   004332  C068  F002         	movff	_minutes+1,i2___wmul@multiplier+1
 12381   004336  0E00               	movlw	0
 12382   004338  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 12383   00433A  0E3C               	movlw	60
 12384   00433C  6E03               	movwf	i2___wmul@multiplicand^0,c
 12385   00433E  EC87  F02B         	call	i2___wmul	;wreg free
 12386   004342  5001               	movf	?i2___wmul^0,w,c
 12387   004344  240E               	addwf	??_clockDecreminting^0,w,c
 12388   004346  6E10               	movwf	(??_clockDecreminting+2)^0,c
 12389   004348  5002               	movf	(?i2___wmul+1)^0,w,c
 12390   00434A  200F               	addwfc	(??_clockDecreminting+1)^0,w,c
 12391   00434C  6E11               	movwf	(??_clockDecreminting+3)^0,c
 12392   00434E  0101               	movlb	1	; () banked
 12393   004350  510C               	movf	_seconds& (0+255),w,b
 12394   004352  2410               	addwf	(??_clockDecreminting+2)^0,w,c
 12395   004354  6E5F               	movwf	_total_time^0,c
 12396   004356  510D               	movf	(_seconds+1)& (0+255),w,b
 12397   004358  2011               	addwfc	(??_clockDecreminting+3)^0,w,c
 12398   00435A  6E60               	movwf	(_total_time+1)^0,c
 12399   00435C                     
 12400                           ; BSR set to: 1
 12401                           ;newfile.c: 149:     if (oven == 1 && total_time != 0) {
 12402   00435C  0461               	decf	_oven^0,w,c
 12403   00435E  1062               	iorwf	(_oven+1)^0,w,c
 12404   004360  A4D8               	btfss	status,2,c
 12405   004362  EFB5  F021         	goto	i2u587_41
 12406   004366  EFB7  F021         	goto	i2u587_40
 12407   00436A                     i2u587_41:
 12408   00436A  EFD5  F021         	goto	i2l5226
 12409   00436E                     i2u587_40:
 12410   00436E                     
 12411                           ; BSR set to: 1
 12412   00436E  505F               	movf	_total_time^0,w,c
 12413   004370  1060               	iorwf	(_total_time+1)^0,w,c
 12414   004372  B4D8               	btfsc	status,2,c
 12415   004374  EFBE  F021         	goto	i2u588_41
 12416   004378  EFC0  F021         	goto	i2u588_40
 12417   00437C                     i2u588_41:
 12418   00437C  EFD5  F021         	goto	i2l5226
 12419   004380                     i2u588_40:
 12420   004380                     
 12421                           ; BSR set to: 1
 12422                           ;newfile.c: 150:         total_time--;
 12423   004380  065F               	decf	_total_time^0,f,c
 12424   004382  A0D8               	btfss	status,0,c
 12425   004384  0660               	decf	(_total_time+1)^0,f,c
 12426   004386                     
 12427                           ; BSR set to: 1
 12428                           ;newfile.c: 151:         if (total_time == 0) {
 12429   004386  505F               	movf	_total_time^0,w,c
 12430   004388  1060               	iorwf	(_total_time+1)^0,w,c
 12431   00438A  A4D8               	btfss	status,2,c
 12432   00438C  EFCA  F021         	goto	i2u589_41
 12433   004390  EFCC  F021         	goto	i2u589_40
 12434   004394                     i2u589_41:
 12435   004394  EFD5  F021         	goto	i2l5226
 12436   004398                     i2u589_40:
 12437   004398                     
 12438                           ; BSR set to: 1
 12439                           ;newfile.c: 152:             oven = 0;
 12440   004398  0E00               	movlw	0
 12441   00439A  6E62               	movwf	(_oven+1)^0,c
 12442   00439C  0E00               	movlw	0
 12443   00439E  6E61               	movwf	_oven^0,c
 12444   0043A0                     
 12445                           ; BSR set to: 1
 12446                           ;newfile.c: 153:             PORTCbits.RC5 = 0;
 12447   0043A0  9A82               	bcf	130,5,c	;volatile
 12448                           
 12449                           ;newfile.c: 154:             bzr = 1;
 12450   0043A2  0E00               	movlw	0
 12451   0043A4  6F0B               	movwf	(_bzr+1)& (0+255),b
 12452   0043A6  0E01               	movlw	1
 12453   0043A8  6F0A               	movwf	_bzr& (0+255),b
 12454   0043AA                     i2l5226:
 12455                           
 12456                           ; BSR set to: 1
 12457                           ;newfile.c: 157:     hours = total_time / 3600;
 12458   0043AA  C05F  F001         	movff	_total_time,i2___awdiv@dividend
 12459   0043AE  C060  F002         	movff	_total_time+1,i2___awdiv@dividend+1
 12460   0043B2  0E0E               	movlw	14
 12461   0043B4  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
 12462   0043B6  0E10               	movlw	16
 12463   0043B8  6E03               	movwf	i2___awdiv@divisor^0,c
 12464   0043BA  ECB5  F025         	call	i2___awdiv	;wreg free
 12465   0043BE  C001  F065         	movff	?i2___awdiv,_hours
 12466   0043C2  C002  F066         	movff	?i2___awdiv+1,_hours+1
 12467   0043C6                     
 12468                           ;newfile.c: 158:     minutes = (total_time - hours * 3600) / 60;
 12469   0043C6  C065  F001         	movff	_hours,i2___wmul@multiplier
 12470   0043CA  C066  F002         	movff	_hours+1,i2___wmul@multiplier+1
 12471   0043CE  0EF1               	movlw	241
 12472   0043D0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 12473   0043D2  0EF0               	movlw	240
 12474   0043D4  6E03               	movwf	i2___wmul@multiplicand^0,c
 12475   0043D6  EC87  F02B         	call	i2___wmul	;wreg free
 12476   0043DA  505F               	movf	_total_time^0,w,c
 12477   0043DC  2401               	addwf	?i2___wmul^0,w,c
 12478   0043DE  6E07               	movwf	i2___lwdiv@dividend^0,c
 12479   0043E0  5060               	movf	(_total_time+1)^0,w,c
 12480   0043E2  2002               	addwfc	(?i2___wmul+1)^0,w,c
 12481   0043E4  6E08               	movwf	(i2___lwdiv@dividend+1)^0,c
 12482   0043E6  0E00               	movlw	0
 12483   0043E8  6E0A               	movwf	(i2___lwdiv@divisor+1)^0,c
 12484   0043EA  0E3C               	movlw	60
 12485   0043EC  6E09               	movwf	i2___lwdiv@divisor^0,c
 12486   0043EE  ECF9  F027         	call	i2___lwdiv	;wreg free
 12487   0043F2  C007  F067         	movff	?i2___lwdiv,_minutes
 12488   0043F6  C008  F068         	movff	?i2___lwdiv+1,_minutes+1
 12489   0043FA                     
 12490                           ;newfile.c: 159:     seconds = total_time - hours * 3600 - minutes * 60;
 12491   0043FA  C065  F001         	movff	_hours,i2___wmul@multiplier
 12492   0043FE  C066  F002         	movff	_hours+1,i2___wmul@multiplier+1
 12493   004402  0EF1               	movlw	241
 12494   004404  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 12495   004406  0EF0               	movlw	240
 12496   004408  6E03               	movwf	i2___wmul@multiplicand^0,c
 12497   00440A  EC87  F02B         	call	i2___wmul	;wreg free
 12498   00440E  C001  F00E         	movff	?i2___wmul,??_clockDecreminting
 12499   004412  C002  F00F         	movff	?i2___wmul+1,??_clockDecreminting+1
 12500   004416  C067  F001         	movff	_minutes,i2___wmul@multiplier
 12501   00441A  C068  F002         	movff	_minutes+1,i2___wmul@multiplier+1
 12502   00441E  0EFF               	movlw	255
 12503   004420  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 12504   004422  0EC4               	movlw	196
 12505   004424  6E03               	movwf	i2___wmul@multiplicand^0,c
 12506   004426  EC87  F02B         	call	i2___wmul	;wreg free
 12507   00442A  5001               	movf	?i2___wmul^0,w,c
 12508   00442C  240E               	addwf	??_clockDecreminting^0,w,c
 12509   00442E  6E10               	movwf	(??_clockDecreminting+2)^0,c
 12510   004430  5002               	movf	(?i2___wmul+1)^0,w,c
 12511   004432  200F               	addwfc	(??_clockDecreminting+1)^0,w,c
 12512   004434  6E11               	movwf	(??_clockDecreminting+3)^0,c
 12513   004436  505F               	movf	_total_time^0,w,c
 12514   004438  2410               	addwf	(??_clockDecreminting+2)^0,w,c
 12515   00443A  0101               	movlb	1	; () banked
 12516   00443C  6F0C               	movwf	_seconds& (0+255),b
 12517   00443E  5060               	movf	(_total_time+1)^0,w,c
 12518   004440  2011               	addwfc	(??_clockDecreminting+3)^0,w,c
 12519   004442  6F0D               	movwf	(_seconds+1)& (0+255),b
 12520   004444                     
 12521                           ; BSR set to: 1
 12522                           ;newfile.c: 161:     restartTimer0();
 12523   004444  ECC2  F02B         	call	i2_restartTimer0	;wreg free
 12524   004448  0012               	return		;funcret
 12525   00444A                     __end_of_clockDecreminting:
 12526                           	callstack 0
 12527                           
 12528 ;; *************** function i2_restartTimer0 *****************
 12529 ;; Defined at:
 12530 ;;		line 121 in file "newfile.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;		None
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;		None
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg, status,2
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;Total ram usage:        0 bytes
 12549 ;; Hardware stack levels used: 1
 12550 ;; This function calls:
 12551 ;;		Nothing
 12552 ;; This function is called by:
 12553 ;;		_clockDecreminting
 12554 ;; This function uses a non-reentrant model
 12555 ;;
 12556                           
 12557                           	psect	text56
 12558   005784                     __ptext56:
 12559                           	callstack 0
 12560   005784                     i2_restartTimer0:
 12561                           	callstack 20
 12562   005784                     
 12563                           ;newfile.c: 122:     TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 12564   005784  0E0B               	movlw	11
 12565   005786  6ED7               	movwf	215,c	;volatile
 12566                           
 12567                           ;newfile.c: 123:     TMR0L = (unsigned char) (3036 & 0x00FF);
 12568   005788  0EDC               	movlw	220
 12569   00578A  6ED6               	movwf	214,c	;volatile
 12570   00578C  0012               	return		;funcret
 12571   00578E                     __end_ofi2_restartTimer0:
 12572                           	callstack 0
 12573                           
 12574 ;; *************** function i2___wmul *****************
 12575 ;; Defined at:
 12576 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  multiplier      2    0[COMRAM] unsigned int 
 12579 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;  product         2    4[COMRAM] unsigned int 
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  2    0[COMRAM] unsigned int 
 12584 ;; Registers used:
 12585 ;;		wreg, status,2, status,0, prodl, prodh
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12595 ;;Total ram usage:        6 bytes
 12596 ;; Hardware stack levels used: 1
 12597 ;; This function calls:
 12598 ;;		Nothing
 12599 ;; This function is called by:
 12600 ;;		_clockDecreminting
 12601 ;; This function uses a non-reentrant model
 12602 ;;
 12603                           
 12604                           	psect	text57
 12605   00570E                     __ptext57:
 12606                           	callstack 0
 12607   00570E                     i2___wmul:
 12608                           	callstack 20
 12609   00570E  5001               	movf	i2___wmul@multiplier^0,w,c
 12610   005710  0203               	mulwf	i2___wmul@multiplicand^0,c
 12611   005712  CFF3 F005          	movff	prodl,i2___wmul@product
 12612   005716  CFF4 F006          	movff	prodh,i2___wmul@product+1
 12613   00571A  5001               	movf	i2___wmul@multiplier^0,w,c
 12614   00571C  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 12615   00571E  50F3               	movf	243,w,c
 12616   005720  2606               	addwf	(i2___wmul@product+1)^0,f,c
 12617   005722  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 12618   005724  0203               	mulwf	i2___wmul@multiplicand^0,c
 12619   005726  50F3               	movf	243,w,c
 12620   005728  2606               	addwf	(i2___wmul@product+1)^0,f,c
 12621   00572A  C005  F001         	movff	i2___wmul@product,?i2___wmul
 12622   00572E  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 12623   005732  0012               	return		;funcret
 12624   005734                     __end_ofi2___wmul:
 12625                           	callstack 0
 12626                           
 12627 ;; *************** function i2___lwdiv *****************
 12628 ;; Defined at:
 12629 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;  dividend        2    6[COMRAM] unsigned int 
 12632 ;;  divisor         2    8[COMRAM] unsigned int 
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;  quotient        2   10[COMRAM] unsigned int 
 12635 ;;  counter         1   12[COMRAM] unsigned char 
 12636 ;; Return value:  Size  Location     Type
 12637 ;;                  2    6[COMRAM] unsigned int 
 12638 ;; Registers used:
 12639 ;;		wreg, status,2, status,0
 12640 ;; Tracked objects:
 12641 ;;		On entry : 0/0
 12642 ;;		On exit  : 0/0
 12643 ;;		Unchanged: 0/0
 12644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12646 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12648 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12649 ;;Total ram usage:        7 bytes
 12650 ;; Hardware stack levels used: 1
 12651 ;; This function calls:
 12652 ;;		Nothing
 12653 ;; This function is called by:
 12654 ;;		_clockDecreminting
 12655 ;; This function uses a non-reentrant model
 12656 ;;
 12657                           
 12658                           	psect	text58
 12659   004FF2                     __ptext58:
 12660                           	callstack 0
 12661   004FF2                     i2___lwdiv:
 12662                           	callstack 20
 12663   004FF2  0E00               	movlw	0
 12664   004FF4  6E0C               	movwf	(i2___lwdiv@quotient+1)^0,c
 12665   004FF6  0E00               	movlw	0
 12666   004FF8  6E0B               	movwf	i2___lwdiv@quotient^0,c
 12667   004FFA  5009               	movf	i2___lwdiv@divisor^0,w,c
 12668   004FFC  100A               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 12669   004FFE  B4D8               	btfsc	status,2,c
 12670   005000  EF04  F028         	goto	i2u584_41
 12671   005004  EF06  F028         	goto	i2u584_40
 12672   005008                     i2u584_41:
 12673   005008  EF2E  F028         	goto	i2l808
 12674   00500C                     i2u584_40:
 12675   00500C  0E01               	movlw	1
 12676   00500E  6E0D               	movwf	i2___lwdiv@counter^0,c
 12677   005010  EF0E  F028         	goto	i2l5178
 12678   005014                     i2l5176:
 12679   005014  90D8               	bcf	status,0,c
 12680   005016  3609               	rlcf	i2___lwdiv@divisor^0,f,c
 12681   005018  360A               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 12682   00501A  2A0D               	incf	i2___lwdiv@counter^0,f,c
 12683   00501C                     i2l5178:
 12684   00501C  AE0A               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 12685   00501E  EF13  F028         	goto	i2u585_41
 12686   005022  EF15  F028         	goto	i2u585_40
 12687   005026                     i2u585_41:
 12688   005026  EF0A  F028         	goto	i2l5176
 12689   00502A                     i2u585_40:
 12690   00502A                     i2l5180:
 12691   00502A  90D8               	bcf	status,0,c
 12692   00502C  360B               	rlcf	i2___lwdiv@quotient^0,f,c
 12693   00502E  360C               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 12694   005030  5009               	movf	i2___lwdiv@divisor^0,w,c
 12695   005032  5C07               	subwf	i2___lwdiv@dividend^0,w,c
 12696   005034  500A               	movf	(i2___lwdiv@divisor+1)^0,w,c
 12697   005036  5808               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 12698   005038  A0D8               	btfss	status,0,c
 12699   00503A  EF21  F028         	goto	i2u586_41
 12700   00503E  EF23  F028         	goto	i2u586_40
 12701   005042                     i2u586_41:
 12702   005042  EF28  F028         	goto	i2l5188
 12703   005046                     i2u586_40:
 12704   005046  5009               	movf	i2___lwdiv@divisor^0,w,c
 12705   005048  5E07               	subwf	i2___lwdiv@dividend^0,f,c
 12706   00504A  500A               	movf	(i2___lwdiv@divisor+1)^0,w,c
 12707   00504C  5A08               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 12708   00504E  800B               	bsf	i2___lwdiv@quotient^0,0,c
 12709   005050                     i2l5188:
 12710   005050  90D8               	bcf	status,0,c
 12711   005052  320A               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 12712   005054  3209               	rrcf	i2___lwdiv@divisor^0,f,c
 12713   005056  2E0D               	decfsz	i2___lwdiv@counter^0,f,c
 12714   005058  EF15  F028         	goto	i2l5180
 12715   00505C                     i2l808:
 12716   00505C  C00B  F007         	movff	i2___lwdiv@quotient,?i2___lwdiv
 12717   005060  C00C  F008         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 12718   005064  0012               	return		;funcret
 12719   005066                     __end_ofi2___lwdiv:
 12720                           	callstack 0
 12721                           
 12722 ;; *************** function i2___awdiv *****************
 12723 ;; Defined at:
 12724 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;  dividend        2    0[COMRAM] int 
 12727 ;;  divisor         2    2[COMRAM] int 
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;  quotient        2    6[COMRAM] int 
 12730 ;;  sign            1    5[COMRAM] unsigned char 
 12731 ;;  counter         1    4[COMRAM] unsigned char 
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  2    0[COMRAM] int 
 12734 ;; Registers used:
 12735 ;;		wreg, status,2, status,0
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12742 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12744 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12745 ;;Total ram usage:        8 bytes
 12746 ;; Hardware stack levels used: 1
 12747 ;; This function calls:
 12748 ;;		Nothing
 12749 ;; This function is called by:
 12750 ;;		_clockDecreminting
 12751 ;; This function uses a non-reentrant model
 12752 ;;
 12753                           
 12754                           	psect	text59
 12755   004B6A                     __ptext59:
 12756                           	callstack 0
 12757   004B6A                     i2___awdiv:
 12758                           	callstack 20
 12759   004B6A  0E00               	movlw	0
 12760   004B6C  6E06               	movwf	i2___awdiv@sign^0,c
 12761   004B6E  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
 12762   004B70  EFBE  F025         	goto	i2u578_40
 12763   004B74  EFBC  F025         	goto	i2u578_41
 12764   004B78                     i2u578_41:
 12765   004B78  EFC4  F025         	goto	i2l5134
 12766   004B7C                     i2u578_40:
 12767   004B7C  6C03               	negf	i2___awdiv@divisor^0,c
 12768   004B7E  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
 12769   004B80  B0D8               	btfsc	status,0,c
 12770   004B82  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
 12771   004B84  0E01               	movlw	1
 12772   004B86  6E06               	movwf	i2___awdiv@sign^0,c
 12773   004B88                     i2l5134:
 12774   004B88  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
 12775   004B8A  EFCB  F025         	goto	i2u579_40
 12776   004B8E  EFC9  F025         	goto	i2u579_41
 12777   004B92                     i2u579_41:
 12778   004B92  EFD1  F025         	goto	i2l5140
 12779   004B96                     i2u579_40:
 12780   004B96  6C01               	negf	i2___awdiv@dividend^0,c
 12781   004B98  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
 12782   004B9A  B0D8               	btfsc	status,0,c
 12783   004B9C  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
 12784   004B9E  0E01               	movlw	1
 12785   004BA0  1A06               	xorwf	i2___awdiv@sign^0,f,c
 12786   004BA2                     i2l5140:
 12787   004BA2  0E00               	movlw	0
 12788   004BA4  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
 12789   004BA6  0E00               	movlw	0
 12790   004BA8  6E07               	movwf	i2___awdiv@quotient^0,c
 12791   004BAA  5003               	movf	i2___awdiv@divisor^0,w,c
 12792   004BAC  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 12793   004BAE  B4D8               	btfsc	status,2,c
 12794   004BB0  EFDC  F025         	goto	i2u580_41
 12795   004BB4  EFDE  F025         	goto	i2u580_40
 12796   004BB8                     i2u580_41:
 12797   004BB8  EF06  F026         	goto	i2l5162
 12798   004BBC                     i2u580_40:
 12799   004BBC  0E01               	movlw	1
 12800   004BBE  6E05               	movwf	i2___awdiv@counter^0,c
 12801   004BC0  EFE6  F025         	goto	i2l5148
 12802   004BC4                     i2l5146:
 12803   004BC4  90D8               	bcf	status,0,c
 12804   004BC6  3603               	rlcf	i2___awdiv@divisor^0,f,c
 12805   004BC8  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 12806   004BCA  2A05               	incf	i2___awdiv@counter^0,f,c
 12807   004BCC                     i2l5148:
 12808   004BCC  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
 12809   004BCE  EFEB  F025         	goto	i2u581_41
 12810   004BD2  EFED  F025         	goto	i2u581_40
 12811   004BD6                     i2u581_41:
 12812   004BD6  EFE2  F025         	goto	i2l5146
 12813   004BDA                     i2u581_40:
 12814   004BDA                     i2l5150:
 12815   004BDA  90D8               	bcf	status,0,c
 12816   004BDC  3607               	rlcf	i2___awdiv@quotient^0,f,c
 12817   004BDE  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 12818   004BE0  5003               	movf	i2___awdiv@divisor^0,w,c
 12819   004BE2  5C01               	subwf	i2___awdiv@dividend^0,w,c
 12820   004BE4  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 12821   004BE6  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 12822   004BE8  A0D8               	btfss	status,0,c
 12823   004BEA  EFF9  F025         	goto	i2u582_41
 12824   004BEE  EFFB  F025         	goto	i2u582_40
 12825   004BF2                     i2u582_41:
 12826   004BF2  EF00  F026         	goto	i2l5158
 12827   004BF6                     i2u582_40:
 12828   004BF6  5003               	movf	i2___awdiv@divisor^0,w,c
 12829   004BF8  5E01               	subwf	i2___awdiv@dividend^0,f,c
 12830   004BFA  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 12831   004BFC  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 12832   004BFE  8007               	bsf	i2___awdiv@quotient^0,0,c
 12833   004C00                     i2l5158:
 12834   004C00  90D8               	bcf	status,0,c
 12835   004C02  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 12836   004C04  3203               	rrcf	i2___awdiv@divisor^0,f,c
 12837   004C06  2E05               	decfsz	i2___awdiv@counter^0,f,c
 12838   004C08  EFED  F025         	goto	i2l5150
 12839   004C0C                     i2l5162:
 12840   004C0C  5006               	movf	i2___awdiv@sign^0,w,c
 12841   004C0E  B4D8               	btfsc	status,2,c
 12842   004C10  EF0C  F026         	goto	i2u583_41
 12843   004C14  EF0E  F026         	goto	i2u583_40
 12844   004C18                     i2u583_41:
 12845   004C18  EF12  F026         	goto	i2l5166
 12846   004C1C                     i2u583_40:
 12847   004C1C  6C07               	negf	i2___awdiv@quotient^0,c
 12848   004C1E  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
 12849   004C20  B0D8               	btfsc	status,0,c
 12850   004C22  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
 12851   004C24                     i2l5166:
 12852   004C24  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 12853   004C28  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 12854   004C2C  0012               	return		;funcret
 12855   004C2E                     __end_ofi2___awdiv:
 12856                           	callstack 0
 12857                           
 12858 ;; *************** function _changeOnOff *****************
 12859 ;; Defined at:
 12860 ;;		line 314 in file "newfile.c"
 12861 ;; Parameters:    Size  Location     Type
 12862 ;;		None
 12863 ;; Auto vars:     Size  Location     Type
 12864 ;;		None
 12865 ;; Return value:  Size  Location     Type
 12866 ;;                  1    wreg      void 
 12867 ;; Registers used:
 12868 ;;		wreg, status,2, status,0
 12869 ;; Tracked objects:
 12870 ;;		On entry : 0/0
 12871 ;;		On exit  : 0/0
 12872 ;;		Unchanged: 0/0
 12873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12878 ;;Total ram usage:        0 bytes
 12879 ;; Hardware stack levels used: 1
 12880 ;; This function calls:
 12881 ;;		Nothing
 12882 ;; This function is called by:
 12883 ;;		_highIsr
 12884 ;; This function uses a non-reentrant model
 12885 ;;
 12886                           
 12887                           	psect	text60
 12888   005406                     __ptext60:
 12889                           	callstack 0
 12890   005406                     _changeOnOff:
 12891                           	callstack 21
 12892   005406                     
 12893                           ;newfile.c: 315:     INTCON3bits.INT1IF = 0;
 12894   005406  90F0               	bcf	240,0,c	;volatile
 12895   005408                     
 12896                           ;newfile.c: 316:     if (flagToggle == 1) {
 12897   005408  0100               	movlb	0	; () banked
 12898   00540A  05FD               	decf	_flagToggle& (0+255),w,b
 12899   00540C  11FE               	iorwf	(_flagToggle+1)& (0+255),w,b
 12900   00540E  A4D8               	btfss	status,2,c
 12901   005410  EF0C  F02A         	goto	i2u597_41
 12902   005414  EF0E  F02A         	goto	i2u597_40
 12903   005418                     i2u597_41:
 12904   005418  EF18  F02A         	goto	i2l5350
 12905   00541C                     i2u597_40:
 12906   00541C                     
 12907                           ; BSR set to: 0
 12908                           ;newfile.c: 317:         oven = 1;
 12909   00541C  0E00               	movlw	0
 12910   00541E  6E62               	movwf	(_oven+1)^0,c
 12911   005420  0E01               	movlw	1
 12912   005422  6E61               	movwf	_oven^0,c
 12913                           
 12914                           ;newfile.c: 318:         flagToggle = 0;
 12915   005424  0E00               	movlw	0
 12916   005426  6FFE               	movwf	(_flagToggle+1)& (0+255),b
 12917   005428  0E00               	movlw	0
 12918   00542A  6FFD               	movwf	_flagToggle& (0+255),b
 12919                           
 12920                           ;newfile.c: 319:     } else if (flagToggle == 0) {
 12921   00542C  EF29  F02A         	goto	i2l184
 12922   005430                     i2l5350:
 12923                           
 12924                           ; BSR set to: 0
 12925   005430  51FD               	movf	_flagToggle& (0+255),w,b
 12926   005432  11FE               	iorwf	(_flagToggle+1)& (0+255),w,b
 12927   005434  A4D8               	btfss	status,2,c
 12928   005436  EF1F  F02A         	goto	i2u598_41
 12929   00543A  EF21  F02A         	goto	i2u598_40
 12930   00543E                     i2u598_41:
 12931   00543E  EF29  F02A         	goto	i2l184
 12932   005442                     i2u598_40:
 12933   005442                     
 12934                           ; BSR set to: 0
 12935                           ;newfile.c: 321:         oven = 0;
 12936   005442  0E00               	movlw	0
 12937   005444  6E62               	movwf	(_oven+1)^0,c
 12938   005446  0E00               	movlw	0
 12939   005448  6E61               	movwf	_oven^0,c
 12940                           
 12941                           ;newfile.c: 322:         flagToggle = 1;
 12942   00544A  0E00               	movlw	0
 12943   00544C  6FFE               	movwf	(_flagToggle+1)& (0+255),b
 12944   00544E  0E01               	movlw	1
 12945   005450  6FFD               	movwf	_flagToggle& (0+255),b
 12946   005452                     i2l184:
 12947                           
 12948                           ; BSR set to: 0
 12949   005452  0012               	return		;funcret
 12950   005454                     __end_of_changeOnOff:
 12951                           	callstack 0
 12952                           
 12953 ;; *************** function _changeClockMode *****************
 12954 ;; Defined at:
 12955 ;;		line 305 in file "newfile.c"
 12956 ;; Parameters:    Size  Location     Type
 12957 ;;		None
 12958 ;; Auto vars:     Size  Location     Type
 12959 ;;		None
 12960 ;; Return value:  Size  Location     Type
 12961 ;;                  1    wreg      void 
 12962 ;; Registers used:
 12963 ;;		wreg, status,2, status,0
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12973 ;;Total ram usage:        0 bytes
 12974 ;; Hardware stack levels used: 1
 12975 ;; This function calls:
 12976 ;;		Nothing
 12977 ;; This function is called by:
 12978 ;;		_highIsr
 12979 ;; This function uses a non-reentrant model
 12980 ;;
 12981                           
 12982                           	psect	text61
 12983   004D82                     __ptext61:
 12984                           	callstack 0
 12985   004D82                     _changeClockMode:
 12986                           	callstack 21
 12987   004D82                     
 12988                           ;newfile.c: 306:     INTCONbits.INT0IF = 0;
 12989   004D82  92F2               	bcf	242,1,c	;volatile
 12990   004D84                     
 12991                           ;newfile.c: 307:     if (Mode == 0) Mode = 1;
 12992   004D84  5063               	movf	_Mode^0,w,c
 12993   004D86  1064               	iorwf	(_Mode+1)^0,w,c
 12994   004D88  A4D8               	btfss	status,2,c
 12995   004D8A  EFC9  F026         	goto	i2u593_41
 12996   004D8E  EFCB  F026         	goto	i2u593_40
 12997   004D92                     i2u593_41:
 12998   004D92  EFD1  F026         	goto	i2l5330
 12999   004D96                     i2u593_40:
 13000   004D96  0E00               	movlw	0
 13001   004D98  6E64               	movwf	(_Mode+1)^0,c
 13002   004D9A  0E01               	movlw	1
 13003   004D9C  6E63               	movwf	_Mode^0,c
 13004   004D9E  EF04  F027         	goto	i2l178
 13005   004DA2                     i2l5330:
 13006   004DA2  0463               	decf	_Mode^0,w,c
 13007   004DA4  1064               	iorwf	(_Mode+1)^0,w,c
 13008   004DA6  A4D8               	btfss	status,2,c
 13009   004DA8  EFD8  F026         	goto	i2u594_41
 13010   004DAC  EFDA  F026         	goto	i2u594_40
 13011   004DB0                     i2u594_41:
 13012   004DB0  EFE0  F026         	goto	i2l5334
 13013   004DB4                     i2u594_40:
 13014   004DB4  0E00               	movlw	0
 13015   004DB6  6E64               	movwf	(_Mode+1)^0,c
 13016   004DB8  0E02               	movlw	2
 13017   004DBA  6E63               	movwf	_Mode^0,c
 13018   004DBC  EF04  F027         	goto	i2l178
 13019   004DC0                     i2l5334:
 13020   004DC0  0E02               	movlw	2
 13021   004DC2  1863               	xorwf	_Mode^0,w,c
 13022   004DC4  1064               	iorwf	(_Mode+1)^0,w,c
 13023   004DC6  A4D8               	btfss	status,2,c
 13024   004DC8  EFE8  F026         	goto	i2u595_41
 13025   004DCC  EFEA  F026         	goto	i2u595_40
 13026   004DD0                     i2u595_41:
 13027   004DD0  EFF0  F026         	goto	i2l5338
 13028   004DD4                     i2u595_40:
 13029   004DD4  0E00               	movlw	0
 13030   004DD6  6E64               	movwf	(_Mode+1)^0,c
 13031   004DD8  0E03               	movlw	3
 13032   004DDA  6E63               	movwf	_Mode^0,c
 13033   004DDC  EF04  F027         	goto	i2l178
 13034   004DE0                     i2l5338:
 13035   004DE0  0E03               	movlw	3
 13036   004DE2  1863               	xorwf	_Mode^0,w,c
 13037   004DE4  1064               	iorwf	(_Mode+1)^0,w,c
 13038   004DE6  A4D8               	btfss	status,2,c
 13039   004DE8  EFF8  F026         	goto	i2u596_41
 13040   004DEC  EFFA  F026         	goto	i2u596_40
 13041   004DF0                     i2u596_41:
 13042   004DF0  EF00  F027         	goto	i2l5342
 13043   004DF4                     i2u596_40:
 13044   004DF4  0E00               	movlw	0
 13045   004DF6  6E64               	movwf	(_Mode+1)^0,c
 13046   004DF8  0E04               	movlw	4
 13047   004DFA  6E63               	movwf	_Mode^0,c
 13048   004DFC  EF04  F027         	goto	i2l178
 13049   004E00                     i2l5342:
 13050   004E00  0E00               	movlw	0
 13051   004E02  6E64               	movwf	(_Mode+1)^0,c
 13052   004E04  0E00               	movlw	0
 13053   004E06  6E63               	movwf	_Mode^0,c
 13054   004E08                     i2l178:
 13055   004E08  0012               	return		;funcret
 13056   004E0A                     __end_of_changeClockMode:
 13057                           	callstack 0
 13058                           
 13059                           	psect	rparam
 13060   000000                     
 13061                           	psect	temp
 13062   00006C                     btemp:
 13063                           	callstack 0
 13064   00006C                     	ds	1
 13065   000000                     int$flags	set	btemp
 13066   000000                     wtemp8	set	btemp+1
 13067   000000                     ttemp5	set	btemp+1
 13068   000000                     ttemp6	set	btemp+4
 13069   000000                     ttemp7	set	btemp+8
 13070                           
 13071                           	psect	idloc
 13072                           
 13073                           ;Config register IDLOC0 @ 0x200000
 13074                           ;	unspecified, using default values
 13075   200000                     	org	2097152
 13076   200000  FF                 	db	255
 13077                           
 13078                           ;Config register IDLOC1 @ 0x200001
 13079                           ;	unspecified, using default values
 13080   200001                     	org	2097153
 13081   200001  FF                 	db	255
 13082                           
 13083                           ;Config register IDLOC2 @ 0x200002
 13084                           ;	unspecified, using default values
 13085   200002                     	org	2097154
 13086   200002  FF                 	db	255
 13087                           
 13088                           ;Config register IDLOC3 @ 0x200003
 13089                           ;	unspecified, using default values
 13090   200003                     	org	2097155
 13091   200003  FF                 	db	255
 13092                           
 13093                           ;Config register IDLOC4 @ 0x200004
 13094                           ;	unspecified, using default values
 13095   200004                     	org	2097156
 13096   200004  FF                 	db	255
 13097                           
 13098                           ;Config register IDLOC5 @ 0x200005
 13099                           ;	unspecified, using default values
 13100   200005                     	org	2097157
 13101   200005  FF                 	db	255
 13102                           
 13103                           ;Config register IDLOC6 @ 0x200006
 13104                           ;	unspecified, using default values
 13105   200006                     	org	2097158
 13106   200006  FF                 	db	255
 13107                           
 13108                           ;Config register IDLOC7 @ 0x200007
 13109                           ;	unspecified, using default values
 13110   200007                     	org	2097159
 13111   200007  FF                 	db	255
 13112                           
 13113                           	psect	config
 13114                           
 13115                           ; Padding undefined space
 13116   300000                     	org	3145728
 13117   300000  FF                 	db	255
 13118                           
 13119                           ;Config register CONFIG1H @ 0x300001
 13120                           ;	Oscillator Selection bits
 13121                           ;	OSC = XT, XT oscillator
 13122                           ;	Fail-Safe Clock Monitor Enable bit
 13123                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13124                           ;	Internal/External Oscillator Switchover bit
 13125                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13126   300001                     	org	3145729
 13127   300001  01                 	db	1
 13128                           
 13129                           ;Config register CONFIG2L @ 0x300002
 13130                           ;	Power-up Timer Enable bit
 13131                           ;	PWRT = OFF, PWRT disabled
 13132                           ;	Brown-out Reset Enable bits
 13133                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 13134                           ;	Brown Out Reset Voltage bits
 13135                           ;	BORV = 3, Minimum setting
 13136   300002                     	org	3145730
 13137   300002  1F                 	db	31
 13138                           
 13139                           ;Config register CONFIG2H @ 0x300003
 13140                           ;	Watchdog Timer Enable bit
 13141                           ;	WDT = ON, WDT enabled
 13142                           ;	Watchdog Timer Postscale Select bits
 13143                           ;	WDTPS = 32768, 1:32768
 13144   300003                     	org	3145731
 13145   300003  1F                 	db	31
 13146                           
 13147                           ; Padding undefined space
 13148   300004                     	org	3145732
 13149   300004  FF                 	db	255
 13150                           
 13151                           ;Config register CONFIG3H @ 0x300005
 13152                           ;	CCP2 MUX bit
 13153                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 13154                           ;	PORTB A/D Enable bit
 13155                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 13156                           ;	Low-Power Timer1 Oscillator Enable bit
 13157                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13158                           ;	MCLR Pin Enable bit
 13159                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 13160   300005                     	org	3145733
 13161   300005  83                 	db	131
 13162                           
 13163                           ;Config register CONFIG4L @ 0x300006
 13164                           ;	Stack Full/Underflow Reset Enable bit
 13165                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13166                           ;	Single-Supply ICSP Enable bit
 13167                           ;	LVP = ON, Single-Supply ICSP enabled
 13168                           ;	Extended Instruction Set Enable bit
 13169                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13170                           ;	Background Debugger Enable bit
 13171                           ;	DEBUG = 0x1, unprogrammed default
 13172   300006                     	org	3145734
 13173   300006  85                 	db	133
 13174                           
 13175                           ; Padding undefined space
 13176   300007                     	org	3145735
 13177   300007  FF                 	db	255
 13178                           
 13179                           ;Config register CONFIG5L @ 0x300008
 13180                           ;	Code Protection bit
 13181                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13182                           ;	Code Protection bit
 13183                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13184                           ;	Code Protection bit
 13185                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13186                           ;	Code Protection bit
 13187                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13188   300008                     	org	3145736
 13189   300008  0F                 	db	15
 13190                           
 13191                           ;Config register CONFIG5H @ 0x300009
 13192                           ;	Boot Block Code Protection bit
 13193                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13194                           ;	Data EEPROM Code Protection bit
 13195                           ;	CPD = OFF, Data EEPROM not code-protected
 13196   300009                     	org	3145737
 13197   300009  C0                 	db	192
 13198                           
 13199                           ;Config register CONFIG6L @ 0x30000A
 13200                           ;	Write Protection bit
 13201                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13202                           ;	Write Protection bit
 13203                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13204                           ;	Write Protection bit
 13205                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13206                           ;	Write Protection bit
 13207                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 13208   30000A                     	org	3145738
 13209   30000A  0F                 	db	15
 13210                           
 13211                           ;Config register CONFIG6H @ 0x30000B
 13212                           ;	Configuration Register Write Protection bit
 13213                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13214                           ;	Boot Block Write Protection bit
 13215                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13216                           ;	Data EEPROM Write Protection bit
 13217                           ;	WRTD = OFF, Data EEPROM not write-protected
 13218   30000B                     	org	3145739
 13219   30000B  E0                 	db	224
 13220                           
 13221                           ;Config register CONFIG7L @ 0x30000C
 13222                           ;	Table Read Protection bit
 13223                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13224                           ;	Table Read Protection bit
 13225                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13226                           ;	Table Read Protection bit
 13227                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13228                           ;	Table Read Protection bit
 13229                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13230   30000C                     	org	3145740
 13231   30000C  0F                 	db	15
 13232                           
 13233                           ;Config register CONFIG7H @ 0x30000D
 13234                           ;	Boot Block Table Read Protection bit
 13235                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13236   30000D                     	org	3145741
 13237   30000D  40                 	db	64
 13238                           tosu	equ	0xFFF
 13239                           tosh	equ	0xFFE
 13240                           tosl	equ	0xFFD
 13241                           stkptr	equ	0xFFC
 13242                           pclatu	equ	0xFFB
 13243                           pclath	equ	0xFFA
 13244                           pcl	equ	0xFF9
 13245                           tblptru	equ	0xFF8
 13246                           tblptrh	equ	0xFF7
 13247                           tblptrl	equ	0xFF6
 13248                           tablat	equ	0xFF5
 13249                           prodh	equ	0xFF4
 13250                           prodl	equ	0xFF3
 13251                           indf0	equ	0xFEF
 13252                           postinc0	equ	0xFEE
 13253                           postdec0	equ	0xFED
 13254                           preinc0	equ	0xFEC
 13255                           plusw0	equ	0xFEB
 13256                           fsr0h	equ	0xFEA
 13257                           fsr0l	equ	0xFE9
 13258                           wreg	equ	0xFE8
 13259                           indf1	equ	0xFE7
 13260                           postinc1	equ	0xFE6
 13261                           postdec1	equ	0xFE5
 13262                           preinc1	equ	0xFE4
 13263                           plusw1	equ	0xFE3
 13264                           fsr1h	equ	0xFE2
 13265                           fsr1l	equ	0xFE1
 13266                           bsr	equ	0xFE0
 13267                           indf2	equ	0xFDF
 13268                           postinc2	equ	0xFDE
 13269                           postdec2	equ	0xFDD
 13270                           preinc2	equ	0xFDC
 13271                           plusw2	equ	0xFDB
 13272                           fsr2h	equ	0xFDA
 13273                           fsr2l	equ	0xFD9
 13274                           status	equ	0xFD8

Data Sizes:
    Strings     152
    Constant    0
    Data        11
    BSS         123
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     86     107
    BANK0           128    106     127
    BANK1           256     60     154
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_32(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_32(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[6]), STR_17(CODE[17]), STR_11(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[11]), STR_4(CODE[6]), STR_3(CODE[11]), STR_2(CODE[21]), 
		 -> STR_1(CODE[24]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[6]), STR_17(CODE[17]), STR_11(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[11]), STR_4(CODE[6]), STR_3(CODE[11]), STR_2(CODE[21]), 
		 -> STR_1(CODE[24]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_23(CODE[6]), STR_22(CODE[6]), 
		 -> STR_21(CODE[6]), STR_20(CODE[6]), STR_19(CODE[6]), STR_16(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), STR_12(CODE[6]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> main@voltage(BANK1[4]), main@p1(BANK1[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_23(CODE[6]), STR_22(CODE[6]), 
		 -> STR_21(CODE[6]), STR_20(CODE[6]), STR_19(CODE[6]), STR_16(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), STR_12(CODE[6]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> main@voltage(BANK1[4]), main@p1(BANK1[4]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[4]), STR_24(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[4]), STR_24(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[6]), STR_17(CODE[17]), STR_11(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[11]), STR_4(CODE[6]), STR_3(CODE[11]), STR_2(CODE[21]), 
		 -> STR_1(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[6]), STR_17(CODE[17]), STR_11(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[11]), STR_4(CODE[6]), STR_3(CODE[11]), STR_2(CODE[21]), 
		 -> STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[6]), STR_17(CODE[17]), STR_11(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[11]), STR_4(CODE[6]), STR_3(CODE[11]), STR_2(CODE[21]), 
		 -> STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[6]), STR_17(CODE[17]), STR_11(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[11]), STR_4(CODE[6]), STR_3(CODE[11]), STR_2(CODE[21]), 
		 -> STR_1(CODE[24]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1401$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_16(CODE[6]), STR_15(CODE[6]), 
		 -> STR_14(CODE[6]), STR_13(CODE[6]), STR_12(CODE[6]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), main@voltage(BANK1[4]), 
		 -> main@p1(BANK1[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_23(CODE[6]), STR_22(CODE[6]), 
		 -> STR_21(CODE[6]), STR_20(CODE[6]), STR_19(CODE[6]), STR_16(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), STR_12(CODE[6]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> main@voltage(BANK1[4]), main@p1(BANK1[4]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_18(CODE[6]), STR_17(CODE[17]), STR_11(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[11]), STR_4(CODE[6]), STR_3(CODE[11]), STR_2(CODE[21]), 
		 -> STR_1(CODE[24]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> main@Buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1312$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1312$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    main$874	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_23(CODE[6]), STR_22(CODE[6]), 

    main$873	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[6]), 

    main$872	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[6]), 

    main$871	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[6]), 
		 -> STR_19(CODE[6]), 

    main$858	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), 

    main$857	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_14(CODE[6]), 

    main$856	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), 

    main$855	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_16(CODE[6]), STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), 
		 -> STR_12(CODE[6]), 

    main$844	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_10(CODE[4]), STR_9(CODE[4]), 

    main$838	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_5(CODE[4]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 32
		 -> main@Buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_efgtoa
    _stoa->_fputc
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _read_adc_voltage->___fldiv
    ___xxtofl->___wmul
    ___fldiv->___xxtofl
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles
    _incrementClock->___lwdiv
    _decrementClock->___lwdiv
    ___lwdiv->___wmul
    _controlingTemp->___flge
    ___flge->___flmul
    _buzzerF->_delay_ms

Critical Paths under _highIsr in COMRAM

    _highIsr->_clockDecreminting
    _clockDecreminting->i2___lwdiv
    i2___lwdiv->i2___wmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                60    60      0   90256
                                              0 BANK1     60    60      0
                            ___flmul
                            _buzzerF
                     _controlingTemp
                     _decrementClock
                           _delay_ms
                     _incrementClock
                               _init
                    _init_adc_no_lib
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
                   _read_adc_voltage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10   48164
                                             83 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   46208
                                             75 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           26    20      6   45657
                                             51 BANK0     24    18      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2431
                                             28 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   28452
                                             84 COMRAM     2     2      0
                                              0 BANK0     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     497
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4367
                                             44 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3773
                                             19 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    6965
                                             46 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4665
                                             35 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1897
                                             28 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1397
                                             19 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    3494
                                             25 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     371
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                    11     7      4    5767
                                             64 COMRAM    11     7      4
                            ___fldiv
                             ___wmul
                           ___xxtofl
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      45
                                             19 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                             25 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2903
                                             39 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    6098
                                             37 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    5369
                                             34 COMRAM     3     3      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           5     4      1    2523
                                             29 COMRAM     5     4      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    2984
                                             29 COMRAM     1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1692
                                             27 COMRAM     2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      68
                                             25 COMRAM     2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (5) _delay_cycles                                         6     6      0      46
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                      _restartTimer0
 ---------------------------------------------------------------------------------
 (2) _restartTimer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _incrementClock                                       4     4      0    3592
                                             32 COMRAM     4     4      0
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _decrementClock                                       4     4      0    3592
                                             32 COMRAM     4     4      0
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2322
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     566
                                             25 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     704
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _controlingTemp                                       0     0      0    5148
                            ___fladd
                             ___flge
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1346
                                             44 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3802
                                             19 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _buzzerF                                              0     0      0    1110
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             4     2      2    1110
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _highIsr                                              2     2      0     985
                                             17 COMRAM     2     2      0
                    _changeClockMode
                        _changeOnOff
                  _clockDecreminting
                       _reloadTimer0
 ---------------------------------------------------------------------------------
 (10) _reloadTimer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _clockDecreminting                                   4     4      0     985
                                             13 COMRAM     4     4      0
                          i2___awdiv
                          i2___lwdiv
                           i2___wmul
                    i2_restartTimer0
 ---------------------------------------------------------------------------------
 (11) i2_restartTimer0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4     419
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     214
                                              6 COMRAM     7     3      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) _changeOnOff                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _changeClockMode                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
   _buzzerF
     _delay_ms
   _controlingTemp
     ___fladd
     ___flge
       ___fladd (ARG)
       ___flmul (ARG)
   _decrementClock
     ___awdiv
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _delay_ms
   _incrementClock
     ___awdiv
     ___lwdiv
     ___wmul
   _init
     _restartTimer0
   _init_adc_no_lib
   _lcd_gotoxy
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_init
     _delay_ms
     _lcd_send_byte
     _lcd_send_nibble
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
     _lcd_send_byte
   _lcd_puts
     _lcd_putc
   _read_adc_voltage
     ___fldiv
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
     _read_adc_raw_no_lib
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _isdigit
         _stoa
           _fputc
           _strlen
         _strncmp

 _highIsr (ROOT)
   _changeClockMode
   _changeOnOff
   _clockDecreminting
     i2___awdiv
     i2___lwdiv
       i2___wmul (ARG)
     i2___wmul
     i2_restartTimer0
   _reloadTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      9A       7       60.2%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6A      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     56      6B       1       84.9%
BITBIGSFRlhllhh     22      0       0      41        0.0%
BITBIGSFRhl         18      0       0      38        0.0%
BITBIGSFRlhllhl      D      0       0      43        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhhhl       B      0       0      40        0.0%
BITBIGSFRlhllhh      6      0       0      42        0.0%
BITBIGSFRlhhhh       4      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     184      12        0.0%
DATA                 0      0     184       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 04 15:36:32 2022

           ?_read_adc_voltage 0041                  ___fldiv@aexp 0040                  ___fldiv@bexp 003F  
                           _t 0104                  ___fldiv@sign 0038            ??_read_adc_voltage 0045  
                          l93 5674                            l96 568A                ?_lcd_send_byte 001C  
                ___awdiv@sign 0019                            _hr 0108                            _sp 0100  
         ___wmul@multiplicand 0016            i2___lwdiv@dividend 0007                           l100 55F6  
                         l102 5620                           l105 5782                           l122 5566  
                         l203 3724                           l108 5148                           l220 4114  
                         l212 3834                           l116 5760                           l140 51B4  
                         l133 526E                           l125 4E8A                           l119 553A  
                         l303 2646                           l311 261A                           l232 4AA4  
                         l216 4114                           l128 5754                           l225 41C4  
                         l307 2630                           l164 56BA                           l260 218C  
                         l317 570C                           l149 50D6                           l158 4F08  
                         l191 367C                           l167 4F7C                           l431 3F14  
                         l255 2130                           l256 2148                           l258 215E  
                         l259 21FE                           l444 4078                           l285 24F6  
                         l293 24CA                           l614 454E                           l289 24E0  
                         l548 4B68                           l901 317C                           l582 460C  
                         l910 31C2                           l815 4FF0                           l591 5658  
                         l808 4FE8                           l912 323A                           l904 3140  
                         l576 4CD6                           l913 3228                           l587 4652  
                         l931 2C1E                           l940 2E8C                           l845 2888  
                         l941 2E7A                           l862 29A2                           l854 2B58  
                         l846 2876                           l871 2A72                           l847 283C  
                         l935 2F82                           l872 2A60                           l938 2E14  
                         l972 3A9E                           l948 2F44                           l975 3BFA  
                         l887 5498                           l986 3B92                           l899 331C  
                         l979 3B36                           l995 5312                           _abs 55A8  
                         _lcd 000F83                           _pad 4CD8                           _bzr 010A  
                         _min 005B                           _snd 005D     read_adc_voltage@raw_value 004A  
                         wreg 000FE8                  ___flmul@aexp 0021                  ___flmul@bexp 0026  
                ___flmul@sign 0020                  ___flmul@temp 002B                  ___flmul@prod 0027  
                 lcd_gotoxy@x 0021                   lcd_gotoxy@y 001E                  ___fltol@exp1 001D  
                        l1041 4D80                          l1050 3406                          l1130 3C84  
                        l1107 1876                          l1203 5364                          ?_abs 0026  
                        l1036 4D1C                          l1221 55E6                          l1213 4750  
                        l1039 4D5E                          l1063 35D0                          l1047 33B8  
                        l1144 3D8C                          l1128 3C7C                          l1049 33C0  
                        l1321 53B4                          l1218 55DE                          l1306 5522  
                        l1074 1AFE                          l1243 4306                          l1315 55A6  
                        l1139 3D44                          l1252 3A46                          l1309 578E  
                        l1077 142C                          l1325 4912                          l1262 56E6  
                        l1270 54DE                          l1246 430E                          l1174 2114  
                        l1255 398A                          l1079 1272                          l1280 521A  
                        l1277 520A                          l1286 5404                          l5000 4AB8  
                        l5010 4ADE                          l5002 4AC0                          l1298 49DC  
                        l5020 4B16                          l5012 4AE6                          l5004 4AC4  
                        l5100 3BDA                          l5030 4B42                          l5022 4B1C  
                        l5014 4AF8                          l5006 4AD2                          l5102 3BE8  
                        l5200 5102                          l6000 2868                          l5024 4B32  
                        l5016 4B00                          l5032 4B48                          l5008 4ADA  
                        l5040 4F7E                          l5104 3BEA                          l5202 5110  
                        l6002 286A                          l5034 4B58                          l5026 4B3A  
                        l5018 4B08                          l5050 4FB6                          l5042 4F86  
                        l5204 511E                          l6100 2B38                          l6020 28F2  
                        l6012 28BA                          l6004 2874                          l5036 4B60  
                        l5028 4B3C                          l5060 4FE2                          l5052 4FBC  
                        l5044 4F98                          l5300 4F3C                          l5206 512C  
                        l6102 2B46                          l6022 28F6                          l6014 28CA  
                        l6006 2896                          l6030 2916                          l5054 4FD2  
                        l5046 4FA0                          l5310 4F6C                          l5302 4F3E  
                        l5070 3AC4                          l5062 3A4A                          l6110 54EC  
                        l5208 513A                          l6104 2B48                          l6032 293C  
                        l6040 2992                          l6024 2904                          l6016 28D8  
                        l6008 28A6                          l5056 4FDA                          l5048 4FA8  
                        l5320 4F76                          l5312 4F6E                          l5304 4F40  
                        l3800 5736                          l5080 3B1E                          l5064 3A5A  
                        l6112 54FE                          l7000 3CBE                          l6050 29E6  
                        l6042 29B8                          l6034 2970                          l6026 2906  
                        l6018 28E6                          l5058 4FDC                          l5322 4F78  
                        l5314 4F70                          l5306 4F42                          l5234 5756  
                        l3802 5746                          l5250 515A                          l6210 2FB0  
                        l6202 2F84                          l5090 3B82                          l5082 3B20  
                        l5074 3AD8                          l5066 3A68                          l6130 3DC4  
                        l6122 3D8E                          l6114 5502                          l7010 3D26  
                        l7002 3CDC                          l6060 2A10                          l6052 29F4  
                        l6044 29C8                          l6036 2972                          l6028 2910  
                        l6116 56E8                          l5316 4F72                          l5308 4F44  
                        l5236 575A                          l3580 55F8                          l3804 574C  
                        l4380 5228                          l5260 5172                          l6300 31E4  
                        l6220 2FEA                          l6212 2FC0                          l6204 2F90  
                        l5092 3BA0                          l5084 3B2C                          l5076 3AE0  
                        l5068 3AAE                          l7020 41C6                          l6140 3E20  
                        l6132 3DD2                          l6124 3D92                          l6108 54E0  
                        l7004 3CE8                          l7100 1C1E                          l6070 2A42  
                        l6062 2A20                          l6054 29F6                          l6038 2982  
                        l6118 5704                          l5318 4F74                          l3582 55FC  
                        l3806 574E                          l4390 5246                          l4382 522E  
                        l5270 518C                          l5262 5182                          l5246 514A  
                        l6310 3256                          l6302 31F2                          l6230 3016  
                        l6222 2FF0                          l6214 2FD0                          l6206 2F9E  
                        l5094 3BA2                          l5086 3B68                          l5078 3AEC  
                        l7030 422E                          l7022 41DA                          l6150 3E8A  
                        l6142 3E28                          l6134 3DF2                          l6126 3DA0  
                        l7014 3D56                          l7006 3D1E                          l7110 1C94  
                        l7102 1C2C                          ?_pad 0024                          l5192 50D8  
                        l6080 2A9C                          l6072 2A58                          l6056 2A04  
                        l6048 29DC                          l6064 2A22                          l3808 5752  
                        l4392 5256                          l4384 5234                          l5272 51A2  
                        l5264 5188                          l5256 515E                          l5248 514E  
                        l4800 50CA                          l5280 569E                          l6320 32C2  
                        l6312 3264                          l6304 3220                          l6240 3050  
                        l6232 3026                          l6224 2FF6                          l6216 2FD2  
                        l6208 2FA0                          l5096 3BA6                          l5088 3B74  
                        l7032 4236                          l6160 3ED4                          l6152 3EAA  
                        l6144 3E3C                          l6136 3DF6                          l6128 3DC0  
                        l6400 2CE4                          l7016 3D6A                          l7008 3D22  
                        l7120 1D2C                          l7112 1CB8                          l7104 1C4C  
                        l5194 50DA                          l6090 2B18                          l6082 2AD6  
                        l6058 2A0C                          l6066 2A30                          l5290 4F2A  
                        l3578 55EA                          l4394 5262                          l4386 5236  
                        l4378 521E                          l5274 51A4                          l5258 5170  
                        l5282 56A2                          l6330 3310                          l6322 32DC  
                        l6314 328E                          l6242 3066                          l6234 3036  
                        l6226 3004                          l6218 2FDA                          l5098 3BCA  
                        l7042 42A8                          l7034 423E                          l7026 41DE  
                        l6162 3EF4                          l6154 3EAC                          l6146 3E4A  
                        l6138 3E02                          l6170 3F28                          l6410 2D46  
                        l6402 2CF0                          l7018 3D6E                          l7130 1DA4  
                        l7122 1D4C                          l7114 1CC0                          l5196 50E6  
                        l6092 2B1C                          l6076 2A82                          l6084 2AD8  
                        l6068 2A34                          l6500 45CC                          l7300 376A  
                        l5292 4F2C                          l5284 4F0A                          l4388 523E  
                        l5276 568C                          l6332 3312                          l6324 32F8  
                        l6308 324A                          l6316 3292                          l6260 30BA  
                        l6244 3076                          l6252 3096                          l6236 3038  
                        l6228 3006                          l7044 42D8                          l7036 4272  
                        l7028 41FA                          l6156 3EBE                          l6148 3E5C  
                        l6180 3F98                          l6172 3F48                          l6420 2DDC  
                        l6412 2D52                          l6404 2D00                          l6340 2B5A  
                        l7060 487A                          l7052 4836                          l7140 1E62  
                        l7132 1DC0                          l7116 1CCE                          l7108 1C5A  
                        l5198 50F4                          l6094 2B2A                          l6086 2AE8  
                        l6078 2A8E                          l6510 4650                          l6502 45DA  
                        l7310 37B6                          l7302 3782                          l5294 4F36  
                        l5286 4F12                          l5278 5690                          l6326 32FC  
                        l6318 32AC                          l6270 310C                          l6262 30D4  
                        l6254 30A6                          l6246 307E                          l6238 3040  
                        l7046 42EA                          l6158 3EC4                          l6190 4010  
                        l6182 3FA0                          l6174 3F4C                          l6166 3F16  
                        l6430 2E32                          l6422 2DFA                          l6414 2D6E  
                        l6406 2D1A                          l6350 2B96                          l6342 2B66  
                        l7062 4896                          l7054 4860                          l7150 1EF8  
                        l7142 1E86                          l7134 1DDC                          l7126 1D5A  
                        l7118 1CF2                          l7230 535A                          l6096 2B30  
                        l6088 2AF8                          l6504 45EC                          l7320 40A8  
                        l7312 37EA                          l7304 378A                          l5296 4F38  
                        l5288 4F14                          l6328 330A                          l6280 3168  
                        l6272 311C                          l6264 30E4                          l6256 30A6  
                        l6248 3082                          l6192 4022                          l6184 3FB4  
                        l6176 3F5A                          l6168 3F1A                          l6440 2E9C  
                        l6432 2E36                          l6424 2E04                          l6416 2D98  
                        l6408 2D2A                          l6360 2BC8                          l6352 2BA6  
                        l6344 2B74                          l6600 46F2                          l7064 48B2  
                        l7160 1F62                          l7152 1F08                          l7144 1EBC  
                        l7136 1E32                          l7128 1D94                          l7080 1B42  
                        l7072 1B00                          l7224 5314                          l7400 2214  
                        l3794 565A                          l6098 2B32                          l6506 45FA  
                        l7330 40F4                          l7322 40B4                          l7314 407A  
                        l7306 3792                          l7250 3610                          l7242 35D2  
                        l5298 4F3A                          l6290 31A8                          l6282 316A  
                        l6274 3130                          l6266 30F4                          l7234 4E0C  
                        l6186 3FC2                          l6194 4028                          l6178 3F7A  
                        l6450 2EFE                          l6442 2EA8                          l6434 2E44  
                        l6426 2E12                          l6418 2DCE                          l6370 2C08  
                        l6362 2BD6                          l6354 2BAC                          l6346 2B76  
                        l6514 5622                          l6530 449E                          l6522 444A  
                        l6602 4704                          l6610 5568                          l7066 48C4  
                        l7058 486C                          l7162 1F6A                          l7170 1FAE  
                        l7146 1EE0                          l7090 1B70                          l7082 1B50  
                        l7074 1B24                          l7226 5320                          l7410 22AA  
                        l7402 2248                          l3796 5666                          l6508 464A  
                        l7340 417A                          l7332 4108                          l7324 40C8  
                        l7316 408C                          l7260 365C                          l7252 361C  
                        l7308 379A                          l7244 35E4                          l6292 31B2  
                        l6284 317A                          l6276 313E                          l6268 3104  
                        l7236 4E1A                          l6196 4038                          l6188 3FF0  
                        l5900 4960                          l6700 33C8                          l6460 2F66  
                        l6452 2F12                          l6444 2EB6                          l6436 2E72  
                        l6428 2E24                          l6380 2C52                          l6372 2C0E  
                        l6364 2BD8                          l6356 2BBC                          l6348 2B86  
                        l6516 5638                          l6532 44A0                          l6524 4460  
                        l6620 3856                          l6612 5578                          l7068 48EE  
                        l7180 2060                          l7172 1FCE                          l7164 1F72  
                        l7148 1EEE                          l7156 1F40                          l7084 1B52  
                        l7092 1BA4                          l7076 1B32                          l7228 533E  
                        l7500 25C8                          l7420 22F2                          l7412 22B4  
                        l7404 225E                          l3798 5670                          l5910 26B4  
                        l7350 4AA2                          l7342 49DE                          l7334 4122  
                        l7326 40D4                          l7318 4096                          l7270 36A4  
                        l7262 3670                          l7254 3630                          l7246 35F6  
                        l4790 507C                          l6294 31C0                          l6286 318C  
                        l6278 314A                          l7238 4E7A                          l6198 4058  
                        l5902 4996                          l6710 3402                          l6702 33D8  
                        l6462 2F68                          l6454 2F2C                          l6446 2EE0  
                        l6390 2CA2                          l6382 2C5E                          l6374 2C2E  
                        l6366 2BE8                          l6358 2BC2                          l6518 5648  
                        l6470 5454                          l6534 44B0                          l6606 4748  
                        l6630 393E                          l6622 38AC                          l6614 51B6  
                        l7182 2080                          l7174 2002                          l7190 20DA  
                        l7158 1F50                          l7094 1BB6                          l7086 1B64  
                        l7078 1B3E                          l7510 2626                          l7502 25DA  
                        l7430 2372                          l7422 2320                          l7414 22CA  
                        l7406 2292                          l5920 26E8                          l5912 26B6  
                        l7344 49F0                          l7336 412A                          l7328 40E8  
                        l7280 36E6                          l7272 36AC                          l7256 363C  
                        l7248 35FE                          l4792 5084                          l4784 5068  
                        l6288 31A2                          l6296 31D2                          l6720 34A6  
                        l6712 340E                          l6704 33DE                          l6480 4C6C  
                        l6456 2F48                          l6464 2F6E                          l6448 2EE4  
                        l6392 2CAE                          l6384 2C68                          l6376 2C3E  
                        l6368 2BF8                          l6472 5464                          l6560 452E  
                        l6544 44DA                          l6536 44B4                          l6528 4474  
                        l6640 3A26                          l6632 397A                          l6624 38C0  
                        l6616 51D4                          l7168 1F7A                          l7096 1BDA  
                        l7360 5300                          l7352 52C2                          l7504 25EE  
                        l7512 263C                          l7520 2686                          l7440 23C6  
                        l7432 2384                          l7424 232C                          l7416 22D6  
                        l7408 2296                          l5930 271A                          l5914 26C6  
                        l5922 26F0                          l5906 269A                          l7346 4A46  
                        l7338 4146                          l7290 373A                          l7282 36FA  
                        l7274 36BE                          l7258 3650                          l7266 3680  
                        l4786 506C                          l6298 31E0                          l4970 5538  
                        l6570 4CFA                          l6730 3562                          l6722 34AC  
                        l6714 3418                          l6706 33EE                          l6482 4C9A  
                        l6466 2F72                          l6458 2F58                          l6394 2CBA  
                        l6386 2C7E                          l6562 453E                          l6554 4502  
                        l6546 44E4                          l6538 44C2                          l6642 3A36  
                        l6626 38CE                          l6634 39AE                          l6618 3836  
                        l6650 53D6                          l6810 1282                          l7178 2036  
                        l7098 1C10                          l7194 20EC                          l7354 52D4  
                        l7506 2602                          l7514 2652                          l7450 241A  
                        l7442 23D0                          l7434 2392                          l7426 2336  
                        l7418 22E8                          l7370 2126                          l5940 2750  
                        l5932 2720                          l5924 2700                          l5916 26D6  
                        l5908 26A6                          l6492 4550                          l7348 4A4C  
                        l7292 3742                          l7284 3706                          l7276 36CA  
                        l7268 3692                          l4788 5074                          l4796 508C  
                        l4980 4E92                          l4972 5548                          l6580 4D40  
                        l6572 4D08                          l6740 35B0                          l6732 357C  
                        l6716 341E                          l6724 3510                          l6708 33FA  
                        l6484 4CAA                          l6476 4C2E                          l6396 2CC8  
                        l6388 2C8A                          l6556 450E                          l6548 44EE  
                        l6636 39EA                          l6652 53DA                          l6900 17C8  
                        l6820 136A                          l6812 1288                          l6804 1222  
                        l6660 5372                          l7188 20AE                          l7356 52DC  
                        l7516 265C                          l7508 2610                          l7460 2466  
                        l7452 2428                          l7444 23F6                          l7436 239C  
                        l7428 2368                          l7380 216C                          l7372 212A  
                        l7364 2116                          l5950 278C                          l5942 2760  
                        l5934 272E                          l5926 2706                          l5918 26E6  
                        l6494 457E                          l7294 3746                          l7286 371A  
                        l7278 36DE                          l4966 577A                          l4798 50C6  
                        l4982 4EAC                          l4990 4ED6                          l4974 555E  
                        l7710 425C                          l6582 4D6C                          l6574 4D14  
                        l6566 4CD8                          l6726 352A                          l6734 358A  
                        l6718 34A0                          l6486 4CCE                          l6478 4C5C  
                        l6398 2CD4                          l6558 451E                          l6590 4674  
                        l6638 39FE                          l6654 53E6                          l6646 53B6  
                        l6910 1896                          l6902 17D4                          l6822 137E  
                        l6830 13FA                          l6814 12BC                          l6806 123C  
                        l6750 10BE                          l6662 5376                          l7702 1B96  
                        l7358 52E4                          l7518 267A                          l7470 24C0  
                        l7462 2478                          l7454 2432                          l7446 2402  
                        l7438 23BA                          l7390 21CC                          l7382 216E  
                        l7374 2132                          l7366 211E                          l5960 27AA  
                        l5952 279A                          l5944 2762                          l5936 2730  
                        l5928 2718                          l6496 458E                          l7296 375C  
                        l7288 3724                          l7712 4EEA                          l4984 4EBA  
                        l4968 5526                          l6680 54D8                          l6672 549A  
                        l6584 55A8                          l6576 4D28                          l6568 4CE6  
                        l6736 359A                          l6728 3548                          l6488 4CD4  
                        l6592 46B2                          l6648 53CA                          l6656 53EA  
                        l6920 18C8                          l6912 18A6                          l6904 184C  
                        l6840 1460                          l6832 1434                          l6824 13B2  
                        l6816 12FA                          l6760 1108                          l6752 10C2  
                        l6744 109A                          l6664 53A8                          l7704 1F90  
                        l7480 252A                          l7472 24D6                          l7464 248A  
                        l7456 2450                          l7448 240C                          l7392 21D8  
                        l7384 219A                          l7376 2140                          l7368 2122  
                        l5970 27BE                          l5962 27AE                          l5954 279E  
                        l5938 2740                          l5946 276A                          l6498 45BC  
                        l7298 3764                          l7714 50A0                          l4986 4EC8  
                        l4978 4E8E                          l6674 549E                          l6586 55C2  
                        l6578 4D3C                          l6738 35A0                          l6690 3362  
                        l6594 46DA                          l6930 18FC                          l6922 18CC  
                        l6914 18AA                          l6906 186C                          l6850 14B0  
                        l6842 1466                          l6834 1442                          l6826 13BA  
                        l6818 132C                          l6770 1156                          l6762 1118  
                        l6754 10E6                          l6746 10A0                          l6658 5366  
                        l7706 204A                          l7490 2568                          l7482 2536  
                        l7466 249E                          l7474 24EC                          l7458 245C  
                        l7386 21AE                          l7378 2156                          l5980 27D2  
                        l5972 27C2                          l5964 27B2                          l5956 27A2  
                        l5948 277A                          l4996 4AA6                          l6668 56BC  
                        l6676 54B2                          l5892 4914                          l6692 3382  
                        l6684 331E                          l6596 46E6                          l6588 4654  
                        l6940 199A                          l6932 1900                          l6924 18D2  
                        l6916 18B0                          l6908 1888                          l6860 1548  
                        l6844 1478                          l6852 14B8                          l6836 144E  
                        l6780 1192                          l6772 1168                          l6764 1124  
                        l6756 10F0                          l6748 10B0                          l7708 20CC  
                        l7492 2572                          l7484 254A                          l7468 24B2  
                        l7476 2502                          l7396 21EE                          l7388 21BA  
                        l5990 2824                          l5982 27D6                          l5974 27C6  
                        l5966 27B6                          l5958 27A6                          l4998 4AAA  
                        l6678 54D4                          l5894 4926                          l6694 3390  
                        l6686 333E                          l6950 19F0                          l6934 1906  
                        l6918 18B8                          l6926 18D8                          l6942 199E  
                        l6870 162C                          l6862 15A0                          l6854 14C0  
                        l6846 1486                          l6838 1458                          l6790 11F4  
                        l6782 119C                          l6774 116C                          l6766 112C  
                        l6758 10F8                          l7494 25A0                          l7486 2552  
                        l7478 250C                          l7398 21FE                          l5992 2834  
                        l5976 27CA                          l5968 27BA                          l5984 27DA  
                        l5896 4938                          l6696 3392                          l6688 3352  
                        l6960 1A58                          l6952 1A20                          l6944 19BC  
                        l6936 195E                          l6928 18EA                          l6880 16C6  
                        l6872 165E                          l6864 15D4                          l6856 14D0  
                        l6848 149E                          l6792 11F8                          l6776 1172  
                        l6768 1130                          l7496 25AC                          l7488 2556  
                        l5994 284A                          l5986 27DE                          l5978 27CE  
                        l5898 4942                          l6698 33AC                          l6970 1AC0  
                        l6962 1A6E                          l6954 1A2E                          l6946 19D8  
                        l6938 1992                          l6890 179E                          l6882 16FA  
                        l6874 1674                          l6858 14E4                          l6866 15DA  
                        l6794 11FE                          l6778 117A                          l6786 11BC  
                        l7498 25B6                          l5996 2856                          l5988 2808  
                        l6972 1AD6                          l6964 1A74                          l6956 1A46  
                        l6948 19E0                          l6884 1750                          l6892 17A2  
                        l6876 16A6                          l6868 15F8                          l6796 1206  
                        l6788 11E2                          l6980 3C0E                          l5998 285A  
                        l6974 1ADE                          l6966 1A92                          l6894 17B2  
                        l6886 1756                          l6878 16B6                          l6990 3C4C  
                        l6982 3C16                          l6968 1AB0                          l6896 17BA  
                        l6888 178A                          l6992 3C5A                          l6984 3C28  
                        l6898 17C0                          l6986 3C30                          l6978 3BFC  
                        l6996 3CA6                          l6988 3C44                          l6998 3CBA  
                        STR_1 1001                          STR_2 1019                          STR_3 104A  
                        STR_4 1079                          STR_5 1095                          STR_6 1091  
                        STR_7 103F                          STR_8 107F                          STR_9 1095  
                        u3300 5620                          u3301 561C                          _PIE1 000F9D  
                        u3710 568A                          u3711 5686                          u7000 3E8A  
                        u7001 3E86                          u7010 3ED4                          u7011 3ED0  
                        u7100 2FC0                          u7020 3F28                          u7101 2FBC  
                        u7021 3F24                          u7110 3004                          u7030 3F5A  
                        u7111 3000                          u7031 3F56                          u5600 4AF8  
                        u7200 31A2                          u7120 3016                          u7040 3F98  
                        u8000 3390                          u5601 4AF4                          u7201 319E  
                        u7121 3012                          u7041 3F94                          u8001 338C  
                        u5610 4B16                          u7210 31C0                          u7130 3026  
                        u7050 3FC2                          u8010 33AC                          u5611 4B12  
                        u7211 31BC                          u7131 3022                          u7051 3FBE  
                        u8011 33A8                          u5620 4B32                          u7300 330A  
                        u7220 31E0                          u7140 3066                          u5700 3B1A  
                        u7060 3FF0                          u8020 33D8                          u8100 10BE  
                        u5621 4B2E                          u7301 3306                          u7221 31DC  
                        u7141 3062                          u5701 3B16                          u7061 3FEC  
                        u8021 33D4                          u8101 10BA                          u5630 4B58  
                        u4750 5256                          u7230 31F2                          u7150 30A6  
                        u5710 3B64                          u7070 4038                          u6510 4926  
                        u8030 33EE                          u7310 2B74                          u8110 1108  
                        u5631 4B54                          u4751 5252                          u7231 31EE  
                        u7151 30A2                          u5711 3B60                          u7071 4034  
                        u6511 4922                          u8031 33EA                          u7311 2B70  
                        u8111 1104                          u6600 2740                          u9000 49F0  
                        u5640 4F98                          u7240 3220                          u7160 311C  
                        u7080 2F9E                          u5720 3B82                          u6520 4938  
                        u8040 352A                          u7400 2E12                          u7320 2B86  
                        u8200 136A                          u8120 1118                          u6601 273C  
                        u9001 49EC                          u5641 4F94                          u4745 5226  
                        u7241 321C                          u7161 3118                          u7081 2F9A  
                        u5721 3B7E                          u6521 4934                          u8041 3526  
                        u7401 2E0E                          u7321 2B82                          u8201 1366  
                        u8121 1114                          u6610 2750                          u9010 4A46  
                        u5650 4FB6                          u4746 5228                          u7250 3236  
                        u7170 313E                          u7090 2FB0                          u5730 3B92  
                        u5570 5548                          u6530 4960                          u8050 3548  
                        u7410 2E32                          u7330 2B96                          u8210 13F6  
                        u8130 1156                          u6611 274C                          u9011 4A42  
                        u5651 4FB2                          u7251 3232                          u7171 313A  
                        u7091 2FAC                          u5731 3B8E                          u5571 5544  
                        u6531 495C                          u8051 3544                          u7411 2E2E  
                        u7331 2B92                          u8211 13F2                          u8131 1152  
                        u6700 2896                          u6620 278C                          u9020 4AA2  
                        u5580 4AB8                          u5660 4FD2                          u5900 5182  
                        u7260 324A                          u7180 3168                          u5740 3BA0  
                        u6540 4996                          u8060 3562                          u7500 4C5C  
                        u7420 2E44                          u7340 2BD6                          u8300 16B6  
                        u8220 142C                          u8140 1168                          u9100 22AA  
                        u6701 2892                          u6621 2788                          u9021 4A9E  
                        u5581 4AB4                          u5661 4FCE                          u5901 517E  
                        u7261 3246                          u7181 3164                          u5741 3B9C  
                        u6541 4992                          u8061 355E                          u7501 4C58  
                        u7421 2E40                          u7341 2BD2                          u8301 16B2  
                        u8221 1428                          u8141 1164                          u9101 22A6  
                        u6710 28A6                          u6630 279A                          u6550 26B4  
                        u5590 4AD2                          u5910 51B4                          u7270 3264  
                        u7190 318C                          u5750 3BDA                          u5670 3A5A  
                        u8070 357C                          u7510 4C9A                          u7430 2E72  
                        u7350 2BE8                          u8310 1750                          u8230 1442  
                        u8150 11E2                          u9110 22E8                          u9030 2140  
                        u6711 28A2                          u6631 2796                          u6551 26B0  
                        u5591 4ACE                          u5911 51B0                          u7271 3260  
                        u7191 3188                          u5751 3BD6                          u5671 3A56  
                        u8071 3578                          u7511 4C96                          u7431 2E6E  
                        u7351 2BE4                          u8311 174C                          u8231 143E  
                        u8151 11DE                          u9111 22E4                          u9031 213C  
                        u6800 2A04                          u6720 28D8                          u6640 2808  
                        u6560 26C6                          u5920 56BA                          u7280 32AC  
                        u5760 3BE8                          u5680 3A68                          u8080 358A  
                        u7520 4CCE                          u7440 2E88                          u7360 2BF8  
                        u7600 4494                          u8400 1A42                          u8320 179E  
                        u8240 1478                          u8160 11F4                          u9200 25C8  
                        u9120 2384                          u9040 2156                          u6801 2A00  
                        u6721 28D4                          u6641 2804                          u6561 26C2  
                        u5921 56B6                          u7281 32A8                          u5761 3BE4  
                        u5681 3A64                          u8081 3586                          u7521 4CCA  
                        u7441 2E84                          u7361 2BF4                          u8321 179A  
                        u8241 1474                          u8161 11F0                          u9201 25C4  
                        u9121 2380                          u9041 2152                          u6810 2A20  
                        u6730 28E6                          u6650 2820                          u6570 26D6  
                        u7530 457E                          u7290 32DC                          u5690 3AC4  
                        u8090 359A                          u7450 2E9C                          u7370 2C2E  
                        u7610 44C2                          u8410 1A54                          u8330 184C  
                        u8250 1486                          u8170 126E                          u9210 25DA  
                        u9130 241A                          u9050 216C                          u6811 2A1C  
                        u6731 28E2                          u6651 281A                          u6571 26D2  
                        u7531 457A                          u7291 32D8                          u5691 3AC0  
                        u8091 3596                          u7451 2E98                          u7371 2C2A  
                        u7611 44BE                          u8411 1A50                          u8331 1848  
                        u8251 1482                          u8171 126A                          u9211 25D6  
                        u9131 2416                          u9051 2168                          u6900 2AF8  
                        u6820 2A30                          u6740 2904                          u6660 2822  
                        u6580 2718                          u7540 45BC                          u7700 55C2  
                        u7460 2EB6                          u7380 2C3E                          u7620 44D6  
                        u8420 1A92                          u8340 1888                          u8260 14B0  
                        u8180 12FA                          u8500 3CDC                          u9220 25EE  
                        u9140 2478                          u9060 219A                          u6901 2AF4  
                        u6821 2A2C                          u6741 2900                          u6581 2714  
                        u7541 45B8                          u7701 55BE                          u7461 2EB2  
                        u7381 2C3A                          u7621 44D2                          u7605 448A  
                        u8421 1A8E                          u8341 1884                          u8261 14AC  
                        u8181 12F6                          u8501 3CD8                          u9221 25EA  
                        u9141 2474                          u9061 2196                          u6910 2B18  
                        u6830 2A42                          u6750 293C                          u6670 284A  
                        u6590 272E                          u7550 45DA                          u7470 2EFE  
                        u7390 2DB8                          u7630 44FE                          u7710 4694  
                        u8430 1AB0                          u8350 1896                          u8270 15F8  
                        u8190 132C                          u8510 3D0A                          u9230 2602  
                        u9150 248A                          u9070 21AE                          u6911 2B14  
                        u6831 2A3E                          u6751 2938                          u6671 2846  
                        u6591 272A                          u7551 45D6                          u7471 2EFA  
                        u7631 44FA                          u8431 1AAC                          u8351 1892  
                        u8271 15F4                          u8191 1328                          u9231 25FE  
                        u9151 2486                          u9071 21AA                          u6920 2B2A  
                        u6840 2A58                          u6760 2982                          u6680 2868  
                        u7560 45FA                          u7480 2F2C                          u7640 451E  
                        u7720 46B2                          u7800 387E                          u8440 1AC0  
                        u8360 18EA                          u8280 165E                          u8520 3D44  
                        u8600 4896                          u9160 249E                          u9080 21CC  
                        u6921 2B26                          u6841 2A54                          u6761 297E  
                        u6681 2864                          u7561 45F6                          u7481 2F28  
                        u7641 451A                          u7721 46AE                          u8441 1ABC  
                        u8361 18E6                          u8281 165A                          u8521 3D40  
                        u8601 4892                          u9161 249A                          u9081 21C8  
                        u6930 2B46                          u6850 2A6E                          u6770 29B8  
                        u6690 2888                          u7570 464A                          u7490 2F66  
                        u7650 452E                          u7730 46DA                          u7810 38AC  
                        u8370 19BC                          u8290 16A6                          u8530 3D52  
                        u8610 48B2                          u9170 24B2                          u9090 21EA  
                        u6931 2B42                          u6851 2A6A                          u6771 29B4  
                        u6691 2884                          u7571 4646                          u7491 2F62  
                        u7395 2DAE                          u7651 452A                          u7731 46D6  
                        u7715 468A                          u7811 38A8                          u8371 19B8  
                        u8291 16A2                          u8531 3D4E                          u8451 3C06  
                        u8611 48AE                          u9171 24AE                          u9091 21E6  
                        u6860 2A82                          u6780 29C8                          u6940 5522  
                        u7660 4CE6                          u7580 5638                          u7740 4704  
                        u7820 38CE                          u7900 5404                          u8380 19D8  
                        u8540 3D8C                          u8460 3C28                          u8620 48C4  
                        u8700 1CF2                          u9180 254A                          u6861 2A7E  
                        u6781 29C4                          u6941 551E                          u7661 4CE2  
                        u7581 5634                          u7741 4700                          u7821 38CA  
                        u7805 3874                          u7901 5400                          u8381 19D4  
                        u8541 3D88                          u8517 3D00                          u8461 3C24  
                        u8621 48C0                          u8701 1CEE                          u9181 2546  
                        u6870 2A9C                          u6790 29F4                          u8550 41FA  
                        u6950 3DA0                          u7670 4D08                          u7590 4460  
                        u8390 1A40                          u7910 5398                          u8470 3C5A  
                        u8630 48EE                          u8710 1D94                          u9190 2568  
                        u6871 2A98                          u6791 29F0                          u9247 5258  
                        u8551 41F6                          u6951 3D9C                          u7671 4D04  
                        u7591 445C                          u8391 1A3A                          u8471 3C56  
                        u8631 48EA                          u8711 1D90                          u9191 2564  
                        u6880 2AD6                          u8800 35F6                          u8560 422A  
                        u6960 3DD2                          u7680 4D5E                          u7760 473E  
                        u7840 393A                          u7920 53A8                          u8480 3C78  
                        u8720 1DC0                          u8640 1B24                          u9257 5668  
                        u6881 2AD2                          u8801 35F2                          u8561 4226  
                        u6961 3DCE                          u7681 4D5A                          u7761 4738  
                        u7841 3936                          u7921 53A4                          u8481 3C74  
                        u8721 1DBC                          u8641 1B20                          u6890 2AE8  
                        u8810 3610                          u7930 56E0                          u8570 42D8  
                        u7690 4D6C                          u7770 4740                          u7850 395E  
                        u8490 3CA2                          u8730 1DDC                          u8650 1BB6  
                        u6891 2AE4                          u8811 360C                          u7931 56DA  
                        u8571 42D4                          u6971 3DFC                          u7691 4D68  
                        u7755 4716                          u7835 38E2                          u8491 3C9E  
                        u8731 1DD8                          u8651 1BB2                          u8900 371A  
                        u8820 3630                          u7940 56E2                          u8580 42EA  
                        u6980 3E20                          u7860 397A                          u7836 38EC  
                        u7780 55A6                          u8740 1E86                          u8660 1BDA  
                        u8901 3716                          u8821 362C                          u8581 42E6  
                        u6981 3E1C                          u7861 3976                          u7837 38FC  
                        u7781 55A2                          u7917 538E                          u8741 1E82  
                        u8661 1BD6                          u8910 373A                          u8830 3650  
                        u7950 54B2                          u6990 3E4A                          u7870 39CE  
                        u7790 51D4                          u8590 4860                          u8750 1EBC  
                        u8670 1C1E                          u8911 3736                          u8831 364C  
                        u7951 54AE                          u6991 3E46                          u7855 3954  
                        u7791 51D0                          u8591 485C                          u8751 1EB8  
                        u8671 1C1A                          u8920 375C                          u8840 3670  
                        u7960 54D4                          u7880 39EA                          u8760 1EE0  
                        u8680 1C94                          u8921 3758                          u8841 366C  
                        u7961 54D0                          u7881 39E6                          u8761 1EDC  
                        u8681 1C90                          u8930 3782                          u8850 3692  
                        u7970 334E                          u7890 3A26                          u8770 1FCA  
                        u8690 1CB8                          u8931 377E                          u8851 368E  
                        u7971 3348                          u7891 3A22                          u7875 39C4  
                        u8771 1FC6                          u8691 1CB4                          u8940 408C  
                        u8860 36A4                          u7980 3350                          u8780 535A  
                        u8941 4088                          u8861 36A0                          u8781 5356  
                        u8950 40A8                          u8870 36BE                          u8790 35E4  
                        u7990 3362                          u8951 40A4                          u8871 36BA  
                        u8791 35E0                          u7991 335E                          u8960 40C8  
                        u8880 36DE                          u8961 40C4                          u8881 36DA  
                        u8970 40E8                          u8890 36FA                          u8971 40E4  
                        u8891 36F6                          u8980 4108                          u8981 4104  
                        u8990 4122                          u8991 411E              ?_lcd_send_nibble 0001  
                        _Mode 0063                          abs@a 0026                          _dbuf 010E  
                        _labs 51B6                          _atoi 41C6                          _main 2116  
                        _dtoa 331E                          _init 4F0A                          _prec 0059  
                        _oven 0061                          pad@i 002B                          pad@p 0028  
                        fsr1h 000FE2            i2___lwdiv@quotient 000B                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 002D                          fsr2l 000FD9                          _stoa 3BFC  
                        btemp 006C                 ___fpclassifyf 4654                          prodh 000FF4  
                        prodl 000FF3                          start 000E               ___fldiv@new_exp 0039  
                 main@voltage 0196                  ___param_bank 000000                         ??_abs 0028  
                       ??_pad 002A             _clockDecreminting 4310          __end_of_delay_cycles 5622  
               ___fltol@sign1 001C               __end_of___aodiv 3F16                         ?_labs 0014  
                       ?_atoi 001A               __end_of___fladd 2B5A                         ?_main 0001  
                       ?_dtoa 002F               __end_of___aomod 407A                         ?_init 0001  
             __end_of___fldiv 331E               __end_of___awdiv 4B6A               __end_of___flneg 565A  
                       STR_10 1091                         STR_11 1073                         STR_20 1067  
                       STR_12 105B                         STR_21 1061                         STR_13 1067  
                       STR_22 106D                         STR_30 108D                         STR_14 1061  
                       STR_23 1055                         STR_15 106D                         STR_32 108D  
                       STR_24 1085                         STR_16 1055                         STR_17 102E  
                       STR_18 1073                         STR_19 105B                         STR_27 1089  
             __end_of___flmul 2F84               __end_of___flsub 549A               __end_of___fltol 4550  
                       ?_stoa 001D                         _T0CON 000FD5               ___awdiv@divisor 0016  
             __end_of___lwdiv 4FF2                         i2l105 578C                         i2l113 4448  
                       i2l240 47E0                         i2l250 482A                         i2l235 576C  
                       i2l317 5732                         i2l245 47F6                         i2l246 482A  
                       i2l247 480C                         i2l184 5452                         i2l178 4E08  
                       i2l548 4C2C                         i2l815 5064                         i2l808 505C  
             ___awdiv@counter 0018                  vfpfcnvrt@fmt 00B5            ?_clockDecreminting 0001  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _PORTD 000F83  
     read_adc_voltage@channel 0049                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TRISE 000F96  
     __end_of_changeClockMode 4E0A               __end_of_highIsr 4836                         _flags 0069  
                       _fputc 4914                         _fputs 54E0               __end_of_isdigit 56E8  
                       _hours 0065               _init_adc_no_lib 5756           ??_clockDecreminting 000E  
             __end_of_buzzerF 514A                         labs@a 0014                         atoi@n 0021  
                       pad@fp 0024                         atoi@s 001A                         _width 0057  
                       _state 006A                         _putch 578E                         dtoa@d 0031  
                       dtoa@i 0050                         dtoa@n 0047                         dtoa@p 0043  
                       dtoa@s 004F                         dtoa@w 0045               __end_of_isspace 54E0  
                       tablat 000FF5              __end_ofi2___wmul 5734                         plusw1 000FE3  
                       plusw2 000FDB                         stoa@i 0029                         stoa@l 0031  
                       stoa@p 002F                         stoa@s 001F                         stoa@w 002B  
                       ttemp5 006D                         ttemp6 0070                         ttemp7 0074  
                       status 000FD8       read_adc_voltage@voltage 0045                         wtemp8 006D  
             __end_of_sprintf 5314                ?___fpclassifyf 0014               __end_of_strncmp 4914  
             __initialization 5270                  __end_of_labs 521C                  __end_of_atoi 4310  
                __end_of_main 269A                  __end_of_dtoa 35D2               ??_lcd_send_byte 001D  
                __end_of_init 4F7E                  __end_of_stoa 3D8E     __end_of_clockDecreminting 444A  
              _decrementClock 407A                        ??_labs 0018                        ??_atoi 001C  
                      ??_main 0057                        ??_dtoa 0039                        ??_init 0014  
                      ??_stoa 0021                 __activetblptr 000002                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        ?_fputc 0014  
                      ?_fputs 001D                        _ADRESH 000FC4                        _ADRESL 000FC3  
            ___awdiv@dividend 0014                        ?_putch 0001                        i2l5120 570E  
                      i2l5130 4B7C                        i2l5122 572A                        i2l5210 4310  
                      i2l5140 4BA2                        i2l5132 4B84                        i2l5220 4386  
                      i2l5212 4312                        i2l5150 4BDA                        i2l5142 4BAA  
                      i2l5134 4B88                        i2l5126 4B6A                        i2l5118 5784  
                      i2l5230 43FA                        i2l5222 4398                        i2l5214 435C  
                      i2l5160 4C06                        i2l5152 4BE0                        i2l5144 4BBC  
                      i2l5136 4B96                        i2l5128 4B6E                        i2l5232 4444  
                      i2l5224 43A0                        i2l5216 436E                        i2l5330 4DA2  
                      i2l5154 4BF6                        i2l5146 4BC4                        i2l5162 4C0C  
                      i2l5138 4B9E                        i2l5170 4FF2                        i2l5218 4380  
                      i2l5226 43AA                        i2l5340 4DF4                        i2l5332 4DB4  
                      i2l5324 4D82                        i2l5164 4C1C                        i2l5156 4BFE  
                      i2l5148 4BCC                        i2l5180 502A                        i2l5172 4FFA  
                      i2l5228 43C6                        i2l5500 47D0                        i2l5342 4E00  
                      i2l5334 4DC0                        i2l5326 4D84                        i2l5350 5430  
                      i2l5166 4C24                        i2l5158 4C00                        i2l5190 5056  
                      i2l5182 5030                        i2l5174 500C                        i2l5510 481C  
                      i2l5502 47D8                        i2l5336 4DD4                        i2l5328 4D96  
                      i2l5352 5442                        i2l5344 5406                        i2l5184 5046  
                      i2l5176 5014                        i2l5512 4824                        i2l5504 47EE  
                      i2l5338 4DE0                        i2l5346 5408                        i2l5186 504E  
                      i2l5178 501C                        i2l5506 4804                        i2l5348 541C  
                      i2l5188 5050                        i2l5508 481A                        i2l5464 5762  
                      i2l5480 475C                        i2l5466 576A                        i2l5490 4790  
                      i2l5482 476A                        i2l5492 4794                        i2l5484 476E  
                      i2l5494 47AA                        i2l5486 4772                        i2l5496 47B2  
                      i2l5488 4788                        i2l5498 47B8                 vfpfcnvrt@done 00BC  
            __end_of___xxtofl 3BFC              __end_of_delay_ms 568C                  vfprintf@cfmt 00D1  
            __end_of_lcd_init 51B6                        ___flge 4550              __end_of_lcd_putc 4F0A  
                      ___fleq 4C2E              __end_of_lcd_puts 56BC        __end_of_decrementClock 41C6  
                   ??___aodiv 0024                     ??___fladd 001C                     ??___aomod 0024  
                      ___wmul 56E8                     ??___fldiv 0030                     ??___awdiv 0018  
                   ??___flneg 0018                     ??___flmul 001C                     ??___flsub 0035  
                   ??___fltol 0018                        _efgtoa 109A                     ??___lwdiv 001E  
                      _floorf 3836                        _memcpy 53B6                        clear_0 5296  
                      clear_1 52A2                        clear_2 52AE              ___awdiv@quotient 001A  
                      isa$std 000001                        pad@buf 0026                        main@p1 0192  
                   ??_highIsr 0012                        dtoa@fp 002F                        _strcpy 5568  
                      _strlen 5366                i2___awdiv@sign 0006               i2_restartTimer0 5784  
     __end_of_init_adc_no_lib 5762                _controlingTemp 49DE                        fputc@c 0014  
                      fputs@c 0021                        fputs@i 0022                        fputs@s 001D  
                   ??_isdigit 0016             __end_ofi2___awdiv 4C2E                     ??_buzzerF 0018  
             ___fpclassifyf@e 001C               ___fpclassifyf@u 001E               ___fpclassifyf@x 0014  
           __end_ofi2___lwdiv 5066                  __mediumconst 0000                     ??_isspace 0016  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
            ?_changeClockMode 0001                        stoa@cp 002D                        stoa@fp 001D  
                      putch@c 0001              __end_of_vfprintf 5366                     ??_sprintf 0057  
                   ??_strncmp 001A                    ___flge@ff1 002D                    ___flge@ff2 0031  
             ??___fpclassifyf 0018                  ___xxtofl@arg 0024                  ___xxtofl@exp 0023  
                ___xxtofl@val 001A                    ___fleq@ff1 0014                    ___fleq@ff2 0018  
                  __accesstop 0080       __end_of__initialization 52B4                    ___flneg@f1 0014  
               ___rparam_used 000001                    ___fltol@f1 0014                __pcstackCOMRAM 0001  
             ?_decrementClock 0001                  __pidataBANK0 576E                 __end_of_fputc 49DE  
               __end_of_fputs 5524                 __end_of_putch 5790        __end_of_controlingTemp 4AA6  
                   ?i2___wmul 0001             lcd_gotoxy@address 0022                       ??_fputc 0018  
                     ??_fputs 0021                       ??_putch 0014                    __pbssBANK0 00F5  
                  __pbssBANK1 0100   __end_of_read_adc_raw_no_lib 5568                  _delay_cycles 55E8  
                  __pnvCOMRAM 006A                 ?_reloadTimer0 0001         __end_of_restartTimer0 5784  
              lcd_send_byte@n 001C                       ?___flge 002D                       ?___fleq 0014  
                     ?___wmul 0014       __end_ofi2_restartTimer0 578E                       ?_efgtoa 0080  
            lcd_send_nibble@n 001B                    _flagToggle 00FD                       ?_floorf 0041  
                     ?_memcpy 0014               ?_controlingTemp 0001                       ?_strcpy 0014  
                     ?_strlen 0014                    ??i2___wmul 0005              ?_init_adc_no_lib 0001  
                     _INTCON2 000FF1                       _INTCON3 000FF0                     ?___xxtofl 001A  
                   ?_delay_ms 0014                    _lcd_gotoxy 5066                     ?_lcd_init 0001  
                   ?_lcd_putc 0001                     ?_lcd_puts 0026                ??_reloadTimer0 0001  
                     __Hparam 0000                       __Lparam 0000                       ___aodiv 3D8E  
                     ___fladd 269A                       ___aomod 3F16                       ___fldiv 2F84  
                     ___awdiv 4AA6                       ___flneg 5622                       ___flmul 2B5A  
                     ___flsub 5454                       ___fltol 444A                       ___lwdiv 4F7E  
                   ?_vfprintf 00CB                  __psmallconst 1000                       __pcinit 5270  
                     __ramtop 1000                       __ptext0 2116                       __ptext1 52C2  
                     __ptext2 5314                       __ptext3 1B00                       __ptext4 4836  
                     __ptext5 3BFC                       __ptext6 5366                       __ptext7 109A  
                     __ptext8 5568                       __ptext9 53B6                       _highIsr 0008  
                   _T0CONbits 000FD5                 ??_changeOnOff 0001                       _isdigit 56BC  
                  ??___xxtofl 001E                       _buzzerF 50D8                       _minutes 0067  
                     _seconds 010C                       _isspace 549A                _incrementClock 35D2  
                  ??_delay_ms 0016                       efgtoa@c 0086                       efgtoa@d 0092  
                     efgtoa@e 0096                       efgtoa@f 0082                       efgtoa@g 00A9  
                     efgtoa@h 009E                       efgtoa@i 00A6                       efgtoa@l 00A2  
                     efgtoa@m 0094                       efgtoa@n 00AD                       efgtoa@p 0089  
                     efgtoa@t 008B                       efgtoa@u 00AF                       efgtoa@w 009C  
                     atoi@neg 001F                       _sprintf 52C2                    ??_lcd_init 001E  
                     _strncmp 4836                __pintcode_body 4752                    ??_lcd_putc 0023  
                  ??_lcd_puts 0028          end_of_initialization 52B4                       floorf@e 004F  
                     floorf@m 004B                       floorf@u 0051                       floorf@x 0041  
                     memcpy@d 001B                       memcpy@n 0018                       memcpy@s 001D  
                     fputc@fp 0016                 __Lmediumconst 0000                       int_func 4752  
                     fputs@fp 001F           i2___wmul@multiplier 0001          lcd_send_byte@cm_data 001D  
           __end_of_vfpfcnvrt 2116                    efgtoa@mode 0090                    efgtoa@sign 00A8  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE              vfpfcnvrt@convarg 00C0  
            ?i2_restartTimer0 0001                    ??_vfprintf 0057         __end_of_lcd_send_byte 5270  
                     strcpy@d 001A                       strlen@a 0016                       strcpy@s 0018  
                     strlen@s 0014                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTCbits 000F82                     _PORTEbits 000F84        __end_of_incrementClock 3836  
                 ___fladd@grs 0023                 ___xxtofl@sign 0022              _read_adc_voltage 4E0A  
                 ?_lcd_gotoxy 001E                   ___fldiv@grs 003B                    main@Buffer 015E  
                 ___fldiv@rem 0034                     i2___awdiv 4B6A           __end_of_changeOnOff 5454  
             _LCD_INIT_STRING 00F1             i2___lwdiv@divisor 0009                     i2___lwdiv 4FF2  
           i2___lwdiv@counter 000D                   ___flmul@grs 0022                    _total_time 005F  
            ??_decrementClock 0021            i2___awdiv@dividend 0001                __end_of___flge 4654  
              __end_of___fleq 4CD8                   vfpfcnvrt@ap 00B7                   vfpfcnvrt@cp 00C9  
                 vfpfcnvrt@fp 00B3                __end_of___wmul 570E                __end_of_efgtoa 1B00  
               delay_cycles@n 0017                 delay_cycles@x 0018             ??_lcd_send_nibble 001A  
              __end_of_floorf 3A48                __end_of_memcpy 5406                    floorf@F526 00F5  
            i2___wmul@product 0005               ?_incrementClock 0001          __end_of_reloadTimer0 576E  
              __end_of_strcpy 55A8                __end_of_strlen 53B6           start_initialization 5270  
          i2___awdiv@quotient 0007                   __end_of_abs 55E8                   __end_of_pad 4D82  
                  ?i2___awdiv 0001                    ?i2___lwdiv 0007         __end_of___fpclassifyf 4752  
                 vfprintf@fmt 00CD              ??_controlingTemp 0039                      ??___flge 0035  
                    ??___fleq 001C                      ??___wmul 0018                      ??_efgtoa 0055  
                 __pdataBANK0 00EA  read_adc_raw_no_lib@raw_value 0018                      ??_floorf 0045  
                    ??_memcpy 001A                      ??_strcpy 0018                      ??_strlen 0016  
                   ___fladd@a 0018                     ___fladd@b 0014                   _changeOnOff 5406  
                   ___fldiv@a 002C                     ___fldiv@b 0028                     ___flmul@a 0018  
                   ___flmul@b 0014                   __pbssCOMRAM 0057                     ___flsub@a 0031  
                   ___flsub@b 002D                 __pcstackBANK0 0080                 __pcstackBANK1 015E  
            ___aodiv@dividend 0014                   _efgtoa$1477 008D              ___lwdiv@dividend 001A  
                   _dtoa$1446 0041                     __pintcode 0008                      ?___aodiv 0014  
                    ?___fladd 0014                      ?___aomod 0014                      ?___fldiv 0028  
                    ?___awdiv 0014              ___aodiv@quotient 0026                      ?___flneg 0014  
                    ?___flmul 0014                      ?___flsub 002D                      ?___fltol 0014  
                    ?___lwdiv 001A                      ?_highIsr 0001                   __smallconst 1000  
                    ?_isdigit 0014                      ?_buzzerF 0001                      ?_isspace 0014  
            ___lwdiv@quotient 001E                   ??i2___awdiv 0005                      ?_sprintf 00D3  
                    ?_strncmp 0014                   ??i2___lwdiv 000B                ___wmul@product 0018  
                   delay_ms@i 0016                     delay_ms@n 0014      __end_of_read_adc_voltage 4E8C  
                    i2u623_40 476A                      i2u623_41 4766                      i2u624_40 4788  
                    i2u624_41 4784                      i2u625_40 47AA                      i2u625_41 47A6  
                    i2u626_40 47D0                      i2u626_41 47CC                      i2u627_40 47EE  
                    i2u627_41 47EA                      i2u580_40 4BBC                      i2u628_40 4804  
                    i2u580_41 4BB8                      i2u628_41 4800                      i2u581_40 4BDA  
                    i2u629_40 481A                      i2u581_41 4BD6                      i2u629_41 4816  
                    i2u582_40 4BF6                      i2u582_41 4BF2                      i2u583_40 4C1C  
                    i2u583_41 4C18                      i2u584_40 500C                      i2u584_41 5008  
                    i2u593_40 4D96                      i2u585_40 502A                      i2u593_41 4D92  
                    i2u585_41 5026                      i2u594_40 4DB4                      i2u578_40 4B7C  
                    i2u586_40 5046                      i2u594_41 4DB0                      i2u578_41 4B78  
                    i2u586_41 5042                      i2u595_40 4DD4                      i2u579_40 4B96  
                    i2u587_40 436E                      i2u595_41 4DD0                      i2u579_41 4B92  
                    i2u587_41 436A                      i2u596_40 4DF4                      i2u588_40 4380  
                    i2u596_41 4DF0                      i2u588_41 437C                      i2u597_40 541C  
                    i2u589_40 4398                      i2u597_41 5418                      i2u589_41 4394  
                    i2u598_40 5442                      i2u598_41 543E                      _RCONbits 000FD0  
           ??_changeClockMode 0001    read_adc_raw_no_lib@channel 001A                     _vfpfcnvrt 1B00  
                  _ADCON0bits 000FC2             ___wmul@multiplier 0014                      i2___wmul 570E  
                   lcd_init@i 001E                     lcd_putc@c 0025             i2___awdiv@divisor 0003  
                   lcd_puts@s 0026             i2___awdiv@counter 0005                  ??_lcd_gotoxy 001F  
                _isspace$1575 0018                    vfpfcnvrt@c 00C8                   _INTCON2bits 000FF1  
                 _INTCON3bits 000FF0                     copy_data0 5284               _lcd_send_nibble 5734  
                _reloadTimer0 5762                      __Hrparam 0000                     memcpy@tmp 001A  
                  vfprintf@ap 00CF                      __Lrparam 0000                    vfprintf@fp 00CB  
               _restartTimer0 577A            __end_of_lcd_gotoxy 50D8              ??_incrementClock 0021  
       i2___wmul@multiplicand 0003                    ?_vfpfcnvrt 00B3               ___aodiv@divisor 001C  
             ___aodiv@counter 0024            ___fpclassifyf@F465 00F9                    sprintf@fmt 00D5  
                    ___xxtofl 3A48                      _main$844 0180                      _main$838 017E  
                    _main$871 018A                      _main$855 0182                      _main$872 018C  
                    _main$856 0184                      _main$873 018E                      _main$857 0186  
                    _delay_ms 565A                      _main$874 0190                      _main$858 0188  
             ___lwdiv@divisor 001C               ___lwdiv@counter 0020                      __ptext10 51B6  
                    __ptext11 3836                      __ptext20 54E0                      __ptext12 4654  
                    __ptext21 4914                      __ptext13 444A                      __ptext30 5524  
                    __ptext22 578E                      __ptext14 5454                      __ptext31 3A48  
                    __ptext23 55A8                      __ptext15 5622                      __ptext40 5756  
                    __ptext32 2F84                      __ptext24 3F16                      __ptext16 2B5A  
                    __ptext41 4F0A                      __ptext33 568C                      __ptext25 3D8E  
                    __ptext17 4C2E                      __ptext50 269A                      __ptext42 577A  
                    __ptext34 4E8C                      __ptext26 41C6                      __ptext18 331E  
                    __ptext51 50D8                      __ptext43 35D2                      __ptext35 5066  
                    __ptext27 549A                      __ptext19 4CD8                      __ptext60 5406  
                    __ptext52 565A                      __ptext44 407A                      __ptext36 514A  
                    __ptext28 56BC                      __ptext61 4D82                      __ptext45 56E8  
                    __ptext37 521C                      __ptext29 4E0A                      __ptext54 5762  
                    __ptext46 4F7E                      __ptext38 5734                      __ptext55 4310  
                    __ptext47 4AA6                      __ptext39 55E8                      __ptext56 5784  
                    __ptext48 49DE                      __ptext57 570E                      __ptext49 4550  
                    __ptext58 4FF2                      __ptext59 4B6A                      _lcd_init 514A  
                    _lcd_putc 4E8C                      _lcd_puts 568C                    strcpy@dest 0014  
               ?_delay_cycles 0001             ??_init_adc_no_lib 0014                      efgtoa@fp 0080  
                    efgtoa@ne 0087                      efgtoa@pp 008F                      efgtoa@ou 0098  
                   stoa@F1175 00EA                ?_restartTimer0 0001                      isa$xinst 000000  
                    int$flags 006C                      _vfprintf 5314              ___aomod@dividend 0014  
                ?_changeOnOff 0001                _vfpfcnvrt$1510 00BE                    _INTCONbits 000FF2  
                    memcpy@d1 0014                      memcpy@s1 0016                      isdigit@c 0014  
         _read_adc_raw_no_lib 5524                      intlevel2 0000                     sprintf@ap 00DD  
     __end_of_lcd_send_nibble 5756                ??_delay_cycles 0014                      isspace@c 0014  
                   strcpy@src 0016                     strncmp@_l 0014                     strncmp@_r 0016  
        ?_read_adc_raw_no_lib 0014                   efgtoa@nmode 0091               ___aomod@divisor 001C  
                 ??_vfpfcnvrt 00B9                      stoa@nuls 0022               ___aomod@counter 0024  
               _lcd_send_byte 521C                      sprintf@f 00DF                      sprintf@s 00D3  
                    strncmp@l 001B                      strncmp@n 0018                      strncmp@r 001D  
               ___fladd@signs 0020                  ___aodiv@sign 0025             ??i2_restartTimer0 0001  
             _changeClockMode 4D82                  ___fladd@aexp 0021                  ___fladd@bexp 0022  
                ___aomod@sign 0025               ??_restartTimer0 0014         ??_read_adc_raw_no_lib 0016  
